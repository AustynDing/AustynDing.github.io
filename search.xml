<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hello-world</title>
      <link href="/2023/02/27/hello-world/"/>
      <url>/2023/02/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>page0</title>
      <link href="/2023/02/27/page0/"/>
      <url>/2023/02/27/page0/</url>
      
        <content type="html"><![CDATA[<p>4444444</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第七课 存储器</title>
      <link href="/2023/02/27/%E7%AC%AC%E4%B8%83%E8%AF%BE%20%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/2023/02/27/%E7%AC%AC%E4%B8%83%E8%AF%BE%20%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>第七课 存储器.md<a name="Bj1VP"></a></p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>存储器(Memory )由一定数量的单元【一个单元往往存储的是一个字节】构成，每个单元可以<strong>被唯一标识</strong>，每个单元都有<strong>存储一个数值</strong>的能力</p><ul><li><strong>址</strong>：单元的唯一标识符（采用二进制)</li><li><strong>地址空间</strong>：可唯一标识的单元总数</li><li><strong>寻址能力</strong>∶存储在每个单元中的信息的位数，即<strong>内存中能被单独识别并独立存放一个数据的最小内存空间</strong><ul><li>大多数存储器是字节(8bit )寻址的，32位计算机的最大寻址空间为4GB </li><li><img src="https://cdn.nlark.com/yuque/__latex/967952ba4e1b290af0e1170cb711f7f9.svg#card=math&code=2%5E%7B32%7D&id=fQbSc"> &#x3D; <img src="https://cdn.nlark.com/yuque/__latex/77bd38e6cb7126e96b7a68955b408bd0.svg#card=math&code=4GB&id=ItdrJ">。<br><a name="taQ02"></a></li></ul></li></ul><h3 id="存储器层次结构"><a href="#存储器层次结构" class="headerlink" title="存储器层次结构"></a>存储器层次结构</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666253958970-418b3025-a214-4fa8-aa46-706fa6efa141.png#averageHue=%23e5e5e5&clientId=ub8eb2440-6783-4&from=paste&height=447&id=ua3629ce6&name=image.png&originHeight=559&originWidth=532&originalType=binary&ratio=1&rotation=0&showTitle=false&size=77658&status=done&style=shadow&taskId=u0ee56dff-8e33-4567-afe0-bc8300ee56d&title=&width=425.6" alt="image.png"></p><ol><li>层次结构的原因：在<strong>成本</strong>的限制下，达到容量和速度的兼容。<br><a name="XFbYN"></a></li></ol><h3 id="半导体存储器"><a href="#半导体存储器" class="headerlink" title="半导体存储器"></a>半导体存储器</h3><ul><li>双稳态：没有外部信号，会保持目前所处的状态</li><li>单稳态：只能处于一种状态，给予一种刺激由0变为1后，会慢慢变为0 – 类似弹簧</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666254345494-87a5d603-a811-4b9c-829f-ef154d153ff2.png#averageHue=%23f7f6f5&clientId=uee6e58dd-16dd-4&from=paste&height=456&id=u14674a41&name=image.png&originHeight=570&originWidth=852&originalType=binary&ratio=1&rotation=0&showTitle=false&size=145059&status=done&style=shadow&taskId=u04ddf2cc-9496-4a52-a207-fe7fed403c3&title=&width=681.6" alt="image.png"><br><a name="pCACJ"></a></p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><p>介质：半导体<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666254421485-b941dcbc-e923-474c-8211-dbf4d265860b.png#averageHue=%23f1edec&clientId=uee6e58dd-16dd-4&from=paste&height=317&id=u2079a660&name=image.png&originHeight=396&originWidth=889&originalType=binary&ratio=1&rotation=0&showTitle=false&size=142028&status=done&style=shadow&taskId=u48287049-4794-40c8-9e08-d29eb726af4&title=&width=711.2" alt="image.png"></p><ul><li>U盘属于快闪存储器<code>flash</code>的一种</li><li><strong>易失性：断电后数据是否能够保存</strong><br><a name="n2oKf"></a></li></ul><h3 id="读写存储器"><a href="#读写存储器" class="headerlink" title="读写存储器"></a>读写存储器</h3><p><a name="oGcG1"></a></p><h4 id="随机存取存储器-RAM"><a href="#随机存取存储器-RAM" class="headerlink" title="随机存取存储器 RAM"></a>随机存取存储器 RAM</h4><ol><li>反面：顺序存储器-磁带。需要倒带到特定顺序才能播放</li><li>随机不是代表位置的存取是随机的，而是代表时间是相同的</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666254829463-6a3bbbcd-da16-4124-9c15-d8e0d4b3b188.png#averageHue=%23f9f8f7&clientId=uee6e58dd-16dd-4&from=paste&height=390&id=u5fb5a692&name=image.png&originHeight=488&originWidth=897&originalType=binary&ratio=1&rotation=0&showTitle=false&size=140241&status=done&style=shadow&taskId=uc6166f29-1bc1-432c-8331-b6916f93e61&title=&width=717.6" alt="image.png"><br><a name="qy6gs"></a></p><h4 id="SRAM"><a href="#SRAM" class="headerlink" title="SRAM"></a>SRAM</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668405615011-cf967293-5688-4e45-b96c-c6ffcd502f0b.png#averageHue=%23f7f5f5&clientId=u7ba1636e-b302-4&from=paste&height=574&id=u68e50b2b&name=image.png&originHeight=718&originWidth=963&originalType=binary&ratio=1&rotation=0&showTitle=false&size=137260&status=done&style=shadow&taskId=ub913295b-1b3e-442c-adb7-05f99d0aaae&title=&width=770.4" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671717235240-4933daf0-c023-4cb9-9503-3ab3edb7fd28.png#averageHue=%23ededed&clientId=ud9c9b9ab-c2a9-4&from=paste&height=367&id=ua064c793&name=image.png&originHeight=527&originWidth=709&originalType=url&ratio=1&rotation=0&showTitle=false&size=109001&status=done&style=shadow&taskId=ucda958dd-bde8-42cb-855a-5b587242d0f&title=&width=494.20001220703125" alt="image.png"><br /><strong>写0操作</strong><br />写0的时候，首先将BL输入0电平，（～BL）输入1电平。<br />然后，相应的Word Line（WL）选通，则M5和M6将会被打开。<br />0电平（来自BL）输入到M1和M2的G极控制端<br />1电平（来自~BL）输入到M3和M4的G极控制端<br />因为M2是P型管，高电平截止，低电平导通。而M1则相反，高电平导通，低电平截止。<br />所以在0电平的作用下，M1将截止，M2将打开。（～Q)点将会稳定在高电平。<br />同样，M3和M4的控制端将会输入高电平，因NP管不同，M3将会导通，而M4将会截止。Q点将会稳定在低电平0。<br />最后，关闭M5和M6，内部M1,M2,M3和M4处在稳定状态，一个bit为0的数据就被锁存住了。<br />此时，在外部VDD不断电的情况下，这个内容将会一直保持。<br><a name="ZpF7B"></a></p><h4 id="DRAM"><a href="#DRAM" class="headerlink" title="DRAM"></a>DRAM</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666256057739-fcc9773c-f2f1-4a7e-b79d-e1115e22688d.png#averageHue=%23f7f6f5&clientId=uee6e58dd-16dd-4&from=paste&height=542&id=ua3dd46fd&name=image.png&originHeight=678&originWidth=885&originalType=binary&ratio=1&rotation=0&showTitle=false&size=155409&status=done&style=shadow&taskId=uba49fd6e-003b-42df-b702-24debe1a8c0&title=&width=708" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671717878470-c9fb358e-d087-4340-ae21-caad67462b49.png#averageHue=%23f5f5f5&clientId=ud9c9b9ab-c2a9-4&from=paste&height=367&id=ubdd811c7&name=image.png&originHeight=521&originWidth=551&originalType=url&ratio=1&rotation=0&showTitle=false&size=51332&status=done&style=shadow&taskId=u4042ad61-8d49-4eb4-83b7-c80aff111d9&title=&width=388" alt="image.png"><br />其<strong>写操作</strong>相对简单：（我们以写1为例）<br />当需要写1的时候，先将BL（Bit Line）输入高电平1，然后选中对应的Word Line（同一时间将只有一根WL被选中）, 打开相应的MOS管，如图中所示3号位。此时，外部驱动能力很强，通过一定的时间，4号位的电容将会被充满。此时，关闭3号位的MOS管。内容1将在一定时间内被保存在4号位的电容中。写0的操作与之相反，不同的是将4号位电容中的电荷通过Bit Line放光。然后关闭3号位的MOS管，锁存相应数据。<br />而<strong>读操作</strong>相对来说，较为复杂。我们可以观察到4号位电容非常小，只有pF级别，而Bit Line往往都很长，上面挂了非常多个存储单元（cell），我们可以通过5号位的电容来表示。所以当我们直接把3号位的MOS管打开，Bit Line上将基本看不到什么变化，所以需要<strong>刷新放大器</strong><br><a name="hjPYy"></a></p><h4 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666256145999-760adee0-9ba5-4380-9fc9-5a158714a86d.png#averageHue=%239f8769&clientId=uee6e58dd-16dd-4&from=paste&height=550&id=uad2e674f&name=image.png&originHeight=688&originWidth=897&originalType=binary&ratio=1&rotation=0&showTitle=false&size=472502&status=done&style=shadow&taskId=u81a55991-9096-4275-b37a-274e3b1ee7c&title=&width=717.6" alt="image.png"></p><ol><li>因为是双稳态触发器，所以不需要刷新</li><li>L3是共享的缓存</li><li>SRAM常用做CPU中的<strong>高速处理器</strong></li><li>图中黑色方块为DRAM中的芯片，存储阵列。能够拥有<strong>比较大的存储空间</strong><br><a name="mzURA"></a></li></ol><h4 id="SRAM和DRAM的区别"><a href="#SRAM和DRAM的区别" class="headerlink" title="SRAM和DRAM的区别"></a>SRAM和DRAM的区别</h4><ul><li>SRAM成本比较高（6 个场效应管组成一个存储单元）DRAM成本较低（1个场效应管加一个电容）</li><li>SRAM存取速度比较快 DRAM存取速度较慢（电容充放电时间）</li><li>SRAM一般用在高速缓存中 DRAM一般用在内存条里</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671718033563-5232ce07-47e9-4e42-94f8-95a1cac280c7.png#averageHue=%23faf6f6&clientId=ud9c9b9ab-c2a9-4&from=paste&height=300&id=u80deb285&name=image.png&originHeight=375&originWidth=360&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15835&status=done&style=shadow&taskId=u36c065e4-a3de-4d89-90d2-b5bb9a90e54&title=&width=288" alt="image.png"><br />动态存储器的定期刷新：在不进行读写操作时，DRAM 存储器的各单元处于断电状态，由于漏电的存在，保存在电容CS 上的电荷会慢慢地漏掉，为此必须定时予以补充，称为刷新操作<br><a name="PWrZ3"></a></p><h3 id="只读存储器"><a href="#只读存储器" class="headerlink" title="只读存储器"></a>只读存储器</h3><p><a name="UFvGB"></a></p><h4 id="只读存储器-ROM"><a href="#只读存储器-ROM" class="headerlink" title="只读存储器 ROM"></a>只读存储器 ROM</h4><p>好处：批量生产，能够节约成本—能达到一定的销售量<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666256377069-26da4fa4-5e53-43f3-8206-423c79ffe76b.png#averageHue=%23f6f3f2&clientId=uee6e58dd-16dd-4&from=paste&height=423&id=u74b243b6&name=image.png&originHeight=529&originWidth=840&originalType=binary&ratio=1&rotation=0&showTitle=false&size=157564&status=done&style=shadow&taskId=u6cc814ef-6c5c-4abe-a4af-a686a7e9777&title=&width=672" alt="image.png"><br><a name="U8LA9"></a></p><h4 id="可编程ROM-（PROM）"><a href="#可编程ROM-（PROM）" class="headerlink" title="可编程ROM （PROM）"></a>可编程ROM （PROM）</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666257357441-ce4c16cc-6afd-4f43-a39a-3d9599c20623.png#averageHue=%23f9f8f8&clientId=uee6e58dd-16dd-4&from=paste&height=454&id=u4e221665&name=image.png&originHeight=567&originWidth=859&originalType=binary&ratio=1&rotation=0&showTitle=false&size=123067&status=done&style=shadow&taskId=u7b14c35b-20ff-4354-a9db-ef5ec277bb4&title=&width=687.2" alt="image.png"><br><a name="h8zhH"></a></p><h3 id="主要读的存储器"><a href="#主要读的存储器" class="headerlink" title="主要读的存储器"></a>主要读的存储器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671709158151-5c2175ab-4cb3-451e-bf5f-a02f46a2e501.png#averageHue=%23fcfbfb&clientId=u9bb17fe1-ca85-4&from=paste&height=371&id=ub04b77e8&name=image.png&originHeight=464&originWidth=686&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65324&status=done&style=shadow&taskId=u4e459339-7a7d-4f21-b645-855d04aadf7&title=&width=548.8" alt="image.png"><br><a name="qSigr"></a></p><h4 id="EPROM"><a href="#EPROM" class="headerlink" title="EPROM"></a>EPROM</h4><p>缺点：</p><ol><li>不精准。芯片级的擦除，一次照射，所有的位元都会清除。</li><li>擦除时间受玻璃材质影响大</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671709272746-8078e179-56b6-4508-b232-3b11039cd711.png#averageHue=%23f3f1ef&clientId=u9bb17fe1-ca85-4&from=paste&height=426&id=uf535cb8d&name=image.png&originHeight=533&originWidth=718&originalType=binary&ratio=1&rotation=0&showTitle=false&size=196222&status=done&style=shadow&taskId=u44e14228-bd19-41b7-9a22-41dac19beb9&title=&width=574.4" alt="image.png"><br><a name="ty89k"></a></p><h4 id="EEPROM"><a href="#EEPROM" class="headerlink" title="EEPROM"></a>EEPROM</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667290556906-7e500d52-fe1b-4f87-ba5d-551781cbc4f2.png#averageHue=%23eeeeee&clientId=u9c2ba67b-3d57-4&from=paste&height=415&id=u1c04c12d&name=image.png&originHeight=519&originWidth=714&originalType=binary&ratio=1&rotation=0&showTitle=false&size=180848&status=done&style=shadow&taskId=uf542d1d1-78af-442b-ba0f-f904bedafb6&title=&width=571.2" alt="image.png"></p><ol><li>DRAM比SRAM需要更多的引脚，拥有的内存更大</li><li>存储阵列所使用的线更少 4<em>4 VS 2</em>8<br><a name="ozdnc"></a></li></ol><h4 id="快闪存储器"><a href="#快闪存储器" class="headerlink" title="快闪存储器"></a>快闪存储器</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671709396073-4cefab9d-b3d8-4846-bed4-086a8fa06292.png#averageHue=%23f7f5f4&clientId=u9bb17fe1-ca85-4&from=paste&height=377&id=u0f72215d&name=image.png&originHeight=471&originWidth=663&originalType=binary&ratio=1&rotation=0&showTitle=false&size=131596&status=done&style=shadow&taskId=udbe5ad48-5b96-4f08-8b00-6d4273af5ff&title=&width=530.4" alt="image.png"><br><a name="YCQx3"></a></p><h3 id="从位元到主存"><a href="#从位元到主存" class="headerlink" title="从位元到主存"></a>从位元到主存</h3><p><a name="B5a0Z"></a></p><h4 id="寻址单元"><a href="#寻址单元" class="headerlink" title="寻址单元"></a>寻址单元</h4><p>在寻址单元中放入多少个位元，称为寻址模式<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671709520566-2f9928de-8b40-4a24-b699-e7817ea04d70.png#averageHue=%23fbfafa&clientId=u9bb17fe1-ca85-4&from=paste&height=432&id=ued493c1f&name=image.png&originHeight=540&originWidth=706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63472&status=done&style=shadow&taskId=u39750759-4820-4be2-8d68-7e69a8c7626&title=&width=564.8" alt="image.png"><br><a name="d2Ue4"></a></p><h4 id="存储阵列"><a href="#存储阵列" class="headerlink" title="存储阵列"></a>存储阵列</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671709638263-ed6adc43-9914-45ff-8d7f-25739968d4db.png#averageHue=%23f6f4f4&clientId=u9bb17fe1-ca85-4&from=paste&height=432&id=uaf40700a&name=image.png&originHeight=540&originWidth=723&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112176&status=done&style=shadow&taskId=u9f064576-a45a-4286-9d1c-d0a6c5eaec7&title=&width=578.4" alt="image.png"></p><ul><li>对于100个寻址单元构成的存储阵列，1<em>100需要100根线；10</em>10只需要20根线</li><li>缓冲器：进行行地址和列地址的复用；在使用译码器进行解析</li><li>刷新计时器：内存主要由DRAM组成，由于电容的自然丢失，需要不断刷新</li></ul><p>DRAM本身很大，引脚的使用量大，需要行列的复用<br />SRAM容量较小，不需要行列的复用<br><a name="kLFYL"></a></p><h5 id="如何寻址：获得总线控制权"><a href="#如何寻址：获得总线控制权" class="headerlink" title="如何寻址：获得总线控制权"></a>如何寻址：获得总线控制权</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671710528848-98166ff8-0dc2-4316-a793-e6959d24fa54.png#averageHue=%23f6f4f4&clientId=u54a1dea1-9331-4&from=paste&height=356&id=u69b4f88e&name=image.png&originHeight=445&originWidth=731&originalType=binary&ratio=1&rotation=0&showTitle=false&size=87552&status=done&style=shadow&taskId=u52e3ad0e-870e-4020-8adc-7bc95226bba&title=&width=584.8" alt="image.png"><br><a name="F5JwS"></a></p><h5 id="如何寻址：行访问"><a href="#如何寻址：行访问" class="headerlink" title="如何寻址：行访问"></a>如何寻址：行访问</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666259209097-929a92c0-4753-4d8a-b8cb-f2601832a6ca.png#averageHue=%23f3eeee&clientId=u19d1bae1-499e-4&from=paste&height=338&id=uf20f3a86&name=image.png&originHeight=423&originWidth=869&originalType=binary&ratio=1&rotation=0&showTitle=false&size=135294&status=done&style=shadow&taskId=ub5d89c7d-8a6c-4e3f-96b5-29e0461664a&title=&width=695.2" alt="image.png"></p><ol><li>CPU获得总线的控制权，进行行的访问（行地址和列地址都是32位，不进行区分）</li><li>CPU发送地址</li><li>控制器进行分解</li><li>发出行地址<br><a name="LwqZ5"></a></li></ol><h5 id="如何寻址：列访问"><a href="#如何寻址：列访问" class="headerlink" title="如何寻址：列访问"></a>如何寻址：列访问</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666259229644-a2ab2965-7d3a-48b2-9068-09a40b35d5e7.png#averageHue=%23f2efef&clientId=u19d1bae1-499e-4&from=paste&height=365&id=u8d2e8eeb&name=image.png&originHeight=456&originWidth=882&originalType=binary&ratio=1&rotation=0&showTitle=false&size=149455&status=done&style=shadow&taskId=u5d66e1ed-8644-4516-b8f5-fbc44eef8ec&title=&width=705.6" alt="image.png"><br><a name="CWPKp"></a></p><h5 id="地址译码器"><a href="#地址译码器" class="headerlink" title="地址译码器"></a>地址译码器</h5><p>n位地址0101110……可以产生<br><img src="https://cdn.nlark.com/yuque/__latex/055ce37910d06a8239ef5a1ee87765f5.svg#card=math&code=2%5En&id=J97Zi">种输出，每一种输出就是一个电信号，代表选中，从而实现选择<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666259306532-4e7dacf5-e19b-4d31-b1d9-ce1759c9066c.png#averageHue=%23f6f5f4&clientId=u19d1bae1-499e-4&from=paste&height=342&id=uc238d787&name=image.png&originHeight=428&originWidth=828&originalType=binary&ratio=1&rotation=0&showTitle=false&size=87249&status=done&style=shadow&taskId=u06eddc90-d81c-413c-a9f9-0c72e9db186&title=&width=662.4" alt="image.png"><br><a name="Dbpcu"></a></p><h5 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h5><ul><li>集中式刷新：在具体的时间内，逐行刷新，但是停止CPU的读写操作了，内存一会工作一会不工作</li><li>分散式刷新：将集中分散到每一次读写操作中。刷新的时间和集中式刷新是差不多的，因为电容的流失不至于太快。不会出现不可访问的阶段</li><li>异步刷新：只要电容在一定时间内刷新即可，不被访问就刷新，一直被访问就强制刷新。读一行，刷另外一行</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666259483211-26d40a9a-22d4-4248-a49f-97b249d4009d.png#averageHue=%23f6f5f4&clientId=u19d1bae1-499e-4&from=paste&height=526&id=u3dc48508&name=image.png&originHeight=657&originWidth=841&originalType=binary&ratio=1&rotation=0&showTitle=false&size=198364&status=done&style=shadow&taskId=u9a58e514-8fd1-498e-8470-96dcd0aae6b&title=&width=672.8" alt="image.png"><br><a name="zz743"></a></p><h4 id="芯片"><a href="#芯片" class="headerlink" title="芯片"></a>芯片</h4><p>对存储阵列进行封装<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671712290026-d31348b2-b77c-46db-af2c-fc33f5c88c62.png#averageHue=%23f7f6f5&clientId=u42a7e8fc-6304-4&from=paste&height=442&id=u9a7a5ab7&name=image.png&originHeight=553&originWidth=715&originalType=binary&ratio=1&rotation=0&showTitle=false&size=136572&status=done&style=shadow&taskId=u04eb4eaf-7c84-451b-8b21-fe53564a070&title=&width=572" alt="image.png"><br><a name="f7itY"></a></p><h4 id="模块组织"><a href="#模块组织" class="headerlink" title="模块组织"></a>模块组织</h4><p>将芯片组织起来<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671712414530-dfadf9b4-2be0-4913-8852-136cefd3c093.png#averageHue=%23f5f4f3&clientId=u42a7e8fc-6304-4&from=paste&height=327&id=ua73fbba9&name=image.png&originHeight=409&originWidth=660&originalType=binary&ratio=1&rotation=0&showTitle=false&size=160628&status=done&style=shadow&taskId=ub5ae52f3-fc5e-4156-977a-15d1cce7767&title=&width=528" alt="image.png"></p><ul><li>位扩展：寻址单元的个数没有变化，改变的是寻址单元内位元的个数&#x2F;改变的是寻址模式<ul><li>地址线决定的是有多少行、有多少列，此时不变</li><li>数据线的根数增加</li></ul></li><li>字扩展：改变的是寻址单元的个数，不改变寻址单元内的位数<ul><li>改变之前：如果<strong>行列复用</strong>，16k &#x3D; 2^14需要7根地址线；改变后：64k &#x3D; 2^16，需要8根地址线。<strong>地址线只多了一根，不复用的话多两根</strong></li></ul></li><li>字、位同时扩展：既增加寻址单元个数，也会增加寻址单元内的位数<ul><li>复用多1根，不复用多2根</li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671714564708-e0fb072c-8729-47e5-b858-7cf597b9eecc.png#averageHue=%23dddddd&clientId=ud9c9b9ab-c2a9-4&from=paste&height=86&id=ue9f5deab&name=image.png&originHeight=108&originWidth=723&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85870&status=done&style=shadow&taskId=ub80b7f60-5049-41ec-b8e0-2875eff155f&title=&width=578.4" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671714679353-37b606d9-1271-479e-bee9-ac19b404163e.png#averageHue=%23efefef&clientId=ud9c9b9ab-c2a9-4&from=paste&height=443&id=uce713bea&name=image.png&originHeight=554&originWidth=584&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124521&status=done&style=shadow&taskId=u780a1854-3337-4c59-a8fa-ec40b01bb25&title=&width=467.2" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671714594150-daf87b2f-5d14-4a5b-9a33-f781bd18e1ff.png#averageHue=%23dbdbdb&clientId=ud9c9b9ab-c2a9-4&from=paste&height=89&id=u4676ec65&name=image.png&originHeight=111&originWidth=729&originalType=binary&ratio=1&rotation=0&showTitle=false&size=93227&status=done&style=shadow&taskId=u66e0781c-9b96-4a2c-bafe-8ad1eec6a44&title=&width=583.2" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671714644224-8603445c-d96f-4b74-b474-421ddc345aa6.png#averageHue=%23ebeaea&clientId=ud9c9b9ab-c2a9-4&from=paste&height=328&id=u67c21d32&name=image.png&originHeight=410&originWidth=628&originalType=binary&ratio=1&rotation=0&showTitle=false&size=139210&status=done&style=shadow&taskId=u619c7901-54e5-45db-9465-0335db6153a&title=&width=502.4" alt="image.png"><br><a name="PD1bJ"></a></p><h4 id="主存"><a href="#主存" class="headerlink" title="主存"></a>主存</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671713522289-e9df3587-148a-48be-be4f-ec589a1135e9.png#averageHue=%23a29467&clientId=u42a7e8fc-6304-4&from=paste&height=371&id=u5329b8e1&name=image.png&originHeight=464&originWidth=621&originalType=binary&ratio=1&rotation=0&showTitle=false&size=217898&status=done&style=shadow&taskId=u400d6000-2a59-4d61-b3d8-7400d9423a9&title=&width=496.8" alt="image.png"><br />红色、黄色：内存插槽，插入内存条<br />使用的是<strong>字扩展：可以访问的存储单元的个数增加了</strong><br><a name="xQdip"></a></p><h3 id="高级DRAM组织"><a href="#高级DRAM组织" class="headerlink" title="高级DRAM组织"></a>高级DRAM组织</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671716488949-7b4ba96f-542e-4eac-88e9-047846dccd3c.png#averageHue=%23f4f0ee&clientId=ud9c9b9ab-c2a9-4&from=paste&height=370&id=ud3583396&name=image.png&originHeight=463&originWidth=683&originalType=binary&ratio=1&rotation=0&showTitle=false&size=182563&status=done&style=shadow&taskId=u95edd8ac-9c47-41ff-a218-1532e11e1ee&title=&width=546.4" alt="image.png"><br><a name="wnwEQ"></a></p><h4 id="同步DRAM-SDARM"><a href="#同步DRAM-SDARM" class="headerlink" title="同步DRAM SDARM"></a>同步DRAM SDARM</h4><p>synchronous DRAM<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671716501948-49a3497e-e203-4d8d-badd-bced5faff0e6.png#averageHue=%23dddddd&clientId=ud9c9b9ab-c2a9-4&from=paste&height=61&id=u21e0ff03&name=image.png&originHeight=76&originWidth=748&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59811&status=done&style=shadow&taskId=ubb8253f3-73b9-4375-867e-461563c4189&title=&width=598.4" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666259936287-19390916-a4da-4b3e-9d75-4cd30a79e71b.png#averageHue=%23f8f6f6&clientId=u19d1bae1-499e-4&from=paste&height=539&id=uf0d12e36&name=image.png&originHeight=674&originWidth=909&originalType=binary&ratio=1&rotation=0&showTitle=false&size=111336&status=done&style=shadow&taskId=u4a844c96-27ce-400b-a280-2725018b07d&title=&width=727.2" alt="image.png"></p><ul><li>发出的是同一行数据，不需要行选</li><li>再读下一行时，需要预充电<br><a name="sapTA"></a></li></ul><h4 id="DDR-SDRAM"><a href="#DDR-SDRAM" class="headerlink" title="DDR SDRAM"></a>DDR SDRAM</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666259978458-337b22e1-d15d-4714-b519-1bf3132f5096.png#averageHue=%23f8f7f6&clientId=u19d1bae1-499e-4&from=paste&height=518&id=ue20f044b&name=image.png&originHeight=647&originWidth=848&originalType=binary&ratio=1&rotation=0&showTitle=false&size=118593&status=done&style=shadow&taskId=u8da9359f-285a-4a02-ad28-99c5338b4e4&title=&width=678.4" alt="image.png"><br />增加数据带宽</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666260064153-ad903d08-4854-4535-8622-f574d5de09ef.png#averageHue=%23f2f0ef&clientId=u19d1bae1-499e-4&from=paste&height=516&id=ua815ba22&name=image.png&originHeight=645&originWidth=919&originalType=binary&ratio=1&rotation=0&showTitle=false&size=177109&status=done&style=shadow&taskId=u60cf08d3-e808-43f2-8aae-c02710442c2&title=&width=735.2" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667291222104-2da8fbab-b5df-4519-9635-59b649075566.png#averageHue=%23e7e5e3&clientId=u9c2ba67b-3d57-4&from=paste&height=434&id=ub89da2a8&name=image.png&originHeight=543&originWidth=725&originalType=binary&ratio=1&rotation=0&showTitle=false&size=170774&status=done&style=shadow&taskId=uc0d69b43-a7ab-4889-857f-42e84a6c1d7&title=&width=580" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671716590397-287de097-6087-40ce-8bef-7dacdc97093f.png#averageHue=%23ddead3&clientId=ud9c9b9ab-c2a9-4&from=paste&height=382&id=u78ba7602&name=image.png&originHeight=478&originWidth=710&originalType=binary&ratio=1&rotation=0&showTitle=false&size=168050&status=done&style=shadow&taskId=u6dfcb821-6be9-4988-8a19-1205ab42ab6&title=&width=568" alt="image.png"><br><a name="jT70w"></a></p><h4 id="寄存器基本原理"><a href="#寄存器基本原理" class="headerlink" title="寄存器基本原理"></a>寄存器基本原理</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667292032655-b06040e3-6828-4dee-a1c2-54f97fd6e5aa.png#averageHue=%23e8e6e6&clientId=u9c2ba67b-3d57-4&from=paste&height=180&id=u1157717a&name=image.png&originHeight=225&originWidth=351&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19984&status=done&style=shadow&taskId=uee58f869-5b99-473b-83ba-4954a7b1d1f&title=&width=280.8" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667292100767-5786bfe8-2c9a-4330-b15a-8c72b7b0889a.png#averageHue=%23f2f1f1&clientId=u9c2ba67b-3d57-4&from=paste&height=410&id=uc8ba4cda&name=image.png&originHeight=513&originWidth=717&originalType=binary&ratio=1&rotation=0&showTitle=false&size=94398&status=done&style=shadow&taskId=u76baffbf-2e34-4259-9c60-f50c594daee&title=&width=573.6" alt="image.png"></p><ol><li>连接在同一个时钟周期上，32位的变化是同步的</li><li>寄存器很快：和CPU的时钟周期是同步的</li><li>存储数据：用到的是RS锁存器（是实现SRAM的基础）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第二课 计算机的顶层视图</title>
      <link href="/2023/02/27/%E7%AC%AC%E4%BA%8C%E8%AF%BE%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E9%A1%B6%E5%B1%82%E8%A7%86%E5%9B%BE/"/>
      <url>/2023/02/27/%E7%AC%AC%E4%BA%8C%E8%AF%BE%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E9%A1%B6%E5%B1%82%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>顶层设计：冯诺依曼结构&#x3D;&gt;计算机需要满足什么，具有一定的普适性。<br><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1662630204935-215bd08d-ddb1-4ea5-8005-be0a92cd10eb.png#averageHue=%23efeeee&clientId=u259fdff5-195c-4&from=paste&height=317&id=u2074fae2&name=image.png&originHeight=396&originWidth=801&originalType=binary&ratio=1&rotation=0&showTitle=false&size=68790&status=done&style=shadow&taskId=u58ebd299-b468-480e-bd55-9072c22bcbf&title=&width=640.8" alt="image.png"><br />第一台计算机：10进制<br />有反直觉的设计：2进制（最理想的进制是<code>e</code>）<br />早期：组件之间用<strong>分散方式</strong>相连，现在主要用<strong>总线方式</strong>相连<br />冯诺伊曼最重要的思想：**存储程序（Stored-program） **<br />ABC计算机是硬件编程，而不是软件编程，所以是专用计算机，而非通用计算机，不具有存储功能。<br />冯诺依曼结构将数据和程序存放在一起，而哈弗结构将两者分开。有一些ARM（Cortex-M系列）是哈佛结构，而另一些ARM（Cortex-A）是冯诺依曼结构<br><br /><br><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663229517646-09a5e875-d19b-4aeb-bedb-644b56493d27.png#averageHue=%23edecec&clientId=u3c942cbf-9317-4&from=paste&height=403&id=ufc2b3c08&name=image.png&originHeight=504&originWidth=674&originalType=binary&ratio=1&rotation=0&showTitle=false&size=157005&status=done&style=shadow&taskId=u8357d276-ff68-4e42-a523-7099aa589b5&title=&width=539.2" alt="image.png"><br />关键概念：</p><ul><li>指令和数据存储在单个读写存储器中</li><li>主存中的内容按位置访问，无需考虑其中包含的类型</li><li>CPU从一条指令到下一条指令以顺序方式执行（除非明确修改)</li><li>与CPU和内存交换从外部来源收集的数据</li><li>总线是连接两个或多个设备的通信通路</li></ul><p>不成比例扩展效应：计算机各个部分的发展是不同步的。目前CPU的发展速度远远快于存储，会出现速度匹配不一致的影响<br><a name="Wa1F4"></a></p><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p><a name="tWsLM"></a></p><h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h3><p>中央处理单元&#x2F;中央处理器 定义：获取并执行指令的计算机组成部分。由一个ALU、一个控制单元和多个寄存器构成。<br />处理器 processor：含有一个或者多个内核的物理硅片。处理器是计算机组件，用于解释和执行指令。如果一个处理器包含多个内核，则称之为<strong>多核处理器 <strong>（此处定义并不精准）<br />随着时代的发展，CPU的大小几乎不变，晶体管的数量一直增加，但是有一个物理极限。每个晶体管都可以看成一个开关，传输和开关都需要时间<br />无限增大CPU的面积&#x3D;&gt;面积增大，代表着</strong>互连延迟</strong>增大。一个时钟周期需要大于最大互联延迟<br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1663231672408-6ffbaeb9-6d3f-4b82-ad36-986165c3946e.png"></p><ol><li>传递速度不能达到光速 </li><li>未考虑开关消耗的时间</li><li>随着面积的增加，性能相应的增加变弱了，成本显著增加了<br><a name="aWja5"></a></li></ol><h3 id="CPU相关问题"><a href="#CPU相关问题" class="headerlink" title="CPU相关问题"></a>CPU相关问题</h3><p><a name="kppA3"></a></p><h4 id="问题1：CPU的频率不能无限提高"><a href="#问题1：CPU的频率不能无限提高" class="headerlink" title="问题1：CPU的频率不能无限提高"></a>问题1：CPU的频率不能无限提高</h4><ul><li>理论限制</li></ul><ol><li>MOS管开关、脉冲通过门电路需要时间</li><li>为了信号同步，每个脉冲信号需要持续一定的时间</li></ol><ul><li>制造限制</li></ul><ol><li>芯片面积越来越大，导致连线延迟越来越大，需要保证信号在设计指定时钟周期内从芯片的一角到达另一角</li><li>频率越高（即MOS管的开关频率也越高）会导致开关（电能状态变化）损耗也越高，CPU耗电和散热会提高。Mac book air（无风扇，CPU频率低）&lt;Mac boor pro（有风扇）</li></ol><p>必须在其他条件限制下，才能说频率越高性能越好<br />解决方法：改进CPU芯片结构+领域定制，面向特定领域开发芯片<br />晶体管数量的增加为更先进、更复杂的体系结构提供了基础<br><a name="u2fXc"></a></p><h4 id="问题2：内存墙的存在"><a href="#问题2：内存墙的存在" class="headerlink" title="问题2：内存墙的存在"></a>问题2：内存墙的存在</h4><p>主存和CPU之间传输数据的速度跟不上CPU的速度<br><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663233136175-44f94e9a-8ad6-40b5-bf04-43f4879b199f.png#clientId=u3c942cbf-9317-4&from=paste&height=340&id=u0c8da54d&name=image.png&originHeight=425&originWidth=754&originalType=binary&ratio=1&rotation=0&showTitle=false&size=90637&status=done&style=shadow&taskId=u6fd29b55-16d2-4df4-ada4-338786a2eeb&title=&width=603.2" alt="image.png"><br />对于CPU：希望速度变快<br />对于内存：希望存储空间变大<br />解决方法：采用高速缓存（Cache）— 和缓存进行交互，</p><ol><li>增加一级或多级缓存，以减少存储器访问频率并提高数据传输速率</li><li>增大总线的数据宽度，来增加每次所能取出的位数</li></ol><p>问题：怎么能保证数据总在缓存中呢？<br><a name="e7VEU"></a></p><h4 id="问题3：CPU等待I-x2F-O传输数据"><a href="#问题3：CPU等待I-x2F-O传输数据" class="headerlink" title="问题3：CPU等待I&#x2F;O传输数据"></a>问题3：CPU等待I&#x2F;O传输数据</h4><p>CPU在等待I&#x2F;O设备时保持空闲<br />解决方法：采用中断机制<br /><strong>中断：</strong><br><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663233507712-f20de60b-71dd-488d-8a2c-d132b63a509e.png#averageHue=%23f7f7f7&clientId=u3c942cbf-9317-4&from=paste&height=294&id=u21a9a49b&name=image.png&originHeight=368&originWidth=582&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33915&status=done&style=shadow&taskId=u1c23950b-7944-4f54-af88-136c7ba6c71&title=&width=465.6" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663233744614-224f9322-ac72-4b87-8787-25b6c9997b39.png#averageHue=%23f9f9f9&clientId=u3c942cbf-9317-4&from=paste&height=346&id=u598e4c9b&name=image.png&originHeight=432&originWidth=788&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55082&status=done&style=shadow&taskId=uf4021985-4ed5-4113-8740-9d2a4b2562a&title=&width=630.4" alt="image.png"><br><br />多重中断：</p><ol><li>多个中断处理顺序排列（无优先级）</li><li>多个中断处理嵌套排列（有优先级）</li></ol><p>最大差异：优先级的概念<br><a name="OjeA4"></a></p><h2 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663234498573-a20e53dc-2b58-4023-918a-6d1fd0abd500.png#clientId=u3c942cbf-9317-4&from=paste&height=274&id=ubb7f3114&name=image.png&originHeight=343&originWidth=377&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52255&status=done&style=shadow&taskId=u8ba7cd61-a7ad-4d53-9c7b-2d65f7a5150&title=&width=301.6" alt="image.png"><br><br />CPU中的存储器<br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663234475831-fd01e064-5c16-4604-b2c9-d4ce824a647c.png#clientId=u3c942cbf-9317-4&from=paste&height=118&id=uba757a40&name=image.png&originHeight=120&originWidth=215&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17926&status=done&style=shadow&taskId=u4c85231f-9597-42fb-8222-a43963e1b74&title=&width=211" alt="image.png"><br><a name="IlAAa"></a></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p><a name="kTOU0"></a></p><h4 id="兼容存储容量、速度和成本"><a href="#兼容存储容量、速度和成本" class="headerlink" title="兼容存储容量、速度和成本"></a>兼容存储容量、速度和成本</h4><p>约束：</p><ol><li>容量：越大越好</li><li>速度：跟上处理器</li><li>成本：相对于其他组件合理，难以做到又大又快</li></ol><p>约束之间的关系：更短的访问时间，更高的每比特成本<br />解决：层次式存储结构<br><br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663235019714-d824ab48-3b24-4793-a56e-183d384dd628.png#clientId=u3c942cbf-9317-4&from=paste&height=376&id=u4cd1f040&name=image.png&originHeight=470&originWidth=445&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50316&status=done&style=shadow&taskId=u2b8335db-a71f-4ca5-a9b6-7efe06dc4f3&title=&width=356" alt="image.png"><br><br />从上往下：</p><ul><li>数量越来越大</li><li>速度越来越慢</li><li>离CPU越来越远</li></ul><p>主板外存储器 -&gt; I&#x2F;O设备（外围设备，类似于鼠标、键盘）<br />CD：光驱读取<br />离线存储器：磁带（纪录片拍摄曾用）<br />需求</p><ul><li>大容量数据存储</li><li>高速性能</li></ul><p>解决方案：使用存储器层次结构而不是依赖单个存储器组件<br><a name="NjnIw"></a></p><h2 id="I-x2F-O模块"><a href="#I-x2F-O模块" class="headerlink" title="I&#x2F;O模块"></a>I&#x2F;O模块</h2><p>与CPU和内存交换从外部来源收集的数据<br /><strong>I&#x2F;O设备不是I&#x2F;O模块</strong><br><a name="sLu79"></a></p><h3 id="问题：I-x2F-O设备传输速率差异大"><a href="#问题：I-x2F-O设备传输速率差异大" class="headerlink" title="问题：I&#x2F;O设备传输速率差异大"></a>问题：I&#x2F;O设备传输速率差异大</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663235493942-615cb7d7-6fa4-4bb9-9d60-223203818b5a.png#averageHue=%23d3d3d3&clientId=u3c942cbf-9317-4&from=paste&height=312&id=u152a6c67&name=image.png&originHeight=390&originWidth=651&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42875&status=done&style=shadow&taskId=u24639549-c15b-49dc-bcbd-28e2aa45c2e&title=&width=520.8" alt="image.png"></p><ol><li>CPU和内存速度不匹配：Cache    -&gt; CPU必须直接和内存交换</li><li>CPU和I&#x2F;O设备：采用中断机制  -&gt; CPU可以和内存交换</li></ol><p>解决：</p><ol><li>设立缓冲区，实现不同设备上速度的统一</li><li>新的接口技术</li><li>不同的I&#x2F;O操作技术<br><a name="O135b"></a></li></ol><h2 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h2><p>两大基本特征：</p><ol><li>共享：多个部件连接在同一组总线上</li><li>分时：同一时刻，总线上只能传输一个部件发送的信息</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663235900267-cc460503-e351-4eec-9398-0b9a5f3e8bc7.png#averageHue=%23f2ece9&clientId=u3c942cbf-9317-4&from=paste&height=317&id=u74185d2f&name=image.png&originHeight=396&originWidth=831&originalType=binary&ratio=1&rotation=0&showTitle=false&size=65836&status=done&style=shadow&taskId=ud40c1859-240d-477a-95c6-871fec1ca61&title=&width=664.8" alt="image.png"><br><a name="L8rHD"></a></p><h3 id="问题：计算机部件互连复杂"><a href="#问题：计算机部件互连复杂" class="headerlink" title="问题：计算机部件互连复杂"></a>问题：计算机部件互连复杂</h3><p>解决：采用总线<br /><br><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663235983699-93504203-6207-4af3-beee-38284226035c.png#averageHue=%23f1eeee&clientId=u3c942cbf-9317-4&from=paste&height=368&id=u1045c0ba&name=image.png&originHeight=460&originWidth=799&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119180&status=done&style=shadow&taskId=ufacfe47e-23d3-4473-bdb3-09d42baf843&title=&width=639.2" alt="image.png"></p><p><a name="EQFk2"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1663236054178-9d84a416-00bd-4419-b883-6107eb085de8.png#averageHue=%23ebebeb&clientId=u3c942cbf-9317-4&from=paste&height=402&id=u9e712d4a&name=image.png&originHeight=502&originWidth=779&originalType=binary&ratio=1&rotation=0&showTitle=false&size=154115&status=done&style=shadow&taskId=ua9784216-d83a-4fb7-891a-6bf8a717b5d&title=&width=623.2" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第九课 外部存储器</title>
      <link href="/2023/02/27/%E7%AC%AC%E4%B9%9D%E8%AF%BE%20%E5%A4%96%E9%83%A8%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/2023/02/27/%E7%AC%AC%E4%B9%9D%E8%AF%BE%20%E5%A4%96%E9%83%A8%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>圆形：更方便读取数据，可以存储更多的数据</li><li>黑胶唱片：存储的是模拟信号，而不是01信号</li><li>固态硬盘比机械硬盘的抗冲击能力更好<br><a name="SMi2Q"></a></li></ul><h2 id="硬盘存储器"><a href="#硬盘存储器" class="headerlink" title="硬盘存储器"></a>硬盘存储器</h2><p><a name="j5J83"></a></p><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667974491917-af4225c2-cf15-4ecf-befc-bb40c005a734.png#averageHue=%23f2ebe9&clientId=uf654e58e-313e-4&from=paste&height=288&id=u142b96c3&name=image.png&originHeight=360&originWidth=735&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120800&status=done&style=none&taskId=u79326da8-db8f-4bcb-8270-be429d32ffe&title=&width=588" alt="image.png"></p><ul><li>唱针直接接触唱片，磁头不是直接接触磁盘，而是以非常小的间隙悬空</li><li>飞行高度更低，读取的面积更小，电磁感应更强，更易于读取数据</li><li>直接接触：唱片要30分钟从最外圈到最里面。而磁盘旋转速度很快，如果直接接触，会毁坏磁盘</li><li>飞行高度：几微米。<strong>无尘环境</strong><br><a name="TNBUm"></a></li></ul><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><ul><li>软盘：主流为1.44MB</li><li>硬盘：主流为TB级<br><a name="jLt0B"></a></li></ul><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667975348681-32192075-8856-43ee-b858-c1e0aeeb45d7.png#averageHue=%23eeedec&clientId=uf654e58e-313e-4&from=paste&height=532&id=u1ca3dd33&name=image.png&originHeight=665&originWidth=906&originalType=binary&ratio=1&rotation=0&showTitle=false&size=255820&status=done&style=none&taskId=u02bd6f8b-646d-4b8a-b8b2-5cb7b81b240&title=&width=724.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667975624407-778c818f-1d28-4a5a-b1f0-5137756fc057.png#averageHue=%23f1f0ef&clientId=uf654e58e-313e-4&from=paste&height=406&id=ue69ef94a&name=image.png&originHeight=507&originWidth=867&originalType=binary&ratio=1&rotation=0&showTitle=false&size=167086&status=done&style=none&taskId=u8c2837b9-0e7b-49a8-8461-6b8806d6b13&title=&width=693.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667975638599-4665970e-09c0-4c5b-b1b3-14d7eb67fb87.png#averageHue=%23f4f1ef&clientId=uf654e58e-313e-4&from=paste&height=346&id=u8b1ea752&name=image.png&originHeight=433&originWidth=863&originalType=binary&ratio=1&rotation=0&showTitle=false&size=138165&status=done&style=none&taskId=u4c3a2e8d-e65d-4713-9e37-84e7c737c9b&title=&width=690.4" alt="image.png"></p><ul><li>飞行高度更低了，则磁头可以更窄，这样读取的数据密度更好，一次读取的面积更少</li><li>磁头更窄，则需要离磁片的距离更近</li><li>磁盘本身不选择，而是主轴旋转</li><li>主轴连接着各层磁盘，一起旋转</li><li>磁臂<br><a name="qsLmC"></a></li></ul><h3 id="读写机制"><a href="#读写机制" class="headerlink" title="读写机制"></a>读写机制</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667975839766-06d42956-1ce0-4785-82ce-6398a63b43e8.png#averageHue=%23f4f3f2&clientId=uf654e58e-313e-4&from=paste&height=526&id=u88424a52&name=image.png&originHeight=657&originWidth=897&originalType=binary&ratio=1&rotation=0&showTitle=false&size=208920&status=done&style=none&taskId=u8a361e25-7e39-475a-a4f9-44c57b93e0a&title=&width=717.6" alt="image.png"><br><a name="g0j4g"></a></p><h4 id="写入机制"><a href="#写入机制" class="headerlink" title="写入机制"></a>写入机制</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667976121627-ee3b12b4-183a-4bec-87e1-3665fa597fa8.png#averageHue=%23f3f2f1&clientId=uf654e58e-313e-4&from=paste&height=468&id=ue14b3343&name=image.png&originHeight=585&originWidth=906&originalType=binary&ratio=1&rotation=0&showTitle=false&size=213497&status=done&style=none&taskId=uab811f9e-e44e-48bd-8e1c-922ebfb0a59&title=&width=724.8" alt="image.png"><br />单磁头读取速度较慢 – 感应电流稳定也需要时间</p><blockquote><p>传统的读机制利用了磁盘相对线圈运动时在线圈中产生电流这个效应。当磁盘表面在磁头下通过时，产生一个与数据记录电流极性相同的电流。这种方式的读磁头结构本质上与写磁头结构相同，因此，同一磁头既可用于读也可用于写。这种单磁头结构主要用于软盘系统和老式硬盘系统。</p></blockquote><p><a name="BGZd8"></a></p><h4 id="读取机制"><a href="#读取机制" class="headerlink" title="读取机制"></a>读取机制</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667976555818-3773dbb7-6835-4db3-8c16-6e914b33177f.png#averageHue=%23f1ecea&clientId=uf654e58e-313e-4&from=paste&height=455&id=uccba632a&name=image.png&originHeight=569&originWidth=912&originalType=binary&ratio=1&rotation=0&showTitle=false&size=240384&status=done&style=none&taskId=ubf4b544b-87b7-40f3-b76e-8b9eb1b898f&title=&width=729.6" alt="image.png"></p><p><a name="bTRg0"></a></p><h3 id="数据组织"><a href="#数据组织" class="headerlink" title="数据组织"></a>数据组织</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667977309941-c0e168a8-139d-4848-a741-59d52e20afd8.png#averageHue=%23f6f4f3&clientId=uf654e58e-313e-4&from=paste&height=534&id=u801a347d&name=image.png&originHeight=667&originWidth=900&originalType=binary&ratio=1&rotation=0&showTitle=false&size=217479&status=done&style=none&taskId=uf53d3fbe-73b2-4bcd-8f32-57a8610ee33&title=&width=720" alt="image.png"><br />磁道间隙：防止磁场之间互相干扰<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667977536693-af6242e4-fb76-4877-8015-5280b977bae5.png#averageHue=%23eeeceb&clientId=uf654e58e-313e-4&from=paste&height=479&id=u69b533e6&name=image.png&originHeight=599&originWidth=899&originalType=binary&ratio=1&rotation=0&showTitle=false&size=263140&status=done&style=none&taskId=u4d7ec735-e271-4338-a97e-e91f8c02a85&title=&width=719.2" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667977766417-1e9b666e-ca21-442b-b511-a2e31d070daa.png#averageHue=%23eeebea&clientId=uf654e58e-313e-4&from=paste&height=473&id=u90c11839&name=image.png&originHeight=591&originWidth=893&originalType=binary&ratio=1&rotation=0&showTitle=false&size=259968&status=done&style=none&taskId=u495d58d8-f384-4d95-ae1d-28ea800a096&title=&width=714.4" alt="image.png"></p><ul><li>速度不是恒定的 -&gt; 同一个区域以相同的角速度，不同区域角速度不同<br><a name="NyJUk"></a></li></ul><h3 id="格式化类型"><a href="#格式化类型" class="headerlink" title="格式化类型"></a>格式化类型</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667978388155-08c93ebb-6f91-44a1-b3ab-e37f3b64745d.png#averageHue=%23eceae9&clientId=uf654e58e-313e-4&from=paste&height=463&id=u37b3689a&name=image.png&originHeight=579&originWidth=888&originalType=binary&ratio=1&rotation=0&showTitle=false&size=206824&status=done&style=none&taskId=u9531da04-0eca-4eb7-bf34-f3c72bfe330&title=&width=710.4" alt="image.png"></p><ul><li>工业生产不进行格式化 </li><li>道号：柱面号</li><li>头号：一个磁盘是两面的</li><li>同步字节：同步字节是一个特殊的位模式，用来定义区域的起始点。</li><li>间隙2：判断现在的扇区是不是目的扇区，因此会产生延迟。如果没有间隙，则可能判断后数据已经略过了。<strong>间隙不被磁化</strong></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667978755789-11eecfac-150d-465c-94d4-14e43a8f963a.png#averageHue=%23f1eeec&clientId=uf654e58e-313e-4&from=paste&height=453&id=ub07ce5ba&name=image.png&originHeight=566&originWidth=906&originalType=binary&ratio=1&rotation=0&showTitle=false&size=235676&status=done&style=none&taskId=uca751a67-f328-44b6-b176-0345ef50f38&title=&width=724.8" alt="image.png"><br><a name="X0tHx"></a></p><h3 id="IO访问时间"><a href="#IO访问时间" class="headerlink" title="IO访问时间"></a>IO访问时间</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979061166-1aba53d5-c831-4b94-88b1-822df961c736.png#averageHue=%23f8f5f4&clientId=uf654e58e-313e-4&from=paste&height=463&id=u0e8e37e9&name=image.png&originHeight=579&originWidth=898&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162658&status=done&style=none&taskId=uc6c09e30-2730-4b86-8e91-504672e5e5d&title=&width=718.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979071278-a3e97956-36e4-4d90-96a6-fd6d4bd5977a.png#averageHue=%23f8f4f2&clientId=uf654e58e-313e-4&from=paste&height=330&id=u12cc2c62&name=image.png&originHeight=412&originWidth=855&originalType=binary&ratio=1&rotation=0&showTitle=false&size=107698&status=done&style=none&taskId=u4c5f0e19-c284-4821-8f69-01ae6a5069e&title=&width=684" alt="image.png"><br><a name="YNBtC"></a></p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><blockquote><p> <strong>RPM的全称为“Revolutions Per Minute”，即转每分，表示设备每分钟的旋转次数。</strong></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979209801-8427ca02-d840-48ae-9ceb-a9b41b354ec6.png#averageHue=%23f5f4f2&clientId=uf654e58e-313e-4&from=paste&height=259&id=u43017291&name=image.png&originHeight=324&originWidth=851&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89265&status=done&style=none&taskId=ueaa53d8e-f08f-4f15-8186-4d9bfd85cab&title=&width=680.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979438342-a137ae18-a619-4f40-b05e-16f8f9a52521.png#averageHue=%23f9f8f7&clientId=uf654e58e-313e-4&from=paste&height=366&id=u6ee76ab3&name=image.png&originHeight=458&originWidth=844&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71790&status=done&style=none&taskId=u5905e06d-1fbd-475d-899f-f601237d103&title=&width=675.2" alt="image.png"><br />硬盘的7200rpm的意思是7200(转&#x2F;每分钟）。每旋转一周所需时间为60×1000÷7200&#x3D;8.33毫秒，则平均旋转延迟时间为8.33÷2&#x3D;4.17毫秒(平均情况下，需要旋转半圈)。<br />一个5400(转&#x2F;每分钟)的硬盘，平均旋转延迟时间为60×1000÷5400÷2&#x3D;5.56毫秒。7200转理论上比5400转快15%。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979406165-3376c66b-3856-4cae-8de5-f2dd086de6f3.png#averageHue=%23f8f6f5&clientId=uf654e58e-313e-4&from=paste&height=473&id=uaf135f18&name=image.png&originHeight=591&originWidth=885&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110701&status=done&style=none&taskId=ubcc3e7f0-7b80-444b-8e85-f8efe9fa0f0&title=&width=708" alt="image.png"></p><p><a name="qxD1u"></a></p><h3 id="磁头寻道-x2F-磁盘调度"><a href="#磁头寻道-x2F-磁盘调度" class="headerlink" title="磁头寻道&#x2F;磁盘调度"></a>磁头寻道&#x2F;磁盘调度</h3><p><a name="KaEOY"></a></p><h4 id="先来先服务-FCFS"><a href="#先来先服务-FCFS" class="headerlink" title="先来先服务 FCFS"></a>先来先服务 FCFS</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979729752-9414d879-7952-4960-bcb3-d00772920845.png#averageHue=%23f5f2f0&clientId=uf654e58e-313e-4&from=paste&height=469&id=u011ef1fb&name=image.png&originHeight=586&originWidth=792&originalType=binary&ratio=1&rotation=0&showTitle=false&size=138071&status=done&style=none&taskId=u587f5be8-21ec-4cbf-9a5e-2ac2dd92d91&title=&width=633.6" alt="image.png"><br><a name="LnQXn"></a></p><h4 id="最短寻道时间优先-SSTF"><a href="#最短寻道时间优先-SSTF" class="headerlink" title="最短寻道时间优先 SSTF"></a>最短寻道时间优先 SSTF</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979701347-5edf41e6-38c4-4ae4-b93c-6a740efe2a56.png#averageHue=%23f3f0ee&clientId=uf654e58e-313e-4&from=paste&height=405&id=ud6df4ba0&name=image.png&originHeight=506&originWidth=809&originalType=binary&ratio=1&rotation=0&showTitle=false&size=139151&status=done&style=none&taskId=u98c98234-0459-42f4-9177-e8862dd7c37&title=&width=647.2" alt="image.png"><br />饥饿现象：如果一直要访问88 91 93 85，则只会在90号左右磁道进行，而忽略了两端的磁道请求<br><a name="Bp3r9"></a></p><h4 id="扫描-x2F-电梯-SCAN"><a href="#扫描-x2F-电梯-SCAN" class="headerlink" title="扫描&#x2F;电梯 SCAN"></a>扫描&#x2F;电梯 SCAN</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667979835267-6fcba46f-329f-4fd0-b88c-884ec2f229e8.png#averageHue=%23f3f0ee&clientId=uf654e58e-313e-4&from=paste&height=407&id=u623b57a5&name=image.png&originHeight=509&originWidth=794&originalType=binary&ratio=1&rotation=0&showTitle=false&size=147174&status=done&style=none&taskId=u16356d10-9999-47a8-91b1-8541baeec4f&title=&width=635.2" alt="image.png"><br><a name="bsNts"></a></p><h4 id="循环扫描-C-SCAN"><a href="#循环扫描-C-SCAN" class="headerlink" title="循环扫描 C-SCAN"></a>循环扫描 C-SCAN</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667980013055-dbe047d5-4f4a-42c6-8811-e9b5c0176dd2.png#averageHue=%23f4f2f0&clientId=uf654e58e-313e-4&from=paste&height=460&id=ub4135563&name=image.png&originHeight=575&originWidth=902&originalType=binary&ratio=1&rotation=0&showTitle=false&size=165879&status=done&style=none&taskId=ue4fb5d9b-d5c6-4942-bd3f-54d3484f002&title=&width=721.6" alt="image.png"><br><a name="kQe6F"></a></p><h4 id="LOOK"><a href="#LOOK" class="headerlink" title="LOOK"></a>LOOK</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667980109452-f2004148-61a4-4a2b-a816-1e5daf3dcc61.png#averageHue=%23f8f6f5&clientId=uf654e58e-313e-4&from=paste&height=403&id=u22147629&name=image.png&originHeight=504&originWidth=832&originalType=binary&ratio=1&rotation=0&showTitle=false&size=104275&status=done&style=none&taskId=u349df670-0124-4ec1-acce-777f53d77b0&title=&width=665.6" alt="image.png"><br><a name="OTieV"></a></p><h4 id="C-LOOK"><a href="#C-LOOK" class="headerlink" title="C-LOOK"></a>C-LOOK</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667980125327-aeb9d22b-f96d-43ff-8f3c-1c69cbdf858f.png#averageHue=%23f8f6f5&clientId=uf654e58e-313e-4&from=paste&height=417&id=u968b54e6&name=image.png&originHeight=521&originWidth=826&originalType=binary&ratio=1&rotation=0&showTitle=false&size=107655&status=done&style=none&taskId=u95cae29b-44f0-491f-b97b-f861513fcc6&title=&width=660.8" alt="image.png"><br><a name="lDoSx"></a></p><h2 id="光存储器"><a href="#光存储器" class="headerlink" title="光存储器"></a>光存储器</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668068497471-c0c8ee1d-976d-4c0e-bd26-35e610474bcd.png#averageHue=%23b9c9af&clientId=u876d946c-91b7-4&from=paste&height=315&id=ua0dbe1b4&name=image.png&originHeight=394&originWidth=713&originalType=binary&ratio=1&rotation=0&showTitle=false&size=261127&status=done&style=none&taskId=ua65ed019-1153-41c0-8f98-bacd3058b80&title=&width=570.4" alt="image.png"><br><a name="DDq0y"></a></p><h3 id="CD和CD-ROM"><a href="#CD和CD-ROM" class="headerlink" title="CD和CD-ROM"></a>CD和CD-ROM</h3><p> <img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668068916438-8895820d-4e36-429a-9a6e-0b66239c0cb1.png#averageHue=%23f0eeed&clientId=u876d946c-91b7-4&from=paste&height=458&id=ub071f230&name=image.png&originHeight=573&originWidth=890&originalType=binary&ratio=1&rotation=0&showTitle=false&size=193521&status=done&style=none&taskId=u4514d914-6092-42da-ad49-aa4e0078d20&title=&width=712" alt="image.png"></p><ul><li>反射材料镀在凹坑上层</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668070099129-25b37516-28c4-4967-8900-5002d8648d20.png#averageHue=%23f5f3f2&clientId=u876d946c-91b7-4&from=paste&height=538&id=u1d63854d&name=image.png&originHeight=672&originWidth=900&originalType=binary&ratio=1&rotation=0&showTitle=false&size=203255&status=done&style=none&taskId=uc4199401-15b9-4260-be99-4da4aec3254&title=&width=720" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668070082295-b6295688-1184-4bd5-87fc-8f6cbec362de.png#averageHue=%23faf9f8&clientId=u876d946c-91b7-4&from=paste&height=364&id=u9b8784d0&name=image.png&originHeight=455&originWidth=712&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63646&status=done&style=none&taskId=u85c82155-d4bd-44fa-8f56-3ee4a95372a&title=&width=569.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668070266457-a94a372a-1c11-4132-a786-47902e37fc60.png#averageHue=%23f5f4f2&clientId=u876d946c-91b7-4&from=paste&height=324&id=ueee418c3&name=image.png&originHeight=405&originWidth=839&originalType=binary&ratio=1&rotation=0&showTitle=false&size=111789&status=done&style=none&taskId=u54f39bb5-8355-40a4-a6f8-813e4cd2e59&title=&width=671.2" alt="image.png"><br><a name="Q5BMg"></a></p><h3 id="DVD-数字多功能光盘"><a href="#DVD-数字多功能光盘" class="headerlink" title="DVD 数字多功能光盘"></a>DVD 数字多功能光盘</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668070319093-78de051e-b5a1-468f-b961-922700d82db8.png#averageHue=%23f5f4f3&clientId=u876d946c-91b7-4&from=paste&height=441&id=ua4268f13&name=image.png&originHeight=551&originWidth=855&originalType=binary&ratio=1&rotation=0&showTitle=false&size=165059&status=done&style=none&taskId=u3c25088c-cb5d-4622-aa94-1aa3624987c&title=&width=684" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668070488965-698e80ec-9258-4faa-ae7e-c1dac54677d6.png#averageHue=%23e2e2e1&clientId=u876d946c-91b7-4&from=paste&height=387&id=u0928ed07&name=image.png&originHeight=484&originWidth=852&originalType=binary&ratio=1&rotation=0&showTitle=false&size=197525&status=done&style=none&taskId=uf6f3b23b-1a75-4403-9d15-d4b8367ae13&title=&width=681.6" alt="image.png"></p><blockquote><p>波长和分辨两点的最小距离是正相关的</p></blockquote><p><a name="OAJ80"></a></p><h2 id="磁带"><a href="#磁带" class="headerlink" title="磁带"></a>磁带</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668070613542-32dc61e3-43be-449f-8758-edc1dce4d1d1.png#averageHue=%23f3f2f1&clientId=u876d946c-91b7-4&from=paste&height=394&id=u00fd9d0d&name=image.png&originHeight=492&originWidth=875&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162022&status=done&style=none&taskId=u7160d334-311c-4ea3-b1c5-a28dc6bf881&title=&width=700" alt="image.png"><br><a name="XktPM"></a></p><h2 id="U盘和固态硬盘"><a href="#U盘和固态硬盘" class="headerlink" title="U盘和固态硬盘"></a>U盘和固态硬盘</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668071962854-273edac4-ddc3-425c-a360-50138c4cefe0.png#averageHue=%23f8f7f6&clientId=u876d946c-91b7-4&from=paste&height=538&id=ucdf20385&name=image.png&originHeight=673&originWidth=897&originalType=binary&ratio=1&rotation=0&showTitle=false&size=150801&status=done&style=none&taskId=u89b1eac8-1e03-4e47-b5a4-a0bf5a1adeb&title=&width=717.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668071953942-579a9213-42b4-46dd-ba97-543fe6964224.png#averageHue=%23f6f5f4&clientId=u876d946c-91b7-4&from=paste&height=289&id=u0c3b2b6a&name=image.png&originHeight=361&originWidth=821&originalType=binary&ratio=1&rotation=0&showTitle=false&size=79902&status=done&style=none&taskId=u10335e69-1a88-4b60-af03-3706a249655&title=&width=656.8" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第五课 浮点数运算</title>
      <link href="/2023/02/27/%E7%AC%AC%E4%BA%94%E8%AF%BE%20%E6%B5%AE%E7%82%B9%E6%95%B0%E8%BF%90%E7%AE%97/"/>
      <url>/2023/02/27/%E7%AC%AC%E4%BA%94%E8%AF%BE%20%E6%B5%AE%E7%82%B9%E6%95%B0%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p><a name="igMSi"></a></p><h2 id="加减法"><a href="#加减法" class="headerlink" title="加减法"></a>加减法</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665650022766-f9e0c767-60a8-48d5-8b67-8d57ba152f3b.png" alt="image.png"></p><ol><li>尾数右移时，需要返回原来的隐藏位<code>1</code></li><li>尾数右移时，需要保持负号不变，在数值高位补<code>0</code>，但不改变符号位<br><a name="DeX3z"></a></li></ol><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665653840660-c16ae184-7d93-4e26-b060-50d96009fb3a.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665653694954-dc90dddc-91f1-4521-afd4-0a10467431a0.png" alt="image.png"><br><br /><strong>有进位要去掉进位</strong>，再进行左规<br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665826155336-ebc1c0bf-aa67-44ef-96de-2d7636217132.png" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665653514684-ee78ded2-8544-4e89-9a0c-0ae8290d58a0.png" alt="image.png"><br><a name="OfVdC"></a></p><h2 id="乘除"><a href="#乘除" class="headerlink" title="乘除"></a>乘除</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665650671642-12e369a6-b8eb-44cc-aa08-c06023ccb4cd.png" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665654392640-b83d1468-53f0-472b-a872-3113abdb4c03.png" alt="image.png"><br><a name="ww3nZ"></a></p><h2 id="舍入"><a href="#舍入" class="headerlink" title="舍入"></a>舍入</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1666086972475-e8ee49d0-503d-4407-ac4f-3fdd385db9e3.png" alt="image.png"><br><a name="fw9V3"></a></p><h2 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665651221721-286719f7-7ebe-4a6d-b1d8-dccd815e8e4e.png" alt="image.png"><br />最大允许阶值 &#x3D; 127<br />最小允许阶值 &#x3D; -126<br /><strong>阶值 &#x3D; 阶码的二进制解释 - 偏置常数</strong><br /><strong>在浮点数的表示中，阶码全1和阶码全0都有特殊含义</strong><br><a name="DX7Bp"></a></p><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1666086860494-e5bafb9f-2855-4c4d-be50-cac243daee47.png" alt="image.png"></p><p><br />双精度：阶下溢用0表示。<br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665654690567-f1ac72ae-b798-4777-a0ff-f2da8da37a85.png" alt="image.png"><br><a name="YWTY5"></a></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665655265428-f33b3675-8474-44a4-988f-45696f22da9a.png" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1666080813814-89570370-a4e8-4b86-ae86-56e784b4442f.png" alt="image.png"><br><a name="yvgPc"></a></p><h4 id="D-F-F-x3D-x3D-F"><a href="#D-F-F-x3D-x3D-F" class="headerlink" title="D+F-F &#x3D;&#x3D; F"></a>D+F-F &#x3D;&#x3D; F</h4><p>什么时候不成立？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">float</span> y = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">-100</span>; i &lt; <span class="number">100</span>; ++i) &#123;</span><br><span class="line">        <span class="type">double</span> w = <span class="built_in">pow</span>(<span class="number">2</span>, i);</span><br><span class="line">        <span class="keyword">if</span> ((y + w) - w != y) &#123;</span><br><span class="line"><span class="comment">//            cout &lt;&lt; y+w-w&lt;&lt;&quot;!!!&quot;;</span></span><br><span class="line"><span class="comment">//            cout &lt;&lt; y &lt;&lt;endl;</span></span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当<code>i &gt;=53</code>时，不成立。因为<strong>双精度浮点数的尾数长度为52，所以，</strong><code>**1.0**</code><strong>在对阶过程中，因为阶值变成了53，所以相当于1前面增加了53个0，而尾数最长只有52，所以1就被舍去了。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第六课 二进制编码的十进制数运算</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%85%AD%E8%AF%BE%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81%E7%9A%84%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B0%E8%BF%90%E7%AE%97/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%85%AD%E8%AF%BE%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BC%96%E7%A0%81%E7%9A%84%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B0%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>使用原因</p><ul><li>精度限制</li><li>转换成本高</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666081387420-f366e86a-ff4f-4eeb-8311-fe2d76e27c1a.png#averageHue=%23fdfbfa&clientId=u6a8753f8-1f45-4&from=paste&height=335&id=u199229a7&name=image.png&originHeight=419&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42104&status=done&style=shadow&taskId=ua62403ae-6d95-404f-9260-63905244e72&title=&width=645.6" alt="image.png"><br><a name="fSLnM"></a></p><h3 id="加法溢出判定"><a href="#加法溢出判定" class="headerlink" title="加法溢出判定"></a>加法溢出判定</h3><p><a href="https://www.yuque.com/austyn-c3emm/gralc7/ylxgy0?view=doc_embed">第四课 整数运算（难！</a><br><a name="uY2xc"></a></p><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><ol><li>如果产生了进位1加0110</li><li>如果没产生进位，但是大于9了，产生进位</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666081877406-8d3e57a1-7d04-407c-bd20-78852572edcc.png#averageHue=%23f9f9f8&clientId=ub420b084-ae65-4&from=paste&height=499&id=u9424f373&name=image.png&originHeight=624&originWidth=850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=129998&status=done&style=shadow&taskId=u21dcb3ed-cf11-4247-ae73-b655752b5f6&title=&width=680" alt="image.png"><br /><strong>总是加上6</strong><br /><strong>0101+1001 &#x3D; 1110 【14】(BCD码中无法得到14) + 0110 &#x3D; 0100</strong><br />10进位和16进位刚好差一个6，所以补上6即可</p><blockquote><p>25 + 39 &#x3D; 64<br>需要额外增加 0110 原因是产生了进位。虽然表面上没有直接的1进位产生。但是，是<strong>用10进制的形式</strong>来进行计算，此时1110已经大于10了，所以产生了进位</p></blockquote><p><a name="d5pZC"></a></p><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666082710595-3a11b950-5693-4d5d-84c2-d5249e416b34.png#averageHue=%23f8f5f4&clientId=u96b1b7b7-829f-4&from=paste&height=456&id=u7dc6bdb4&name=image.png&originHeight=570&originWidth=864&originalType=binary&ratio=1&rotation=0&showTitle=false&size=161685&status=done&style=shadow&taskId=u0a05b24b-f333-4a80-b24c-fd53e0e1e34&title=&width=691.2" alt="image.png"><br /><code>0000</code> 直接反转 得到 <code>1111</code> &#x3D; 15 -<img src="https://cdn.nlark.com/yuque/__latex/712ecf7894348e92d8779c3ee87eeeb0.svg#card=math&code=x&id=yElQK"><br />但实际上需要得到 <img src="https://cdn.nlark.com/yuque/__latex/86425515e44fc2984e8d6ce52d55fefe.svg#card=math&code=9-x&id=YePKB"><br />所以</p><ol><li>按位反转，得到 <img src="https://cdn.nlark.com/yuque/__latex/64867a0c30675c4a967e0868cc1611e2.svg#card=math&code=15-x&id=mIJbv">，添加<code>1010</code> 得到<img src="https://cdn.nlark.com/yuque/__latex/c44eb78ddbdd675b0dfb5856b81a2478.svg#card=math&code=25-x&id=qj1Ci">，又因为最大值为<code>16</code>所以会自动减16 得到<img src="https://cdn.nlark.com/yuque/__latex/86425515e44fc2984e8d6ce52d55fefe.svg#card=math&code=9-x&id=jkD9y"></li><li>添加<code>0110</code>，得到 <img src="https://cdn.nlark.com/yuque/__latex/511a2066360dc99ee97aa5e56e91e7c5.svg#card=math&code=x%2B6&id=IDNp6">,再按位反转，得到<img src="https://cdn.nlark.com/yuque/__latex/0444b220b41a5ed0d1a6bee589c8f657.svg#card=math&code=15-%28x%2B%206%29%20%3D%209-x&id=AxJCH"></li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1666083071821-d2e8151f-cdcc-47ea-9961-1813f5ac9673.png#averageHue=%23fafaf9&clientId=u96b1b7b7-829f-4&from=paste&height=516&id=u993e3ed5&name=image.png&originHeight=645&originWidth=853&originalType=binary&ratio=1&rotation=0&showTitle=false&size=134100&status=done&style=shadow&taskId=ue3d55fd4-23ce-4098-8353-09e306d5c6a&title=&width=682.4" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第八课 高速缓存器</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%85%AB%E8%AF%BE%20%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98%E5%99%A8/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%85%AB%E8%AF%BE%20%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>对于直接映射的块交换还无法形成完整的逻辑自洽<ul><li>如何求的块内地址、标记、cache行号</li><li><strong>如何根据主存地址去寻找</strong></li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667292334410-03283cfc-3b29-4262-9e22-71ef3dbb1bc2.png#averageHue=%23d4cfce&clientId=u06f12690-f928-4&from=paste&height=110&id=ufb3b688a&name=image.png&originHeight=138&originWidth=184&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20497&status=done&style=shadow&taskId=u910ba778-f06c-46f4-962d-2a2443948db&title=&width=147.2" alt="image.png"><br />寄存器和<code>Cache</code>就集成在CPU中了<br />内存墙：CPU的速度比内存（受限于电容）的速度快得多<br />解决：CPU和内存之间增加<code>Cache</code><br><a name="CaZuv"></a></p><h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p><a name="CSLN2"></a></p><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667292567472-9d5959d8-a0e0-44c1-93c8-4196b1beaaac.png#averageHue=%23f1f0f0&clientId=u06f12690-f928-4&from=paste&height=562&id=ua6f3159f&name=image.png&originHeight=702&originWidth=1384&originalType=binary&ratio=1&rotation=0&showTitle=false&size=145095&status=done&style=shadow&taskId=u5c674d57-db2b-41ad-be53-087988e940b&title=&width=1107.2" alt="image.png"><br><a name="yX2VV"></a></p><h4 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667292699652-b0ed8ba5-ae22-433b-b333-890d38384200.png#averageHue=%23f0eeed&clientId=u06f12690-f928-4&from=paste&height=303&id=u620568ec&name=image.png&originHeight=379&originWidth=694&originalType=binary&ratio=1&rotation=0&showTitle=false&size=121611&status=done&style=shadow&taskId=u33f73924-e427-418b-9e25-5a23fb60eff&title=&width=555.2" alt="image.png"></p><ul><li>如何判断是命中还是未命中？</li><li>如果未命中，为什么不直接把所需要的字从内存传送到CPU？<ul><li>时间局部性</li></ul></li><li>如果未命中，为什么从内存中读入一个块而不只读入一个字？<ul><li>空间局部性</li></ul></li><li>使用<code>Cache</code>后需要更多的操作，为什么还可以节省时间？<ul><li><br /><a name="WvfYN"></a></li></ul></li></ul><h4 id="命中VS未命中"><a href="#命中VS未命中" class="headerlink" title="命中VS未命中"></a>命中VS未命中</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667293060253-505d30ef-10f6-4824-95fc-6d3e8a72b7f7.png#averageHue=%23f5f1ef&clientId=u06f12690-f928-4&from=paste&height=107&id=u26f0c368&name=image.png&originHeight=134&originWidth=683&originalType=binary&ratio=1&rotation=0&showTitle=false&size=51690&status=done&style=shadow&taskId=ue151d8ad-46a1-405d-96d7-c41857ea3ed&title=&width=546.4" alt="image.png"><br />通过这种映射关系判断有无命中<br><a name="BLU4w"></a></p><h4 id="程序访问的局部性原理"><a href="#程序访问的局部性原理" class="headerlink" title="程序访问的局部性原理"></a>程序访问的局部性原理</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667293140962-04cc6eae-a14c-4b3f-93be-d17bf41743bc.png#averageHue=%23f0eeee&clientId=u06f12690-f928-4&from=paste&height=294&id=ue781c9ad&name=image.png&originHeight=367&originWidth=691&originalType=binary&ratio=1&rotation=0&showTitle=false&size=94471&status=done&style=shadow&taskId=udb808d65-418b-4d5d-8d33-e712d39e5e7&title=&width=552.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667294596527-0cf700f6-71c6-444b-acb7-b1c0b5392e3c.png#averageHue=%23f6f4f4&clientId=u06f12690-f928-4&from=paste&height=479&id=u9b94cb24&name=image.png&originHeight=599&originWidth=821&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126104&status=done&style=shadow&taskId=u829ac499-7260-4732-822a-7237e97338c&title=&width=656.8" alt="image.png"></p><ul><li>把块给<code>Cache</code>，把字给处理器</li><li>两种方式时间开销上无较大差异</li><li>系统总线代表主存，主存速度很慢，而<code>CPU</code>会一直申请数据，所以需要缓冲器</li></ul><p>因为会重复访问特定的数据<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667294557008-b0914a4a-57d2-49f2-b8f2-3fd4007be848.png#averageHue=%23f5f3f3&clientId=u06f12690-f928-4&from=paste&height=414&id=u8af13f3a&name=image.png&originHeight=518&originWidth=717&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106137&status=done&style=shadow&taskId=u8cc1ef63-e1c1-4976-b8e9-449cc8b7605&title=&width=573.6" alt="image.png"></p><ul><li>字在某一个块中，传递块而不是字</li><li>通过标记，判断字所在的块命中了，则字命中了&#x3D;&gt;所以块是预先划分好的</li><li>方便访问相邻数据<br><a name="h7IOU"></a></li></ul><h4 id="平均访问时间"><a href="#平均访问时间" class="headerlink" title="平均访问时间"></a>平均访问时间</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667295313429-3eb83d8c-ec9c-45d2-aab0-a5778b5f7c9b.png#averageHue=%23f3efef&clientId=u06f12690-f928-4&from=paste&height=426&id=ued9588fe&name=image.png&originHeight=533&originWidth=709&originalType=binary&ratio=1&rotation=0&showTitle=false&size=159493&status=done&style=shadow&taskId=ue830bb04-77d1-4c90-865a-ca3ede6af4d&title=&width=567.2" alt="image.png"><br /><code>Tc</code>：做的是检查<br /><code>Ta = 检查时间+访问主存的时间（1-p 需要访问）</code></p><ol><li>降低<code>Tm</code>很难，受到电容的限制</li><li>命中率高要求cache大，而这会使访问cache时间变大<br><a name="LpKUq"></a></li></ol><h4 id="Cache未命中原因"><a href="#Cache未命中原因" class="headerlink" title="Cache未命中原因"></a>Cache未命中原因</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667295595914-e082f099-0bb8-40aa-a756-a2127b17c664.png#averageHue=%23f2f1f1&clientId=u06f12690-f928-4&from=paste&height=421&id=u54e70fd4&name=image.png&originHeight=526&originWidth=704&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151580&status=done&style=shadow&taskId=u55f252fe-bfe2-4282-88e4-6695773d036&title=&width=563.2" alt="image.png"> </p><ul><li>容量失效：原8kb的数据块访问后被后面的8kb的数据覆盖。如果再要访问到该8kb的数据，因为已经被替换了，则会失败，导致失效</li><li>冲突失效：<img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667384986023-53efd5cd-671e-4f4a-b4d8-a3f6b8390d2c.png#averageHue=%23fdf2f0&clientId=u647f0978-e0e2-4&from=paste&height=65&id=u2fae8525&name=image.png&originHeight=81&originWidth=179&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7841&status=done&style=shadow&taskId=u3d542744-0fb1-4260-94fc-e09a3e6f230&title=&width=143.2" alt="image.png"><br><a name="n370z"></a></li></ul><h3 id="Cache的设计要素"><a href="#Cache的设计要素" class="headerlink" title="Cache的设计要素"></a>Cache的设计要素</h3><ul><li>容量：太大-命中率低；太低：容量失效</li><li>映射功能：冲突失效</li><li>替换算法：用一个更小的区域放一个更大的区域，有更高概率被访问的数据留下来</li><li>写策略</li><li>Cache行大小（主存的块大小）</li><li>Cache数目<br><a name="cqwNm"></a></li></ul><h4 id="容量"><a href="#容量" class="headerlink" title="容量"></a>容量</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667295799998-8959f701-2751-4514-bfac-cb82477c6c18.png#averageHue=%23eaeaea&clientId=u06f12690-f928-4&from=paste&height=418&id=u9e3065e8&name=image.png&originHeight=522&originWidth=698&originalType=binary&ratio=1&rotation=0&showTitle=false&size=78025&status=done&style=shadow&taskId=u3ba88a78-f777-49cf-b740-c711a364969&title=&width=558.4" alt="image.png"><br />涉及到的空间局部性和所需的数据更大，则容量设置的更大<br><a name="MlIc9"></a></p><h4 id="映射功能"><a href="#映射功能" class="headerlink" title="映射功能"></a>映射功能</h4><p><a name="WqwNQ"></a></p><h5 id="直接映射"><a href="#直接映射" class="headerlink" title="直接映射"></a>直接映射</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667296212193-00f04372-8719-4439-a29b-a5998082176c.png#averageHue=%23f6f1ef&clientId=u06f12690-f928-4&from=paste&height=392&id=u1501cf55&name=image.png&originHeight=490&originWidth=847&originalType=binary&ratio=1&rotation=0&showTitle=false&size=92228&status=done&style=shadow&taskId=u46187b8d-82ed-477b-9833-e27277556c5&title=&width=677.6" alt="image.png"></p><p>使用地址的高2位就可以<img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667296380909-54fc0771-6e3d-4ce1-aed2-bc6cf0027a2a.png#averageHue=%23e8c878&clientId=u06f12690-f928-4&from=paste&height=21&id=ub6935c40&name=8A81E895498104367421DECBCC173E3F.png&originHeight=26&originWidth=25&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1551&status=done&style=shadow&taskId=u6ecf5acd-f1f5-4ebb-b616-6636b062cb6&title=&width=20" alt="8A81E895498104367421DECBCC173E3F.png">指向具体的行<br /><code>**M是128/8=16，C=4 所以n=2：**</code><br /><strong>16个块，有4行，所以一行中有4个块，所以需要2位标记</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667296502468-b839cc2a-2cf3-426a-aec8-7b6a994e409f.png#averageHue=%23f1efef&clientId=u06f12690-f928-4&from=paste&height=396&id=uec8c4e83&name=image.png&originHeight=495&originWidth=815&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124470&status=done&style=shadow&taskId=u5faf7fc6-fb89-44cd-83d7-fade549d270&title=&width=652" alt="image.png"><br /><code>CPU</code>寻找主存，通过主存地址进行寻找<br />一个块包含很多字，一个块对应的是<code>cache</code>中的一行。<br />所以要通过块内地址找到块中具体的字在哪里。</p><ul><li>什么是每行包含8个字：一个块包含了八个字，需要用3位二进制进行。这里的字可以理解为一个数据单元。</li><li>主存中包含128个字：所以主存地址为7位</li><li>主存和缓存是按块进行存储的</li><li>块的大小是相同的</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667296642223-21734d28-1639-4116-8a8b-9b5828c260a7.png#averageHue=%23f6f4f3&clientId=u06f12690-f928-4&from=paste&height=506&id=ucadff43d&name=image.png&originHeight=633&originWidth=866&originalType=binary&ratio=1&rotation=0&showTitle=false&size=133543&status=done&style=shadow&taskId=u3fffeb46-09f2-4e14-81d9-9f9eceee242&title=&width=692.8" alt="image.png"><br />命中了的话再根据子块内地址找到对应的字<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667388177145-4c64d0e3-aebd-48b3-b1d2-de30698abe5d.png#averageHue=%23d4c890&clientId=u647f0978-e0e2-4&from=paste&height=338&id=u74440bbc&name=image.png&originHeight=423&originWidth=653&originalType=binary&ratio=1&rotation=0&showTitle=false&size=113026&status=done&style=shadow&taskId=uc066ac42-635d-42e9-9841-e5b0cd7303f&title=&width=522.4" alt="image.png"></p><ul><li>因为只有16行，所以只需要1位表示就行（前提是16进制）</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667388340836-59e73bb1-60ee-4569-a917-1cd05b528ab5.png#averageHue=%23ebece8&clientId=u647f0978-e0e2-4&from=paste&height=286&id=ubefed1f5&name=image.png&originHeight=358&originWidth=652&originalType=binary&ratio=1&rotation=0&showTitle=false&size=78588&status=done&style=shadow&taskId=u576897db-d504-4ace-a585-1a578a31415&title=&width=521.6" alt="image.png"><br /> <code>Cache</code>中本身不记录行号和块号，是逻辑上产生<br><a name="Xcxzr"></a></p><h6 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h6><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667463892544-629a5f53-40c6-44ad-864d-2cc90f1af93d.png#averageHue=%23f2f2f2&clientId=uaa87a2dc-af29-4&from=paste&height=386&id=uf7c8ff23&name=image.png&originHeight=483&originWidth=851&originalType=binary&ratio=1&rotation=0&showTitle=false&size=113352&status=done&style=shadow&taskId=u88e8484a-9700-4759-8e93-508e6b443c6&title=&width=680.8" alt="image.png"></p><ul><li>行数变多：数据之间的关联性降低，因此冲突失效概率降低</li><li>电路简单：增大容量，但是映射关系仍然保持一致，所以检查时间变化不大</li><li>降低检查时间<code>Tc</code>，增加命中率，这两者直接存在矛盾。<br><a name="hzC0t"></a></li></ul><h5 id="全相联映射"><a href="#全相联映射" class="headerlink" title="全相联映射"></a>全相联映射</h5><p>一个主存块可以装入<code>Cache</code>任意一行，所以不需要记录行号了<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667464555767-4bc9de8e-c557-4d46-98f1-47547de9ee39.png#averageHue=%23f9f8f8&clientId=uaa87a2dc-af29-4&from=paste&height=289&id=ue6200868&name=image.png&originHeight=361&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=70535&status=done&style=shadow&taskId=uc4a47100-55bc-454a-a5df-a81d89a6a67&title=&width=655.2" alt="image.png"><br><a name="o9XHQ"></a></p><h6 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h6><p>代价：</p><ol><li>需要知道哪一行是空的</li><li>要访问每一行，所以容量增大的话，则<code>Tc</code>显著增加</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667464443441-912339c9-7b78-43e0-8f95-2d115d55c81c.png#averageHue=%23f5f5f5&clientId=uaa87a2dc-af29-4&from=paste&height=306&id=u36de6e3a&name=image.png&originHeight=383&originWidth=773&originalType=binary&ratio=1&rotation=0&showTitle=false&size=64213&status=done&style=shadow&taskId=u08cb105d-968a-4e94-88c3-47aea526850&title=&width=618.4" alt="image.png"><br />对于小容量，不适合直接映射<br><a name="bfLZr"></a></p><h5 id="组关联映射"><a href="#组关联映射" class="headerlink" title="组关联映射"></a>组关联映射</h5><p>将书柜分区：中文区、日文区、英文区<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667464714834-86ff1b21-3887-49fc-a8e2-b330790f4082.png#averageHue=%23f6f4f4&clientId=uaa87a2dc-af29-4&from=paste&height=258&id=uae9304a1&name=image.png&originHeight=323&originWidth=793&originalType=binary&ratio=1&rotation=0&showTitle=false&size=81508&status=done&style=shadow&taskId=uab9e02b6-2f1f-407f-b0fe-8ec3b58c301&title=&width=634.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667464835947-858cc66f-18f1-4508-a464-4fc22d60ef5a.png#averageHue=%23f0f0f0&clientId=uaa87a2dc-af29-4&from=paste&height=337&id=udfb2e7c4&name=image.png&originHeight=421&originWidth=821&originalType=binary&ratio=1&rotation=0&showTitle=false&size=94357&status=done&style=shadow&taskId=u184c4384-f25e-4764-8ac6-963767fb001&title=&width=656.8" alt="image.png"><br><a name="t5O7u"></a></p><h6 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h6><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667465027916-d6c6957f-0522-4e65-a468-47ef90a89f8d.png#averageHue=%23f6f5f4&clientId=uaa87a2dc-af29-4&from=paste&height=176&id=u31baab90&name=image.png&originHeight=220&originWidth=564&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43211&status=done&style=shadow&taskId=u3c45c1f1-27ca-4071-81b7-7606c88f6f5&title=&width=451.2" alt="image.png"><br><a name="hu8bR"></a></p><h5 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667465192606-c777eb24-b3c9-4670-903a-33e5b7f672f8.png#averageHue=%23f4f3f3&clientId=uaa87a2dc-af29-4&from=paste&height=377&id=u0df61a14&name=image.png&originHeight=471&originWidth=834&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151939&status=done&style=shadow&taskId=u98ccacc1-1e39-4523-a43f-d4300a64015&title=&width=667.2" alt="image.png"><br /><strong>K和容量、命中率、检查时间的变化</strong><br><a name="LmvZA"></a></p><h4 id="替换算法"><a href="#替换算法" class="headerlink" title="替换算法"></a>替换算法</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667465463904-3cf6cdf1-0337-4c41-8fab-36ee1a1634bf.png#averageHue=%23f6f3f2&clientId=uaa87a2dc-af29-4&from=paste&height=272&id=u14a8e02e&name=image.png&originHeight=340&originWidth=767&originalType=binary&ratio=1&rotation=0&showTitle=false&size=145107&status=done&style=shadow&taskId=ud4ab0ecb-422e-4155-8c0e-be33c2bef4a&title=&width=613.6" alt="image.png"><br />可以通过软件进行模拟，例如解决缓存问题。但本身是通过<strong>硬件</strong>实现<br />再次访问的概率相较于其他行更低？<br><a name="x1PLV"></a></p><h5 id="最近最少使用算法-LRU？"><a href="#最近最少使用算法-LRU？" class="headerlink" title="最近最少使用算法 LRU？"></a>最近最少使用算法 LRU？</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667465619658-1f43e206-092a-4a1d-ac4e-be4858032bf2.png#averageHue=%23f2f1f1&clientId=uaa87a2dc-af29-4&from=paste&height=454&id=u9967a4cb&name=image.png&originHeight=568&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=146966&status=done&style=shadow&taskId=udea36be2-a366-4e3b-a18e-3fda1177be6&title=&width=655.2" alt="image.png"><br />非此即彼：0&#x2F;1代表的是访问时间的近远<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667466998466-045f1ece-9b44-4523-a305-fc63938562bf.png#averageHue=%23eeeceb&clientId=uaa87a2dc-af29-4&from=paste&height=450&id=u0e0b77e4&name=image.png&originHeight=562&originWidth=879&originalType=binary&ratio=1&rotation=0&showTitle=false&size=192738&status=done&style=shadow&taskId=u864d9163-b7fe-4fb7-87cf-71d83bf4acc&title=&width=703.2" alt="image.png"><br><a name="iY2yC"></a></p><h5 id="先进先出算法"><a href="#先进先出算法" class="headerlink" title="先进先出算法"></a>先进先出算法</h5><p>仍然存储抖动现象<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667467396784-995a5bb6-3d2a-42ab-a351-4d98caa8d64f.png#averageHue=%23f6f3f2&clientId=uaa87a2dc-af29-4&from=paste&height=303&id=u1bcd893f&name=image.png&originHeight=379&originWidth=781&originalType=binary&ratio=1&rotation=0&showTitle=false&size=139846&status=done&style=shadow&taskId=u0e9709c5-2032-47fb-8052-e3e32164ae4&title=&width=624.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667467358785-5ade1a2b-31a0-4927-b26a-3eda7127e036.png#averageHue=%23eeeded&clientId=uaa87a2dc-af29-4&from=paste&height=445&id=u7942a66d&name=image.png&originHeight=556&originWidth=850&originalType=binary&ratio=1&rotation=0&showTitle=false&size=170941&status=done&style=shadow&taskId=ua2f1e40b-1d41-4930-8299-30996830973&title=&width=680" alt="image.png"><br><a name="JrlNC"></a></p><h5 id="最不经常使用算法-LFU"><a href="#最不经常使用算法-LFU" class="headerlink" title="最不经常使用算法 LFU"></a>最不经常使用算法 LFU</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667467410431-db70e4fa-499c-4b88-8f6b-afdbaa5a293b.png#averageHue=%23ececec&clientId=uaa87a2dc-af29-4&from=paste&height=157&id=uc5fdee73&name=image.png&originHeight=196&originWidth=572&originalType=binary&ratio=1&rotation=0&showTitle=false&size=48689&status=done&style=shadow&taskId=u48e918da-d454-482a-9fe7-e79d6811769&title=&width=457.6" alt="image.png"><br><a name="T0X33"></a></p><h5 id="随机替换算法"><a href="#随机替换算法" class="headerlink" title="随机替换算法"></a>随机替换算法</h5><p>假设的情况和真正情况的符合度较高。所有能够进入<code>Cache</code>的数据，本身都是“万里挑一的”<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667467503132-aebe0253-1371-408e-aff9-d05d7e1c5bc1.png#averageHue=%23e8e8e8&clientId=uaa87a2dc-af29-4&from=paste&height=159&id=uc89217ea&name=image.png&originHeight=199&originWidth=583&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55326&status=done&style=shadow&taskId=u3ba83000-3bd2-4784-876e-cdec5fe3ae5&title=&width=466.4" alt="image.png"><br><a name="gw6Sv"></a></p><h4 id="写策略"><a href="#写策略" class="headerlink" title="写策略"></a>写策略</h4><p><a name="JVQGR"></a></p><h5 id="缓存命中时的写策略"><a href="#缓存命中时的写策略" class="headerlink" title="缓存命中时的写策略"></a>缓存命中时的写策略</h5><p><a name="v8bXo"></a></p><h6 id="写直达"><a href="#写直达" class="headerlink" title="写直达"></a>写直达</h6><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667468245448-bceb6ff8-8f87-4729-b2dd-ca4e2eefd1e0.png#averageHue=%23f9f8f7&clientId=uaa87a2dc-af29-4&from=paste&height=274&id=u909fe84e&name=image.png&originHeight=343&originWidth=804&originalType=binary&ratio=1&rotation=0&showTitle=false&size=82476&status=done&style=shadow&taskId=u32a89be7-6223-427d-b435-c90fb2f4244&title=&width=643.2" alt="image.png"><br><a name="VRVWw"></a></p><h6 id="写回法"><a href="#写回法" class="headerlink" title="写回法"></a>写回法</h6><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667468274096-63437b84-2bb1-4d6d-904a-40a4d23337e7.png#averageHue=%23f2efed&clientId=uaa87a2dc-af29-4&from=paste&height=302&id=u05651da9&name=image.png&originHeight=378&originWidth=754&originalType=binary&ratio=1&rotation=0&showTitle=false&size=140973&status=done&style=shadow&taskId=u6ec55546-b61e-4ab7-b96f-d8fde292785&title=&width=603.2" alt="image.png"><br><a name="ov8D6"></a></p><h5 id="缓存未命中时的写策略"><a href="#缓存未命中时的写策略" class="headerlink" title="缓存未命中时的写策略"></a>缓存未命中时的写策略</h5><p>写不分配：对安全要求较高的<br />写分配：程序中隐含较多时间和空间的局部性<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667468309563-d70f3f1b-5d70-4e61-8581-9f3a5932716e.png#averageHue=%23eeeeee&clientId=uaa87a2dc-af29-4&from=paste&height=257&id=uca6be284&name=image.png&originHeight=321&originWidth=836&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89539&status=done&style=shadow&taskId=u2471faee-3d5f-43f0-aa02-5dd8b38dce9&title=&width=668.8" alt="image.png"><br><a name="VfMw8"></a></p><h4 id="行大小"><a href="#行大小" class="headerlink" title="行大小"></a>行大小</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667468442985-db7915c2-ce8e-4f60-961c-986426baea6f.png#averageHue=%23eae8e8&clientId=uaa87a2dc-af29-4&from=paste&height=369&id=u4f935287&name=image.png&originHeight=461&originWidth=854&originalType=binary&ratio=1&rotation=0&showTitle=false&size=203749&status=done&style=shadow&taskId=u384e63bc-b92f-4a62-8cd4-398b7066505&title=&width=683.2" alt="image.png"><br />不是违反了时间关系，而是违反了时间局部性：<strong>重复访问存储在相同位置的信息</strong>，那么每一次找都要找很久<br />反空间局部性：**重复<br><a name="Po3ao"></a></p><h4 id="Cache数目"><a href="#Cache数目" class="headerlink" title="Cache数目"></a>Cache数目</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667468656923-5bf32d4e-8fa1-43b2-9eb4-763f086628bc.png#averageHue=%23eeeeee&clientId=uaa87a2dc-af29-4&from=paste&height=244&id=uc84faddd&name=image.png&originHeight=305&originWidth=840&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97318&status=done&style=shadow&taskId=u0219c0e0-0f21-4e92-8dac-b13a61bb8f4&title=&width=672" alt="image.png"><br />冯诺依曼：指令和数据不区分。根据阶段进行区分<br />对与<code>Cache</code>，数据很快会把Cache填满，而指令也会频繁使用-都受到局部性的支配，所以需要消除竞争关系，避免冲突失效<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1667468849188-a8539d6d-e141-41ab-b533-9be656164c6e.png#averageHue=%23f9f8f7&clientId=uaa87a2dc-af29-4&from=paste&height=264&id=u624bfb43&name=image.png&originHeight=330&originWidth=795&originalType=binary&ratio=1&rotation=0&showTitle=false&size=93674&status=done&style=shadow&taskId=u016d61dc-1701-4cf6-a482-7b365c0b0f2&title=&width=636" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十一课 冗余磁盘阵列</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E4%B8%80%E8%AF%BE%20%E5%86%97%E4%BD%99%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E4%B8%80%E8%AF%BE%20%E5%86%97%E4%BD%99%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/20131784">RAID有哪几种？有什么区别？ - 知乎</a><br /><a href="https://zhuanlan.zhihu.com/p/119452913">各种 RAID 详解</a></p><ul><li>RAID3是如何找到错误并纠错的？</li><li>RAID50 的容量利用率为什么比RAID5 高</li><li>关于RAID 2的思考题</li></ul><p>在已知坏了哪2块盘的情况下，RAID 2是否能够重构数据？</p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668702216809-9f66c46f-12ee-48f1-a8f7-7d6786847a21.png" alt="image.png"><br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668505094811-f40d5c16-15d0-4fbb-b581-cf5b565c0064.png" alt="image.png"></p><ul><li>RAID10：结合RAID0 和RAID1</li><li>大IO 小IO：大小描述数据量的多少<br><a name="YPRMc"></a></li></ul><h2 id="RAID-0"><a href="#RAID-0" class="headerlink" title="RAID 0"></a>RAID 0</h2><p>按条带的顺序而不是磁盘的顺序存储数据。从条带0、条带1……进行存储，而不是存完磁盘1后再存磁盘2<br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668702198817-0a7b4ce8-592e-40fa-b868-67050c1df025.png" alt="image.png"><br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668505569008-a1f5c31a-d2a9-4ac7-aa0d-9ef2609e126f.png" alt="image.png"><br><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668505609551-624c04a2-e7e6-448b-8785-6edb6834b87d.png" alt="image.png"><br />与单个大容器磁盘相比：</p><ul><li>高数据传输率：多个硬盘可以同时提供读写操作（每个硬盘都有缓存，提高传输速率）<strong>针对大的数据块</strong></li><li>高速响应I&#x2F;O请求：<strong>两个I&#x2F;O</strong>请求所需要的数据块可能<strong>在不同的磁盘上 针对的是小的IO块</strong></li></ul><p><strong>缺点：数据可靠性比单盘低。因为只要有一个磁盘出错了，整个RIAD0就无法正常工作</strong><br><a name="o5kWn"></a></p><h2 id="RAID-1"><a href="#RAID-1" class="headerlink" title="RAID 1"></a>RAID 1</h2><p>读取速度是单盘的两倍 — 因为可以同时使用两个条带<br />写入速度受限于两个条带中更慢的磁盘。</p><ul><li>优点</li></ul><ol><li>高速响应IO请求:即便是<strong>同一个磁盘上</strong>的数据块，也可以由<strong>两组硬盘（原装+备份）分别响应</strong></li><li>读请求可以由包含请求数据的两个对应磁盘中的某一个提供服务，可以<strong>选择寻道时间较小的那个（选择磁头位置离目标位置更近的）</strong></li><li>写请求需要更新两个对应的条带:可以并行完成，但<strong>受限于写入较慢的磁盘</strong>。</li><li>单个磁盘损坏时不会影响数据访问，<strong>恢复受损磁盘简单</strong></li><li><strong>小IO请求可以由两组硬盘响应，所以读取速度是单盘两倍。大IO请求可能设计到同一磁盘的多个条带，所以比单盘块，但是没有涉及到两倍的速度</strong></li></ol><ul><li>缺点：价格昂贵，有一半的磁盘用于存放冗余数据</li><li>用途</li></ul><ol><li>只限于用在存储系统软件、数据和其他关键文件的驱动器中</li></ol><ul><li>与RAIDO相比</li></ul><ol><li>如果有<strong>大批的读请求</strong>，则RAID 1能实现高速的IO速率，性能可以达到RAID 0（<strong>如果两个条带都在一个单盘上时，只能和普通单盘一样去响应</strong>）的两倍</li><li>如果IO请求有相当大的部分是写请求，则它不比RAID 0的性能好多少</li></ol><ul><li>采用了数据条带</li><li>采用简单地<strong>备份所有数据的方法</strong>来实现冗余</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668505752836-d076f564-d0ed-403d-8a25-83f60f432e05.png" alt="image.png"><br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668506181935-38580cc6-c7cf-4a7a-b9ef-67d21ab6136c.png" alt="image.png"><br><a name="Eh0c6"></a></p><h2 id="RAID10-和-RAID01比较"><a href="#RAID10-和-RAID01比较" class="headerlink" title="RAID10 和 RAID01比较"></a>RAID10 和 RAID01比较</h2><ol><li><strong>RAID10比RAID01安全性要好</strong></li><li>RAID1的特性是同一组的磁盘互为镜像，其中一个损坏时，<strong>同组的另一个会代替损坏的继续提供服务</strong></li><li>RAID0没有冗余功能，<strong>任何一个磁盘的损坏就会导致的数据不可用。</strong></li><li>RAID01可以当做普通的RAID1</li></ol><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668672966673-85910e16-3028-4e35-831b-677b1d24cff9.png" alt="image.png"><br />因此，对于RAID 01</p><ul><li>如果Disk0坏了，Disk1是不能正常工作的 – 是不能配合Disk2工作的</li><li>如果Disk3坏了，Disk2也是不能正常工作的</li></ul><p>对于RAID 10</p><ul><li>如果Disk0坏了，同组的Disk1仍然可以正常工作 – 可以配合Disk2工作</li><li>如果Disk3坏了，同组的Disk2也是可以正常工作的<br><a name="x7bwO"></a></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol><li>RAID0解决的是条带化的问题。多个磁盘，不是独立的应用，而是条带化，一起使用</li><li>RAID1解决的是冗余的问题，通过直接的简单备份，提高数据的可用性、容错能力</li><li>RAID10和RAID01的搭配问题<br><a name="zhq8d"></a></li></ol><h2 id="RAID2"><a href="#RAID2" class="headerlink" title="RAID2"></a>RAID2</h2><p>并行存取的特点：</p><ol><li>各个驱动器的轴同步旋转</li><li>采用非常小的数据条带</li></ol><p>并行存取的目标：<strong>所有</strong>磁盘都参与<strong>每个</strong>io请求（不论大小）。<br /><strong>条带很小</strong>：写入时才能让所有磁盘都能调用。因为一个条带必须用满了才能使用下一个条带，所以条带需要很容易被填满。从而使得所有磁盘都参与进去。<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668672924570-bed0abee-c51e-462a-abdd-359a657b997c.png" alt="image.png"></p><ul><li>利用海明码校验，根据公式<img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/c3c20b7c5e26e4fda0b3b2188b2355bf.svg"></li><li>在写入时，RAID 2在<strong>写入数据位同时</strong>还要<strong>计算出它们的汉明码并写入校验阵列</strong>，读取时也要对数据即时地进行校验，最后再发向系统。</li><li><strong>海明码只能对一个位的出错进行定位和纠错</strong>，所以RAID 2也只能允许一个硬盘出问题，如果两个或以上的硬盘出问题，RAID 2的数据就将受到破坏</li><li>RAID0的条带是KB级，RAID2的条带是字节级。同样很小的IO请求，RAID0只需要一个盘，RAID2需要4个数据盘</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668673179868-9c487527-463e-4f75-aa86-ac93edfcabde.png" alt="image.png"></p><ul><li>单个磁盘本身具有校验位</li></ul><p>磁盘数量：<code>n+m</code>，m个磁盘用来存储校验位<br><a name="x7Yr2"></a></p><h2 id="RAID3"><a href="#RAID3" class="headerlink" title="RAID3"></a>RAID3</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668703045075-e6abfe0f-3fb9-43de-a6c3-319d8d0d3334.png" alt="image.png"><br><br /><br>RAID 3 是把数据分成多个“位元组”，按照 一定的容错算法，连续存放在N+1个磁盘上，<strong>N个磁盘存数据，第N+1个磁盘上存储校验容错信息</strong>，当这N+1个磁盘中的一个磁盘出现故障时，依据其它N个硬盘中的数据，可以恢复完整的原始数据，这样，仅使用这N个硬盘也可以带伤继续工作（如采集和回放素材），当更换一个新硬盘后，系统可以重新恢复。<br />奇偶校验码只能发现有错，不能发现谁出错了。在RAID中，是为了防止<strong>磁盘坏了</strong>，而不是数据出错。磁盘坏了，能够清楚的<strong>明确是哪一个磁盘出错了</strong>，而数据出错则无法发现。<strong>在RAID中的冗余，是为了防止磁盘损坏</strong><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668673540430-fc64810c-9495-4467-b33e-fa1f8af415de.png" alt="image.png"><br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668673915863-5ebb1285-2abf-4a20-a8fc-b7be05e627b4.png" alt="image.png"></p><ul><li>奇偶校验码码距是2，只具有检错的能力，不具有纠错的能力，不能纠错是因为不知道哪一位数据出错了</li><li>磁盘损坏是已知的，所以通过奇偶校验可以知道是哪一个出错了<blockquote><p>RAID 3 使用字节级别的条带化技术，并<strong>采用专用的奇偶校验磁盘</strong>。RAID 3 阵列能在一个磁盘出现故障的情况下确保数据不丢失。如果一个物理磁盘出现故障，该磁盘上的数据可以重建到更换磁盘上。如果数据尚未重建到更换驱动器上，而此时又有一个磁盘出现故障，那么阵列中的所有数据都将丢失。</p></blockquote></li></ul><p><a name="bdbj8"></a></p><h2 id="RAID4"><a href="#RAID4" class="headerlink" title="RAID4"></a>RAID4</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668674101595-1f204daf-2380-48d2-a1d2-3253f7d6f9e5.png" alt="image.png"><br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668674199002-ba45f835-cdeb-4b73-b4e2-cfc27602f1e9.png" alt="image.png"></p><ul><li>不需要向RAID3一样所有盘都同步传动</li><li>瓶颈：写入四个盘时，都会争夺同一个校验盘（<strong>校验盘指的是一整个磁盘，因为磁盘本身是同步转动的</strong>），因此会产生瓶颈。<strong>无法实现写操作的独立</strong></li><li>两次读写：当写入一位数据时，因为需要同步修改校验码，所以需要修改校验码。同时，由于不知道其他盘的数据，因此需要知道该盘之前的数据以及之前的校验码，所以需要写两次和读两次。<strong>读两次：读旧的数据和旧的校验码，写两次：写新的数据和新的校验码</strong></li></ul><p>对于小IO请求，也需要使用奇偶校验码，看上去使用了4位，4个任务都会争夺同一个校验码。对于RAID3，因为读写同步，所以b1 b2 b3都是已知的，但是对于RAID4，写入B0时，其他的都是未知的，需要读出B1 B2 B3。所以，写入之前，先把<code>P(B)</code>   <code>B0</code>都先读出来。每一次写操作，实际上都要<strong>写两次，读两次</strong><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668674833267-027f9199-002c-493e-a577-cdc3b4b3c76a.png" alt="image.png"><br><a name="vFa3i"></a></p><h2 id="RAID5"><a href="#RAID5" class="headerlink" title="RAID5"></a>RAID5</h2><blockquote><ol><li>RAID5 应该是目前最常见的 RAID 等级，它的原理与 RAID4 相似，<strong>区别在于校验数据分布在阵列中的所有磁盘上，而没有采用专门的校验磁盘。</strong>对于数据和校验数据，它们的写操作可以同时发生在完全不同的磁盘上。因此， RAID5 不存在 RAID4 中的并发写操作时的校验盘性能瓶颈问题。</li><li>RAID5 的磁盘上同时存储数据和校验数据，<strong>数据块和对应的校验信息存保存在不同的磁盘上</strong>，当一个数据盘损坏时，<strong>系统可以根据同一条带的其他数据块和对应的校验数据来重建损坏的数据</strong>。与其他 RAID 等级一样，重建数据时， RAID5 的性能会受到较大的影响。</li></ol></blockquote><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668674484168-d8a5e506-0168-4d4a-9bf3-4748335df37c.png" alt="image.png"></p><ul><li>没有单独的校验盘，没有单独的数据盘</li><li>避免RAID4中集中访问同一个校验盘的现象</li><li>修改时还是会涉及到<strong>两读两写</strong></li><li><strong>在写操作时，一个平面的块都会受到影响，无法写入，但是相比RAID 4，不会对一整个磁盘造成影响。例如块0和块9，在不同平面，在RAID5中不会有冲突，但是在RAID 4中就会造成冲突</strong><br><a name="B1xwQ"></a></li></ul><h2 id="RAID-50"><a href="#RAID-50" class="headerlink" title="RAID 50"></a>RAID 50</h2><blockquote><p>RAID 5与RAID 0的组合，先作RAID 5，再作RAID 0，也就是对多组RAID 5彼此构成Stripe访问。由于RAID 50是以RAID 5为基础，而<strong>RAID 5至少需要3颗硬盘</strong>，因此要以多组RAID 5构成RAID 50，至少需要6颗硬盘。以RAID 50最小的6颗硬盘配置为例，先把6颗硬盘分为2组，每组3颗构成RAID 5，如此就得到两组RAID 5，然后再把两组RAID 5构成RAID 0。<br>RAID 50在底层的任一组或多组RAID 5中出现1颗硬盘损坏时，仍能维持运作，不过如果任一组RAID 5中出现2颗或2颗以上硬盘损毁，整组RAID 50就会失效。<br>RAID 50由于在上层把多组RAID 5构成Stripe，<strong>性能比起单纯的RAID 5高，容量利用率比RAID5要低</strong>。比如同样使用9颗硬盘，由各3颗RAID 5再组成RAID 0的RAID 50，每组RAID 5浪费一颗硬盘，利用率为(1-3&#x2F;9)，RAID 5则为(1-1&#x2F;9)。</p></blockquote><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668675235775-9454f75a-079d-41ed-863c-f1ca012cef8b.png" alt="image.png"><br />用3个磁盘空间去做奇偶校验，而如果只是RAID5，则只需要用一个磁盘的空间<br><a name="vHKMr"></a></p><h2 id="RAID-6"><a href="#RAID-6" class="headerlink" title="RAID 6"></a>RAID 6</h2><ul><li>前面所述的各个 RAID 等级都<strong>只能保护因单个磁盘失效而造成的数据丢失</strong>。如果两个磁盘同时发生故障，数据将无法恢复。 RAID6 引入<strong>双重校验</strong>的概念，它<strong>可以保护阵列中同时出现两个磁盘失效时，阵列仍能够继续工作，不会发生数据丢失</strong>。 RAID6 等级是在 RAID5 的基础上为了进一步增强数据保护而设计的一种 RAID 方式，它可以看作是一种扩展的 RAID5 等级。</li><li>RAID6 不仅要支持数据的恢复，还要支持校验数据的恢复，因此实现代价很高，控制器的设计也比其他等级更复杂、更昂贵。 <strong>RAID6 思想最常见的实现方式是采用两个独立的校验算法</strong>，假设称为 P 和 Q ，校验数据可以分别存储在两个不同的校验盘上，或者分散存储在所有成员磁盘中。<strong>当两个磁盘同时失效时，即可通过求解两元方程来重建两个磁盘上的数据。</strong></li><li>RAID6 具有快速的读取性能、更高的容错能力。但是，它的<strong>成本要高于 RAID5 许多，写性能也较差</strong>，并有设计和实施非常复杂。因此， RAID6 很少得到实际应用，主要用于对数据安全等级要求非常高的场合。它一般是替代 RAID10 方案的经济性选择</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668675293673-f7a370f3-3233-4932-bb5c-156b133a221c.png" alt="image.png"><br><a name="MgIW2"></a></p><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668703858623-88a01b8a-8ac7-48ea-a149-b293be444d8b.png" alt="image.png"><br><br /><br><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668675564994-2e8d74a6-8f92-4c9d-84d9-9dce33907f99.png#averageHue=%23f2f1f1&clientId=u43325f25-e04b-4&from=paste&height=435&id=uf661ad71&name=image.png&originHeight=544&originWidth=838&originalType=binary&ratio=1&rotation=0&showTitle=false&size=199446&status=done&style=none&taskId=ud1f6bcd3-5de4-4f91-9877-774856f5306&title=&width=670.4" alt="image.png"><br><br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668675632716-b5bb40ae-f19c-4f7c-a1c8-0ebcdd01727a.png" alt="image.png"><br><br /><br>RAID3适合大数据的单次的IO读写，按顺序读写-寻道时间更少<br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668675671383-a37e8860-2040-44a5-8f23-2f33d32be087.png" alt="image.png"><br><br />RAID2 RAID4已经弃用了</p><hr><p>RAID 0：如果你有n块磁盘，原来只能同时写一块磁盘，写满了再下一块，做了RAID 0之后，n块可以同时写，速度提升很快，但由于没有备份，可靠性很差。n最少为2。<br />RAID 1：正因为RAID 0太不可靠，所以衍生出了RAID 1。如果你有n块磁盘，把其中n&#x2F;2块磁盘作为镜像磁盘，在往其中一块磁盘写入数据时，也同时往另一块写数据。坏了其中一块时，镜像磁盘自动顶上，可靠性最佳，但空间利用率太低。n最少为2。<strong>写操作可以并行完成</strong><br />RAID 3：为了说明白RAID 5，先说RAID 3.RAID 3是若你有n块盘，其中1块盘作为校验盘，剩余n-1块盘相当于作RAID 0同时读写，当其中一块盘坏掉时，可以通过校验码还原出坏掉盘的原始数据。这个校验方式比较特别，<strong>奇偶检验</strong>，1 XOR 0 XOR 1&#x3D;0，0 XOR 1 XOR 0&#x3D;1，最后的数据时校验数据，当中间缺了一个数据时，可以通过其他盘的数据和校验数据推算出来。但是这有个问题，由于n-1块盘做了RAID 0，每一次读写都要牵动所有盘来为它服务，而且万一校验盘坏掉就完蛋了。<strong>最多允许坏一块盘</strong>。n最少为3.<br />RAID 5：在RAID 3的基础上有所区别，同样是相当于是1块盘的大小作为校验盘，n-1块盘的大小作为数据盘，但校验码分布在各个磁盘中，不是单独的一块磁盘，也就是分布式校验盘，这样做好处多多。最多坏一块盘。n最少为3.<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668703844625-2b4cfea9-a8f9-4d60-adaf-232a18531f30.png" alt="image.png"></p><ul><li>RAID 3 是采取<strong>并行存取技术</strong>，所以只需要一次写操作和一次读操作就能更新校验码</li><li><br /></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十二课 虚拟存储器</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AF%BE%20%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AF%BE%20%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><a name="nFqlT"></a></p><h3 id="分区方式"><a href="#分区方式" class="headerlink" title="分区方式"></a>分区方式</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277706527-998432e0-a2fc-4508-a459-0462d95d9259.png#averageHue=%23f7f5f4&clientId=udc6bffc6-dde9-4&from=paste&height=365&id=u69155d3e&name=image.png&originHeight=456&originWidth=787&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124023&status=done&style=none&taskId=u976c7ec9-20e4-4fe5-9c40-bf4da5073a7&title=&width=629.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277715931-9cb5eb6d-3720-4614-8410-6308a5873c48.png#averageHue=%23f6f5f4&clientId=udc6bffc6-dde9-4&from=paste&height=449&id=u2bb5d464&name=image.png&originHeight=561&originWidth=759&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110472&status=done&style=none&taskId=u3369f9d8-07a5-466f-be9b-f96eb7192a4&title=&width=607.2" alt="image.png"><br><a name="gg4z0"></a></p><h3 id="分页方式"><a href="#分页方式" class="headerlink" title="分页方式"></a>分页方式</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277748398-0cc4a6e2-fdca-4261-aa6d-4c371ba1833b.png#averageHue=%23f7f5f4&clientId=udc6bffc6-dde9-4&from=paste&height=442&id=ua3ea96a6&name=image.png&originHeight=552&originWidth=855&originalType=binary&ratio=1&rotation=0&showTitle=false&size=141099&status=done&style=none&taskId=ubdfa9f0a-09fb-4ade-afa7-79333514136&title=&width=684" alt="image.png"><br><a name="L6lhU"></a></p><h3 id="虚拟存储器"><a href="#虚拟存储器" class="headerlink" title="虚拟存储器"></a>虚拟存储器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277942468-ec1e84a3-ebaa-404a-82f7-12d0f536d4cf.png#averageHue=%23f5f3f1&clientId=udc6bffc6-dde9-4&from=paste&height=380&id=u82ee28ed&name=image.png&originHeight=475&originWidth=730&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151843&status=done&style=none&taskId=u992ae811-ef6c-488d-84f1-2c50db2092e&title=&width=584" alt="image.png"><br />只需要保证同时<strong>需要载入的页</strong>的大小是低于主存的大小就行。对于同一个任务，其实是每个时刻只会执行部分代码段，所以只需要载入部分页进入内存就行<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277966166-0c715239-9ac1-42b2-8d05-30ecde4fc470.png#averageHue=%23fbfaf9&clientId=udc6bffc6-dde9-4&from=paste&height=460&id=u9c42bafc&name=image.png&originHeight=575&originWidth=843&originalType=binary&ratio=1&rotation=0&showTitle=false&size=121107&status=done&style=none&taskId=u114d02d9-9b90-4017-9f47-b4740ff5e9a&title=&width=674.4" alt="image.png"></p><ol><li>所有的任务的所有的页放入硬盘的特定区域中，也就是<strong>虚拟内存</strong></li><li>每个任务正在使用的页载入主存当中</li><li>没命中时主存从硬盘中加载；有修改时，硬盘也会从主存加载</li><li>页表：对每个任务生成一个页表，记录页的状态</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277979600-731a069b-e5e4-4b80-8d9a-99071803ad2a.png#averageHue=%23fbf9f8&clientId=udc6bffc6-dde9-4&from=paste&height=416&id=u6d0bd8bf&name=image.png&originHeight=520&originWidth=791&originalType=binary&ratio=1&rotation=0&showTitle=false&size=107946&status=done&style=none&taskId=u766cdea8-c718-408c-ab6f-4eb4ea6e79c&title=&width=632.8" alt="image.png"></p><ul><li>全相联映射：命中率更高</li><li>写回：避免像写直达一样，多次对硬盘进行操作<br><a name="krw6M"></a></li></ul><h3 id="分页式虚拟存储器"><a href="#分页式虚拟存储器" class="headerlink" title="分页式虚拟存储器"></a>分页式虚拟存储器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669278432223-3b432e84-bedf-423a-b55a-9efc2a0488e8.png#averageHue=%23f6f3f2&clientId=ub64367f1-dc9e-4&from=paste&height=295&id=u8e15b110&name=image.png&originHeight=369&originWidth=847&originalType=binary&ratio=1&rotation=0&showTitle=false&size=137109&status=done&style=none&taskId=u449dcc30-e715-4b48-b1f7-56bfbf3eb8f&title=&width=677.6" alt="image.png"></p><ul><li>编写程序时，默认自己有一个很大的、连续的空间，所以记录在页表中的地址都是虚拟地址。</li><li>程序真正被启动时，会产生很多页面，载入硬盘中</li><li>把要用的页面真正载入主存中，由页表来记录</li><li>页表也存在主存中<br><a name="OrHIE"></a></li></ul><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669278909804-03e37ac1-149e-48c0-8717-bfab35e6db6a.png#averageHue=%23c7cab1&clientId=ub64367f1-dc9e-4&from=paste&height=436&id=u5416e5de&name=image.png&originHeight=545&originWidth=864&originalType=binary&ratio=1&rotation=0&showTitle=false&size=216918&status=done&style=none&taskId=ua20c0918-bbe8-4dc6-a91d-703c6727b89&title=&width=691.2" alt="image.png"><br><a name="i21yx"></a></p><h4 id="页表"><a href="#页表" class="headerlink" title="页表"></a>页表</h4><p><strong>物理页和虚拟页的大小是一样的。所以页内偏移量是一致的</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669279021802-26aa3ba1-42dc-4880-b68b-4894c1759968.png#averageHue=%23f4f4f3&clientId=ub64367f1-dc9e-4&from=paste&height=410&id=ue7723b11&name=image.png&originHeight=513&originWidth=761&originalType=binary&ratio=1&rotation=0&showTitle=false&size=137934&status=done&style=none&taskId=u8d06126a-ef5f-4918-ab00-c2c4acd2100&title=&width=608.8" alt="image.png"></p><ul><li><code>null</code>磁盘没有存储VP0 VP4，对应的位置存储了其他信息<img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669279176054-4dd0b82e-33cc-4447-9762-53cbe5f148b9.png#averageHue=%23d9be87&clientId=ub64367f1-dc9e-4&from=paste&height=22&id=u1f5e4edb&name=A959A7B612035ABFFB13EF2EC4BE03A8.png&originHeight=27&originWidth=26&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1626&status=done&style=none&taskId=u879513f3-7f51-48cc-9d1c-c8f4e4a534d&title=&width=20.8" alt="A959A7B612035ABFFB13EF2EC4BE03A8.png"></li><li><code>PP0</code>物理页号：说明在主存中有载入</li><li>指针：说明在磁盘存储器中有，但是没有载入主存中。</li><li><strong>虚拟地址比物理地址更长</strong>，虚拟空间比物理空间更大，虚拟页号比物理页号的长度更长；<strong>存放位置时的指针长度比物理地址小</strong></li><li>不需要额外用空间记录虚拟页号，因为是按顺序排放的</li><li>**存放位置的长度是按照最长的物理地址存放的 **<br><a name="bgiXr"></a></li></ul><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669279472951-53ed2a0f-fd94-4324-a79a-5247a2c03333.png#averageHue=%23f4ecec&clientId=ub64367f1-dc9e-4&from=paste&height=264&id=uc72e0adc&name=image.png&originHeight=330&originWidth=780&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56801&status=done&style=none&taskId=u060063a6-cd5e-434b-a34e-77ebb4f9818&title=&width=624" alt="image.png"><br><a name="JQN19"></a></p><h4 id="快表"><a href="#快表" class="headerlink" title="快表"></a>快表</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669279512490-aad58c79-5266-41cd-8c4a-7076d662ddb1.png#averageHue=%23f6f4f3&clientId=ub64367f1-dc9e-4&from=paste&height=519&id=u6fec5fbb&name=image.png&originHeight=649&originWidth=891&originalType=binary&ratio=1&rotation=0&showTitle=false&size=176455&status=done&style=none&taskId=ua3418ac4-f7ec-46ae-ae42-a2aeb58dfab&title=&width=712.8" alt="image.png"><br><a name="YxFIf"></a></p><h4 id="CPU访存过程"><a href="#CPU访存过程" class="headerlink" title="CPU访存过程"></a>CPU访存过程</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669280124191-614a3c12-4a15-49db-bfdd-fe3f90a7e44f.png#averageHue=%23f9f7f6&clientId=ub64367f1-dc9e-4&from=paste&height=460&id=u89b766c1&name=image.png&originHeight=575&originWidth=866&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57515&status=done&style=none&taskId=u4c02556e-fc3d-4271-bf91-61b08842ece&title=&width=692.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669280143486-c3062d63-658c-4610-95dc-55cc0bf9d235.png#averageHue=%23f6f4f4&clientId=ub64367f1-dc9e-4&from=paste&height=402&id=u1a3774b1&name=image.png&originHeight=502&originWidth=841&originalType=binary&ratio=1&rotation=0&showTitle=false&size=182928&status=done&style=none&taskId=u5a6c3087-7455-4d39-a32a-2bc915cc01f&title=&width=672.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669280570598-b997891c-1fd3-4266-a226-636230946178.png#averageHue=%23f5f4f4&clientId=ub64367f1-dc9e-4&from=paste&height=507&id=u9e6a8edb&name=image.png&originHeight=634&originWidth=878&originalType=binary&ratio=1&rotation=0&showTitle=false&size=326545&status=done&style=none&taskId=u031c9e6c-cd14-47e3-b819-a3376ea0723&title=&width=702.4" alt="image.png"></p><ol start="2"><li>访问的是主存中的数据，因为在Cache中miss了</li><li>访问的是主存中的页表，数据仍然在Cache中</li><li>出现缺页情况，访问硬盘和访问主存速度差距非常大</li><li>TLB中有，页表中也一定有<br><a name="oXU29"></a></li></ol><h3 id="分段式虚拟存储器"><a href="#分段式虚拟存储器" class="headerlink" title="分段式虚拟存储器"></a>分段式虚拟存储器</h3><p>物理地址&#x3D; 段号左移4位+段内偏移量<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669280849606-3494bb7d-aff3-4ab5-a9b1-eaeac95777fd.png#averageHue=%23f7f5f4&clientId=ub64367f1-dc9e-4&from=paste&height=418&id=ua63d4e79&name=image.png&originHeight=523&originWidth=796&originalType=binary&ratio=1&rotation=0&showTitle=false&size=171567&status=done&style=none&taskId=u6c08981c-ce11-478a-8d8b-8e369d0e9a7&title=&width=636.8" alt="image.png"><br />分页式：对权限管理很混乱，每一个页都要单独记录权限<br />分段式：</p><ul><li>会有重复地址</li><li>长度不固定</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669281353237-f9a73a1a-49b5-4214-b7e9-149015592132.png#averageHue=%23fbfaf9&clientId=ub64367f1-dc9e-4&from=paste&height=357&id=u938c30b6&name=image.png&originHeight=446&originWidth=750&originalType=binary&ratio=1&rotation=0&showTitle=false&size=81129&status=done&style=none&taskId=ue0f8ff35-bc70-45fd-a7be-4afd659cfc7&title=&width=600" alt="image.png"><br><a name="huy5f"></a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669281422445-f6f60a5a-1b1e-4cbc-8196-882371e9d52c.png#averageHue=%23faf9f8&clientId=ub64367f1-dc9e-4&from=paste&height=432&id=uf5eb4e63&name=image.png&originHeight=540&originWidth=683&originalType=binary&ratio=1&rotation=0&showTitle=false&size=90620&status=done&style=none&taskId=uc4d4db28-9f44-4545-a623-43960c6d420&title=&width=546.4" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十七课 输入输出</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E4%B8%83%E8%AF%BE%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E4%B8%83%E8%AF%BE%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092964050-b0e027e7-bc8e-4829-a530-a148b4e45cf1.png#averageHue=%23f2efef&clientId=u6f233eb4-7d58-4&from=paste&height=233&id=u33f203ed&name=image.png&originHeight=291&originWidth=781&originalType=binary&ratio=1&rotation=0&showTitle=false&size=87154&status=done&style=none&taskId=uaef758bf-786c-49a1-bf3f-9707d8c7f6f&title=&width=624.8" alt="image.png"><br><a name="nE4qE"></a></p><h2 id="I-x2F-O模块"><a href="#I-x2F-O模块" class="headerlink" title="I&#x2F;O模块"></a>I&#x2F;O模块</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093087561-d646c3ca-3b7d-48fe-88de-e325489b8ea9.png#averageHue=%23f5efef&clientId=ub98356ff-28f8-4&from=paste&height=334&id=u2ada4710&name=image.png&originHeight=418&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=129924&status=done&style=none&taskId=u698612f9-53e3-4c22-a58f-1eaa8214873&title=&width=655.2" alt="image.png"><br><a name="wW1Fq"></a></p><h3 id="外围设备的接口"><a href="#外围设备的接口" class="headerlink" title="外围设备的接口"></a>外围设备的接口</h3><p>转换器：外设的数据格式和计算机内部的数据格式可能不一致<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093193022-7d5eedaa-0baf-4319-823d-b3a910548468.png#averageHue=%23efefef&clientId=u63414d40-b07f-4&from=paste&height=523&id=ua8c4f61c&name=image.png&originHeight=654&originWidth=865&originalType=binary&ratio=1&rotation=0&showTitle=false&size=243789&status=done&style=none&taskId=u25625896-9972-4c95-91c1-a6b9ceadbd9&title=&width=692" alt="image.png"><br><a name="PlgC4"></a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093407597-d8eb7ef7-f7f6-4f2d-a13a-7a98d555997d.png#averageHue=%23eeebea&clientId=u63414d40-b07f-4&from=paste&height=304&id=uac99616e&name=image.png&originHeight=380&originWidth=818&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119817&status=done&style=none&taskId=u5071b220-86ba-435e-ba8a-df635d6dc1b&title=&width=654.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093513588-823d2062-a477-498d-8e52-25f669c46e16.png#averageHue=%23c3c3c3&clientId=u63414d40-b07f-4&from=paste&height=438&id=u1fa47fb2&name=image.png&originHeight=548&originWidth=772&originalType=binary&ratio=1&rotation=0&showTitle=false&size=242621&status=done&style=none&taskId=u900198a8-5bec-41c1-90cf-df5812331cf&title=&width=617.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093735022-348f6ecf-41aa-40a1-a1ea-e50dff7f9168.png#averageHue=%23ecebeb&clientId=ue02361c6-a47f-4&from=paste&height=321&id=u95a303ce&name=image.png&originHeight=401&originWidth=826&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122804&status=done&style=none&taskId=ue5e8f938-0901-4649-8ab8-0179888d236&title=&width=660.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093853802-b9ae09b6-fe76-447a-9f29-55c44f39015b.png#averageHue=%23ececec&clientId=ue02361c6-a47f-4&from=paste&height=187&id=u032c8662&name=image.png&originHeight=234&originWidth=445&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33381&status=done&style=none&taskId=uebcd50a5-c23d-4007-9042-06ef1b2bffb&title=&width=356" alt="image.png"><br><a name="m9WZ2"></a></p><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671094127152-0da4f1d4-1aa5-41fa-b8c9-e9ed5d443490.png#averageHue=%23eceaea&clientId=ue02361c6-a47f-4&from=paste&height=463&id=uaddfacbe&name=image.png&originHeight=579&originWidth=694&originalType=binary&ratio=1&rotation=0&showTitle=false&size=217908&status=done&style=none&taskId=u3e2a66ad-28e9-4d91-9373-d6e81059334&title=&width=555.2" alt="image.png"></p><ul><li>CPU对外设的命令是走数据线的，是具体的操作</li><li>状态和控制不是同一时间发生，只有确认了状态后，才能确认控制。状态是从右往左返回，控制是从左往右返回</li><li>数据寄存器实际上是输入寄存器和输出寄存器的合并<br><a name="e1inL"></a></li></ul><h4 id="外部接口"><a href="#外部接口" class="headerlink" title="外部接口"></a>外部接口</h4><p>事实上，并行接口，每一根线的延迟可能是不一样的，当线的长度非常长时，每一位传输时就会导致错位，数据传输出错。<br />所以，需要按照一定频率传输<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671094339336-88e79342-c69f-44a6-8172-9d16892fa542.png#averageHue=%23eeecec&clientId=ue02361c6-a47f-4&from=paste&height=446&id=u02f62cc7&name=image.png&originHeight=558&originWidth=871&originalType=binary&ratio=1&rotation=0&showTitle=false&size=217529&status=done&style=none&taskId=u4fcfb97e-f057-4a28-ae4f-2c90c115995&title=&width=696.8" alt="image.png"><br><a name="cbgly"></a></p><h4 id="串行总线"><a href="#串行总线" class="headerlink" title="串行总线"></a>串行总线</h4><ul><li>批量传输比同步传输多了“握手”，是为了实现<strong>异步</strong></li><li>同步传输：传送音视频时，需要同步。音视频对实时性的要求较高；允许一定的误码率</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671094569227-cd489685-adec-429e-bbf6-cd331cdf06b4.png#averageHue=%23f0efef&clientId=ue02361c6-a47f-4&from=paste&height=471&id=u02c30dcc&name=image.png&originHeight=589&originWidth=873&originalType=binary&ratio=1&rotation=0&showTitle=false&size=196217&status=done&style=none&taskId=u5d8909ad-ed5c-4a97-a308-f21430668db&title=&width=698.4" alt="image.png"><br><a name="Aqr1z"></a></p><h2 id="I-x2F-O操作技术"><a href="#I-x2F-O操作技术" class="headerlink" title="I&#x2F;O操作技术"></a>I&#x2F;O操作技术</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671095525199-68ebb65d-fad4-4811-b3a9-cda3794389b9.png#averageHue=%23e8e8e8&clientId=ue02361c6-a47f-4&from=paste&height=319&id=u76ed5f21&name=image.png&originHeight=399&originWidth=847&originalType=binary&ratio=1&rotation=0&showTitle=false&size=143924&status=done&style=none&taskId=u01965a79-a142-400f-bc0a-a2d04d1466b&title=&width=677.6" alt="image.png"><br><a name="uKPNs"></a></p><h3 id="编程式I-x2F-O"><a href="#编程式I-x2F-O" class="headerlink" title="编程式I&#x2F;O"></a>编程式I&#x2F;O</h3><p>缺点：比较低效？<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671095898490-1402e9b6-37b2-4785-88de-193d125eeca5.png#averageHue=%23eceaea&clientId=ue02361c6-a47f-4&from=paste&height=389&id=u71afc414&name=image.png&originHeight=486&originWidth=836&originalType=binary&ratio=1&rotation=0&showTitle=false&size=175701&status=done&style=none&taskId=ued9f848e-acd0-483e-98c5-5609eea045e&title=&width=668.8" alt="image.png"><br><a name="wuNWA"></a></p><h4 id="I-x2F-O命令"><a href="#I-x2F-O命令" class="headerlink" title="I&#x2F;O命令"></a>I&#x2F;O命令</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096036418-f99e8058-f321-48f5-b18c-edc79c8530d2.png#averageHue=%23ebeaea&clientId=ue02361c6-a47f-4&from=paste&height=261&id=u70b6d580&name=image.png&originHeight=326&originWidth=797&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91935&status=done&style=none&taskId=u8579d920-2444-48ca-bae6-553adff9e19&title=&width=637.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096107530-655b7a58-ef2f-4139-84c4-d69942c4922a.png#averageHue=%23edebeb&clientId=ue02361c6-a47f-4&from=paste&height=262&id=uf7f52b25&name=image.png&originHeight=327&originWidth=829&originalType=binary&ratio=1&rotation=0&showTitle=false&size=93235&status=done&style=none&taskId=uc64804a8-6c4f-42f3-9579-2d1de152117&title=&width=663.2" alt="image.png"></p><ul><li>CPU需要做什么 - 指令</li><li>I&#x2F;O需要做什么 - 命令<br><a name="PDNTN"></a></li></ul><h3 id="中断驱动式I-x2F-O"><a href="#中断驱动式I-x2F-O" class="headerlink" title="中断驱动式I&#x2F;O"></a>中断驱动式I&#x2F;O</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096337526-b350ddfe-4c1b-488b-8e94-f1adff4e3e77.png#averageHue=%23e6e5e5&clientId=ue02361c6-a47f-4&from=paste&height=409&id=u6c890a31&name=image.png&originHeight=511&originWidth=862&originalType=binary&ratio=1&rotation=0&showTitle=false&size=257686&status=done&style=none&taskId=u23bde67a-721a-47b2-8bed-8eb3c4afd8c&title=&width=689.6" alt="image.png"><br><a name="hSAwA"></a></p><h4 id="模块理解"><a href="#模块理解" class="headerlink" title="模块理解"></a>模块理解</h4><ul><li>I&#x2F;O模块等处理器，而不是处理器等I&#x2F;O了</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096515962-86e808e7-0488-4d59-9689-023fcbd0de84.png#averageHue=%23e9e8e7&clientId=ue02361c6-a47f-4&from=paste&height=447&id=u9ff595a8&name=image.png&originHeight=559&originWidth=864&originalType=binary&ratio=1&rotation=0&showTitle=false&size=232443&status=done&style=none&taskId=ud7c329d2-f48f-4f3b-9d75-971277913ef&title=&width=691.2" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096596053-66c6bb00-ec53-4f0f-ac9f-2b29780358fc.png#averageHue=%23eee7e7&clientId=ue02361c6-a47f-4&from=paste&height=230&id=u3b84594d&name=image.png&originHeight=288&originWidth=748&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85364&status=done&style=none&taskId=u234ce0fe-fa8f-4b68-875e-00cb2b371a3&title=&width=598.4" alt="image.png"><br><a name="B9NcS"></a></p><h4 id="中断允许和中断禁止"><a href="#中断允许和中断禁止" class="headerlink" title="中断允许和中断禁止"></a>中断允许和中断禁止</h4><ol><li>中断处理之前，要保存现场</li><li>保存现场时，不能被中断。所以中断响应后，要进入中断禁止，保护现场</li><li>恢复现场时，也不能被中断</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096773626-57c52056-552d-4964-8ec5-594321a48c1a.png#averageHue=%23f0ebeb&clientId=ue02361c6-a47f-4&from=paste&height=380&id=uba84889f&name=image.png&originHeight=475&originWidth=838&originalType=binary&ratio=1&rotation=0&showTitle=false&size=95098&status=done&style=none&taskId=ufc25601e-bd02-4e38-9c55-5c80b0870f3&title=&width=670.4" alt="image.png"></p><p><a name="sYj5L"></a></p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671097206942-6ab2d824-8025-4b8d-8ee9-bca3fea55158.png#averageHue=%23f5f2f2&clientId=ue02361c6-a47f-4&from=paste&height=454&id=u1b560a6c&name=image.png&originHeight=568&originWidth=871&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114921&status=done&style=none&taskId=u9e939e43-dfc6-4cd9-a212-3dea80b9ad1&title=&width=696.8" alt="image.png"></p><ol><li>主程序的响应优先级和处理优先级的最低</li><li>先执行和处理完L1（L3 L4的处理优先级比L1低），回到主程序</li><li>先响应3，但是先处理完L4</li><li>恢复L3，发生了L2中断，但是L2的处理优先级低于L3，所以先处理L3</li></ol><p><strong>处理优先级决定哪些中断可以被响应，响应优先级决定哪些中断最先被响应</strong><br /><strong>行屏蔽是从处理优先级的角度出发的</strong><br><a name="QyvRS"></a></p><h4 id="设备识别"><a href="#设备识别" class="headerlink" title="设备识别"></a>设备识别</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671097342189-5f34c4b6-dd42-4d30-b78f-192778334e48.png#averageHue=%23e8e8e8&clientId=ue02361c6-a47f-4&from=paste&height=331&id=uaabd9894&name=image.png&originHeight=414&originWidth=798&originalType=binary&ratio=1&rotation=0&showTitle=false&size=125380&status=done&style=none&taskId=udeb63c75-9058-4765-961c-181c27ed24f&title=&width=638.4" alt="image.png"><br><a name="OZUXo"></a></p><h3 id="直接存储器存取-DMA"><a href="#直接存储器存取-DMA" class="headerlink" title="直接存储器存取 DMA"></a>直接存储器存取 DMA</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671097553947-c02d296e-f133-4716-af15-982d51221831.png#averageHue=%23eeeeee&clientId=ue02361c6-a47f-4&from=paste&height=433&id=u3d9a0514&name=image.png&originHeight=541&originWidth=855&originalType=binary&ratio=1&rotation=0&showTitle=false&size=214453&status=done&style=none&taskId=u450d38ff-1b8c-4401-8126-7b8b280c3c2&title=&width=684" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671097702884-b866c684-3e96-4b27-8656-aa7d0f7c87ec.png#averageHue=%23eae9e9&clientId=ue02361c6-a47f-4&from=paste&height=452&id=u8fe5708a&name=image.png&originHeight=565&originWidth=870&originalType=binary&ratio=1&rotation=0&showTitle=false&size=224433&status=done&style=none&taskId=u09dd47fc-060b-4745-a0ad-67e1c36c4e0&title=&width=696" alt="image.png"></p><ul><li>DMA和CPU访问同一块内存时，可能会导致冲突<br><a name="kAlv8"></a></li></ul><h4 id="DMA内存访问：CPU停止法"><a href="#DMA内存访问：CPU停止法" class="headerlink" title="DMA内存访问：CPU停止法"></a>DMA内存访问：CPU停止法</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671097979359-580da163-ee98-444d-b288-e9062336671c.png#averageHue=%23f8f4f4&clientId=ue02361c6-a47f-4&from=paste&height=442&id=u620ece6b&name=image.png&originHeight=552&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&size=94146&status=done&style=none&taskId=u159fcbe2-fbba-4da8-a9df-0fd63d2420b&title=&width=632" alt="image.png"><br><a name="x6TRy"></a></p><h4 id="DMA内存访问：周期窃取"><a href="#DMA内存访问：周期窃取" class="headerlink" title="DMA内存访问：周期窃取"></a>DMA内存访问：周期窃取</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671098030143-2c2dde0e-8e15-4b2b-9d16-02ff8b52ed59.png#averageHue=%23f7f5f5&clientId=ue02361c6-a47f-4&from=paste&height=451&id=uc70a87b3&name=image.png&originHeight=564&originWidth=731&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91568&status=done&style=none&taskId=u831063a4-2e25-4ccf-a0fc-739257d249e&title=&width=584.8" alt="image.png"><br />断断续续：存储周期处于空闲状态。一次IO请求可能会有多次DMA访存<br><a name="TeNwY"></a></p><h4 id="DMA内存访问：交替分时访问"><a href="#DMA内存访问：交替分时访问" class="headerlink" title="DMA内存访问：交替分时访问"></a>DMA内存访问：交替分时访问</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671098195384-c84307a0-a2a4-4358-a9d0-1b52dc70bea9.png#averageHue=%23f6f3f3&clientId=ue02361c6-a47f-4&from=paste&height=328&id=u1537b026&name=image.png&originHeight=410&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69925&status=done&style=none&taskId=u6587b09c-db5d-43ad-a918-a334c910793&title=&width=534.4" alt="image.png"><br><a name="rxceT"></a></p><h4 id="DMA配置机制：单总线分离DMA"><a href="#DMA配置机制：单总线分离DMA" class="headerlink" title="DMA配置机制：单总线分离DMA"></a>DMA配置机制：单总线分离DMA</h4><p><a name="fUNAy"></a></p><h4 id="单总线集合的DMA"><a href="#单总线集合的DMA" class="headerlink" title="单总线集合的DMA"></a>单总线集合的DMA</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671098378607-c95fdc3e-a6a6-4ddc-b923-c3126a62e70f.png#averageHue=%23f5f3f3&clientId=ue02361c6-a47f-4&from=paste&height=438&id=u04697398&name=image.png&originHeight=548&originWidth=803&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112184&status=done&style=none&taskId=u4df8256d-0aa6-44e6-b346-30c95947b4e&title=&width=642.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671098413471-c4398552-0841-43d5-8597-01aaa3e85394.png#averageHue=%23f3f2f2&clientId=ue02361c6-a47f-4&from=paste&height=399&id=u5fd66c52&name=image.png&originHeight=499&originWidth=724&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103666&status=done&style=none&taskId=u51d121af-a0ed-4760-a05d-43c919fa4d8&title=&width=579.2" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671529051743-1938edaa-753d-4131-921a-f3171431780a.png#averageHue=%23fcf6f6&clientId=ua5ab8f6e-7a34-4&from=paste&height=443&id=uabcf5939&name=image.png&originHeight=554&originWidth=728&originalType=binary&ratio=1&rotation=0&showTitle=false&size=81369&status=done&style=none&taskId=u6784dc2d-adce-4b08-a32a-bca5d491408&title=&width=582.4" alt="image.png"><br />CPU还在操控，但是不等待<br><a name="ELnew"></a></p><h2 id="I-x2F-O模块的演变"><a href="#I-x2F-O模块的演变" class="headerlink" title="I&#x2F;O模块的演变"></a>I&#x2F;O模块的演变</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671529094550-d4297325-a0ec-4f2d-80d1-9d0b8f5f455f.png#averageHue=%23edebeb&clientId=ua5ab8f6e-7a34-4&from=paste&height=410&id=uc6912ada&name=image.png&originHeight=512&originWidth=873&originalType=binary&ratio=1&rotation=0&showTitle=false&size=164526&status=done&style=none&taskId=ud227a35c-5fb1-428f-be30-471e4080b1d&title=&width=698.4" alt="image.png"><br />I&#x2F;O处理器不仅有处理器，同时也有了局部存储器<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671529173900-2335dbc1-7bb5-484a-9cba-f616a1639309.png#averageHue=%23f4f4f4&clientId=ua5ab8f6e-7a34-4&from=paste&height=518&id=ub5b60bf9&name=image.png&originHeight=647&originWidth=864&originalType=binary&ratio=1&rotation=0&showTitle=false&size=152569&status=done&style=none&taskId=u079849b5-f5ef-462a-b5c9-a0d7c3b7199&title=&width=691.2" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十六课 控制器</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AF%BE%20%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AF%BE%20%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><a name="BRwKC"></a></p><h2 id="寄存器分类"><a href="#寄存器分类" class="headerlink" title="寄存器分类"></a>寄存器分类</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919267410-b94ec08c-05ac-449c-919f-031d7d8674cf.png#averageHue=%23ebeaea&clientId=u146f9401-8b59-4&from=paste&height=216&id=u33f5bfc5&name=image.png&originHeight=270&originWidth=530&originalType=binary&ratio=1&rotation=0&showTitle=false&size=101916&status=done&style=shadow&taskId=u3fcc5612-dfea-488f-9efc-0759c25353a&title=&width=424" alt="image.png"></p><ul><li>用户：特指<strong>编程人员</strong></li><li>可见：通过编程语言访问</li><li>状态寄存器：没有必要让编程人员访问，也不应该可见<ul><li>会导致不安全的情况</li><li>程序出现漏洞的风险也会增高</li><li>指令集的复杂度也会增加，效率降低<br><a name="gfdqI"></a></li></ul></li></ul><h3 id="用户可见寄存器"><a href="#用户可见寄存器" class="headerlink" title="用户可见寄存器"></a>用户可见寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919504581-833c4d81-e3f5-4a76-ae7d-0167b57216f6.png#averageHue=%23e9e9e9&clientId=u146f9401-8b59-4&from=paste&height=272&id=u6c7b9f9a&name=image.png&originHeight=340&originWidth=559&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120656&status=done&style=shadow&taskId=ucc987b6a-d1e9-4ebe-b5e4-5e50c258e80&title=&width=447.2" alt="image.png"><br />条件码寄存器不是必须的。缺点：硬件复杂性增加<br><a name="iHNFa"></a></p><h4 id="设计出发点"><a href="#设计出发点" class="headerlink" title="设计出发点"></a>设计出发点</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919636491-3d32eb25-46dc-40f3-8577-7f9cb58cd6a8.png#averageHue=%23ececec&clientId=u146f9401-8b59-4&from=paste&height=242&id=ue4b0e73f&name=image.png&originHeight=302&originWidth=622&originalType=binary&ratio=1&rotation=0&showTitle=false&size=88507&status=done&style=shadow&taskId=u322c2a03-6742-4138-9cd9-41af03d0ca1&title=&width=497.6" alt="image.png"><br><a name="G79C6"></a></p><h4 id="保存和恢复"><a href="#保存和恢复" class="headerlink" title="保存和恢复"></a>保存和恢复</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919811007-34076bad-ede8-40d3-ac75-c8b6238983c1.png#averageHue=%23e8e8e8&clientId=u146f9401-8b59-4&from=paste&height=162&id=u8224c19f&name=image.png&originHeight=202&originWidth=599&originalType=binary&ratio=1&rotation=0&showTitle=false&size=90137&status=done&style=shadow&taskId=u96ebd486-c3a6-40c4-9140-70e77383727&title=&width=479.2" alt="image.png"><br><a name="A2wGH"></a></p><h3 id="控制和状态寄存器"><a href="#控制和状态寄存器" class="headerlink" title="控制和状态寄存器"></a>控制和状态寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919880475-246bf2a4-189f-44f4-8f70-63e43e5f22fd.png#averageHue=%23e4e4e4&clientId=u146f9401-8b59-4&from=paste&height=292&id=u63743eb4&name=image.png&originHeight=365&originWidth=617&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162077&status=done&style=shadow&taskId=u80b95417-fcf2-4f41-a924-05ded3cae80&title=&width=493.6" alt="image.png"><br /><code>PC</code>是可见的<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919980960-f01b11a6-0a3a-4a0e-821e-fb049ecc856c.png#averageHue=%23e6e6e6&clientId=u146f9401-8b59-4&from=paste&height=283&id=u43d68168&name=image.png&originHeight=354&originWidth=596&originalType=binary&ratio=1&rotation=0&showTitle=false&size=143201&status=done&style=shadow&taskId=u6f9dc9d5-10df-48ea-bba7-23b55732458&title=&width=476.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920013758-9acefedd-9918-49fe-a397-cf2afa4620ab.png#averageHue=%23ebe9e9&clientId=u146f9401-8b59-4&from=paste&height=148&id=u098dde01&name=image.png&originHeight=185&originWidth=582&originalType=binary&ratio=1&rotation=0&showTitle=false&size=68091&status=done&style=shadow&taskId=u8bd90491-2732-49fb-8f74-fb962ed4796&title=&width=465.6" alt="image.png"><br><a name="yDFme"></a></p><h4 id="设计出发点-1"><a href="#设计出发点-1" class="headerlink" title="设计出发点"></a>设计出发点</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920061137-5ee03a91-a0d4-4ad2-a8c3-6b498f92b717.png#averageHue=%23e8e8e8&clientId=u146f9401-8b59-4&from=paste&height=194&id=uff5d588d&name=image.png&originHeight=242&originWidth=652&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97555&status=done&style=shadow&taskId=ud5426e5e-101a-4c08-9c24-ad68eaaf320&title=&width=521.6" alt="image.png"><br><a name="JFQzs"></a></p><h2 id="8086"><a href="#8086" class="headerlink" title="8086"></a>8086</h2><p><a name="jbGbq"></a></p><h3 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920320585-fce0f067-ad8e-4215-883c-0c429b8ddc6b.png#averageHue=%23eeeded&clientId=u146f9401-8b59-4&from=paste&height=390&id=ub679ecb4&name=image.png&originHeight=488&originWidth=662&originalType=binary&ratio=1&rotation=0&showTitle=false&size=179083&status=done&style=shadow&taskId=ud03a80ca-2695-4cda-b5d9-4984459a20a&title=&width=529.6" alt="image.png"><br><a name="KW0ws"></a></p><h3 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920401702-9d3ce9cb-112c-43a2-b978-231abda3f33c.png#averageHue=%23ecebeb&clientId=u146f9401-8b59-4&from=paste&height=388&id=u690ecd53&name=image.png&originHeight=485&originWidth=662&originalType=binary&ratio=1&rotation=0&showTitle=false&size=132243&status=done&style=shadow&taskId=uc2e2641d-9f80-46a1-b015-84e4c6678ff&title=&width=529.6" alt="image.png"><br><a name="lgfCS"></a></p><h3 id="标志寄存器"><a href="#标志寄存器" class="headerlink" title="标志寄存器"></a>标志寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920577701-e5ef5114-9804-4636-a5d8-bd4401951de3.png#averageHue=%23e8d2cc&clientId=u146f9401-8b59-4&from=paste&height=392&id=u5cbb11b8&name=image.png&originHeight=490&originWidth=664&originalType=binary&ratio=1&rotation=0&showTitle=false&size=137978&status=done&style=shadow&taskId=u4afc7664-d9f7-480c-b14f-ecb8e089b7d&title=&width=531.2" alt="image.png"><br><a name="nuD1B"></a></p><h3 id="指令指针寄存器"><a href="#指令指针寄存器" class="headerlink" title="指令指针寄存器"></a>指令指针寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920615142-39d5a8ec-56dc-453c-81c5-902d046e14e1.png#averageHue=%23f1f1f1&clientId=u146f9401-8b59-4&from=paste&height=266&id=ubd1aa287&name=image.png&originHeight=333&originWidth=614&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97491&status=done&style=shadow&taskId=u321489ac-1e3c-41ac-9144-b39fa8ba581&title=&width=491.2" alt="image.png"><br />为什么是<img src="https://cdn.nlark.com/yuque/__latex/64636e8771ef215128139253c19e840a.svg#card=math&code=2%5E%7B20%7D&id=K0dvY"><br><a name="nVEMI"></a></p><h2 id="微操作"><a href="#微操作" class="headerlink" title="微操作"></a>微操作</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920926888-8a8daa14-86b0-4e14-a571-30406aa00211.png#averageHue=%23eeeeee&clientId=u146f9401-8b59-4&from=paste&height=394&id=udcc4920d&name=image.png&originHeight=493&originWidth=649&originalType=binary&ratio=1&rotation=0&showTitle=false&size=176710&status=done&style=shadow&taskId=ue389798c-7a7f-4a97-b4fa-3a4b20f91f8&title=&width=519.2" alt="image.png"><br><a name="gDz4A"></a></p><h3 id="分组原则"><a href="#分组原则" class="headerlink" title="分组原则"></a>分组原则</h3><p>通过放在前后的时间周期内，让时间的流动顺序恰当<br />对同一个寄存器进行读写，不能放在同一个时间周期内<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670921380192-1f213a4c-3bd9-4a7e-a35c-c0ef2679ec12.png#averageHue=%23ececec&clientId=u146f9401-8b59-4&from=paste&height=218&id=u7eba1d1b&name=image.png&originHeight=272&originWidth=659&originalType=binary&ratio=1&rotation=0&showTitle=false&size=109136&status=done&style=shadow&taskId=ue2e46cfb-c7b7-4618-b48e-e299164b94f&title=&width=527.2" alt="image.png"><br><a name="HYPOh"></a></p><h3 id="取指周期"><a href="#取指周期" class="headerlink" title="取指周期"></a>取指周期</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670921071143-60ece1e9-30f3-4388-8cc0-ff65658979a1.png#averageHue=%23f2f2f1&clientId=u146f9401-8b59-4&from=paste&height=385&id=ub3a5ec45&name=image.png&originHeight=481&originWidth=657&originalType=binary&ratio=1&rotation=0&showTitle=false&size=153844&status=done&style=shadow&taskId=u767f41d4-5596-49b6-b12a-157e26abb77&title=&width=525.6" alt="image.png"><br />t1：数据通过MAR传给地址总线<br />t2：对应两个微操作</p><ul><li>取出指令放到数据总线上</li><li>PC+”1” <strong>要当心同步、异步 — 发送在同一个时间单位内</strong></li></ul><p>每一个<code>t</code>表示一个时间单位，表示微操作发送在哪一个时间单位内。<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676278523396-e3840dbe-3f21-4676-abab-1a1476fb7136.png#averageHue=%23f3f1f1&clientId=ubb345b49-fd30-4&from=paste&height=557&id=u82da444f&name=image.png&originHeight=696&originWidth=958&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=165603&status=done&style=shadow&taskId=u5c1651a5-9e3f-41d2-b8d3-eb90467f343&title=&width=766.4" alt="image.png"><br />调整了<code>pc + 1</code>的位置<br><a name="mhhov"></a></p><h3 id="间址周期"><a href="#间址周期" class="headerlink" title="间址周期"></a>间址周期</h3><p>将间接地址转换成有效地址<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676278788647-3d63125c-b97e-4e52-af77-2946c0253697.png#averageHue=%23f3f2f1&clientId=ubb345b49-fd30-4&from=paste&height=373&id=uc979d547&name=image.png&originHeight=466&originWidth=895&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=79507&status=done&style=shadow&taskId=u3b22535b-d7b3-4ffe-81b9-a1bd0afcfa9&title=&width=716" alt="image.png"> </p><ol><li>IR中存了取到的指令，将指令中的地址部分放到MAR中</li><li>将地址对应的内容从存储器中放到MBR中</li><li>替换IR的地址部分<br><a name="TZTmR"></a></li></ol><h3 id="执行周期"><a href="#执行周期" class="headerlink" title="执行周期"></a>执行周期</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670921628782-56c3af73-0ac2-4068-9815-af825b50c551.png#averageHue=%23fafaf9&clientId=u146f9401-8b59-4&from=paste&height=364&id=ue6eb390d&name=image.png&originHeight=455&originWidth=713&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71962&status=done&style=shadow&taskId=u68a6ba34-8b37-4654-92ac-994317b6ad2&title=&width=570.4" alt="image.png"></p><ol><li>送地址后才能取到内容，所以t1和t2不能合并</li><li><code>t2</code>是写<code>MBR</code>，<code>t3</code>是读<code>MBR</code>，所以不能合并</li></ol><p>转移并保存：保存PC地址，并跳转到一个新的地址</p><ol><li>将IR中的地址送到MAR中，告诉MAR，PC要存到哪里，该地址是PC要保存到的地址。把PC的内容送到MBR中。这俩个步骤互相独立，可以存放在同一个时间周期内。</li><li>把MBR的内容写到主存中，把新的地址存到PC中。只有PC保存了，才能更新PC；只有写入了MBR，才能继续读MBR</li><li>PC+1<br><a name="fGC5U"></a></li></ol><h3 id="中断周期？"><a href="#中断周期？" class="headerlink" title="中断周期？"></a>中断周期？</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676280174445-3d2b645b-a50c-452e-8184-9f1f59fe1696.png#averageHue=%23f4f3f3&clientId=ubb345b49-fd30-4&from=paste&height=391&id=u226d9394&name=image.png&originHeight=489&originWidth=881&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=72024&status=done&style=shadow&taskId=uf6aae035-54e3-413a-93a6-46859a8663a&title=&width=704.8" alt="image.png"><br />只需要两个时间单位<br><a name="KfHQA"></a></p><h2 id="指令周期代码-ICC"><a href="#指令周期代码-ICC" class="headerlink" title="指令周期代码 ICC"></a>指令周期代码 ICC</h2><p><strong>取指、间址、中断周期各有一个微操作序列</strong>，执行周期则对于<strong>每个操作码有一个微操作序列</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670923075438-d6d8e465-8686-4a40-b27c-8526d10f6896.png#averageHue=%23eeeeed&clientId=u146f9401-8b59-4&from=paste&height=366&id=ucdc5faf8&name=image.png&originHeight=458&originWidth=638&originalType=binary&ratio=1&rotation=0&showTitle=false&size=170392&status=done&style=shadow&taskId=ueead7699-0a05-466d-8f5b-1f4411fc833&title=&width=510.4" alt="image.png"><br><a name="uOKF1"></a></p><h3 id="取指周期-1"><a href="#取指周期-1" class="headerlink" title="取指周期"></a>取指周期</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676280691528-bbc07979-212b-4fec-99ce-282976e7cc33.png#averageHue=%23ececeb&clientId=ubb345b49-fd30-4&from=paste&height=505&id=u7e1a6cd4&name=image.png&originHeight=631&originWidth=889&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=225827&status=done&style=shadow&taskId=u660f565e-acf8-4a97-b91f-fba6f696bab&title=&width=711.2" alt="image.png"><br><a name="tMwuv"></a></p><h3 id="间址周期-1"><a href="#间址周期-1" class="headerlink" title="间址周期"></a>间址周期</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676280775169-d67730ae-883a-40a8-bdd4-09b8a62d4d85.png#averageHue=%23eef5f0&clientId=ubb345b49-fd30-4&from=paste&height=536&id=u7fc81258&name=image.png&originHeight=670&originWidth=937&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=328306&status=done&style=shadow&taskId=u854927ac-dc47-4425-a996-a8bdcddd6dd&title=&width=749.6" alt="image.png"><br><a name="vGdBp"></a></p><h3 id="执行周期-1"><a href="#执行周期-1" class="headerlink" title="执行周期"></a>执行周期</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676280817628-3d293da8-8921-4ba2-9e5e-e21a587769f4.png#averageHue=%23eff3f0&clientId=ubb345b49-fd30-4&from=paste&height=534&id=uc2fb5dd3&name=image.png&originHeight=667&originWidth=948&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=339962&status=done&style=shadow&taskId=ueb4de16f-f247-415d-ba77-436cd0a0274&title=&width=758.4" alt="image.png"><br><a name="JXVaS"></a></p><h3 id="中断周期"><a href="#中断周期" class="headerlink" title="中断周期"></a>中断周期</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676280899073-1d33d56f-2433-47f7-9f6c-d696c17dd9f1.png#averageHue=%23f7f8f2&clientId=ubb345b49-fd30-4&from=paste&height=534&id=uaf31cf12&name=image.png&originHeight=668&originWidth=972&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=346997&status=done&style=shadow&taskId=ud769503d-39ea-4fb7-b3cf-c30375f1abf&title=&width=777.6" alt="image.png"><br><a name="mlWDz"></a></p><h2 id="CPU内部总线"><a href="#CPU内部总线" class="headerlink" title="CPU内部总线"></a>CPU内部总线</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676281035906-53dbaff2-32e7-4ae7-adc8-7e12974ea3de.png#averageHue=%23f1f0ef&clientId=ubb345b49-fd30-4&from=paste&height=522&id=u3c10322b&name=image.png&originHeight=652&originWidth=931&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=136100&status=done&style=shadow&taskId=u4d833f0e-59c8-4aa3-8c43-1f1794ba05e&title=&width=744.8" alt="image.png"><br><a name="LrJFt"></a></p><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><p><a name="j278F"></a></p><h3 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h3><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676281278060-8d173a61-1a73-453e-821c-54461a8baa9c.png#averageHue=%23f1eeed&clientId=ubb345b49-fd30-4&from=paste&height=490&id=m3XRN&name=image.png&originHeight=612&originWidth=900&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=162528&status=done&style=shadow&taskId=uc4e841f0-cf1f-482c-a87e-240e7c5e9cd&title=&width=720" alt="image.png"><br><a name="mMIIK"></a></p><h3 id="控制器的输入"><a href="#控制器的输入" class="headerlink" title="控制器的输入"></a>控制器的输入</h3><p>操作码影响执行周期<br />寻址方式影响间址周期<br /><strong>控制器也会收到控制信号：中断请求</strong><br /> <img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924080197-92f1345a-44b0-4fd6-b352-a2ad677591fb.png#averageHue=%23eeeded&clientId=u146f9401-8b59-4&from=paste&height=491&id=rvPl9&name=image.png&originHeight=472&originWidth=634&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151922&status=done&style=shadow&taskId=u4639fc5b-9b73-4f61-a708-b188f87a503&title=&width=659.2000122070312" alt="image.png"><br><a name="VGiFM"></a></p><h3 id="控制器的输出"><a href="#控制器的输出" class="headerlink" title="控制器的输出"></a>控制器的输出</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924058358-da3ce790-1839-46be-937f-a330ae23528b.png#averageHue=%23f6f4f3&clientId=u146f9401-8b59-4&from=paste&height=442&id=MFOS4&name=image.png&originHeight=553&originWidth=727&originalType=binary&ratio=1&rotation=0&showTitle=false&size=159834&status=done&style=shadow&taskId=u56f0a3c7-39bb-4d22-ad37-938dbf99c77&title=&width=581.6" alt="image.png"><br><a name="OHh5Y"></a></p><h3 id="控制信号"><a href="#控制信号" class="headerlink" title="控制信号"></a>控制信号</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924483599-b92aeb4a-7e93-4064-91ab-8445e1ea85be.png#averageHue=%23f3f2f1&clientId=u146f9401-8b59-4&from=paste&height=637&id=sd40r&name=image.png&originHeight=796&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&size=238181&status=done&style=shadow&taskId=ub02a93a6-6308-453e-8ed6-abb2801583b&title=&width=919.2" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676281867546-98feb1b3-1158-412b-bb4a-91f8eb712476.png#averageHue=%23efefef&clientId=udc78f790-975c-4&from=paste&height=556&id=u8b73ca0e&name=image.png&originHeight=695&originWidth=723&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=146381&status=done&style=shadow&taskId=u8127928b-7155-4ff3-acb4-aeb7b9eca51&title=&width=578.4" alt="image.png">（图有点小问题）<br><a name="mjmzm"></a></p><h3 id="控制器的最小特性"><a href="#控制器的最小特性" class="headerlink" title="控制器的最小特性"></a>控制器的最小特性</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924690734-76f534ec-3118-4d4e-8e78-eabeba97f725.png#averageHue=%23e7e7e7&clientId=u146f9401-8b59-4&from=paste&height=158&id=u36c09f17&name=image.png&originHeight=197&originWidth=595&originalType=binary&ratio=1&rotation=0&showTitle=false&size=70588&status=done&style=shadow&taskId=u32ffcf32-6324-417a-8f6c-fe65b9df127&title=&width=476" alt="image.png"><br />实现上尽可能地简洁<br><a name="K8fzg"></a></p><h2 id="控制器实现"><a href="#控制器实现" class="headerlink" title="控制器实现"></a>控制器实现</h2><p><a name="e3A87"></a></p><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924736797-818d155f-84a8-425a-8e59-d6f108c9de65.png#averageHue=%23e6e5e5&clientId=u146f9401-8b59-4&from=paste&height=162&id=u1261aaff&name=image.png&originHeight=202&originWidth=614&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62625&status=done&style=shadow&taskId=uf31e8afa-8907-46a6-8239-c13c24a5e71&title=&width=491.2" alt="image.png"></h4><p><a name="rRAKd"></a></p><h3 id="硬布线实现"><a href="#硬布线实现" class="headerlink" title="硬布线实现"></a>硬布线实现</h3><p><a name="L0ANx"></a></p><h4 id="控制器输入"><a href="#控制器输入" class="headerlink" title="控制器输入"></a>控制器输入</h4><p>时钟、标志、控制总线的输入、指令寄存器</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924821550-85ba9bbb-1562-4713-80e2-963a120852ae.png#averageHue=%23e4e3e2&clientId=u146f9401-8b59-4&from=paste&height=381&id=u7d0894d5&name=image.png&originHeight=476&originWidth=638&originalType=binary&ratio=1&rotation=0&showTitle=false&size=175391&status=done&style=shadow&taskId=u64965435-e688-4537-9c68-14d42d8190c&title=&width=510.4" alt="image.png"><br />操作码通过译码器转化为微操作序列<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924860619-1d10e097-e753-49c0-b8bb-b285856ec712.png#averageHue=%23e9e9e9&clientId=u146f9401-8b59-4&from=paste&height=344&id=uefae32d3&name=image.png&originHeight=372&originWidth=615&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120410&status=done&style=shadow&taskId=u61ad6c15-85bf-4e83-b721-08b10ca401e&title=&width=568" alt="image.png"><br><a name="IwrJu"></a></p><h4 id="控制器逻辑"><a href="#控制器逻辑" class="headerlink" title="控制器逻辑"></a>控制器逻辑</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670925024608-139dd57a-92b9-4aae-8f1c-46031c93a366.png#averageHue=%23f1f0f0&clientId=u146f9401-8b59-4&from=paste&height=384&id=ud52198ee&name=image.png&originHeight=480&originWidth=636&originalType=binary&ratio=1&rotation=0&showTitle=false&size=148984&status=done&style=shadow&taskId=u0f73cfd3-b851-4204-bdc1-e3a1e1e0f0e&title=&width=508.8" alt="image.png"><br />缺点：太过复杂<br><a name="NhjWi"></a></p><h3 id="微程序实现？"><a href="#微程序实现？" class="headerlink" title="微程序实现？"></a>微程序实现？</h3><p>和硬布线实现有什么不同<br><a name="tf8By"></a></p><h4 id="基本概念和思路"><a href="#基本概念和思路" class="headerlink" title="基本概念和思路"></a>基本概念和思路</h4><ul><li>微程序(固件)介于硬件与软件之间</li><li>设计固件比设计硬件容易，但写固件程序比软件程序困难·微指令序列</li><li>微指令∶<strong>每行</strong>描述一个时间内出现的<strong>一组微操作</strong>。</li></ul><p>基本思路</p><ul><li>对于每个微操作，控制器的任务是产生<strong>一组控制信号</strong>，即控制器发出的<strong>每根控制线或开或关</strong>（每根控制线由一个二进制数字表示)·构造一个控制字，每位代表一根控制线，这样每个微操作能用控制字中的不同的0和1的样式来表示</li><li>将这些控制字串在一起，可以表示控制器需要完成的微操作序列</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670925452420-15ec817d-0ecb-4f92-8b9e-3747a0d218b5.png#averageHue=%23ededed&clientId=ufebcb9f6-dd4b-4&from=paste&height=409&id=ubcc7dddb&name=image.png&originHeight=427&originWidth=641&originalType=binary&ratio=1&rotation=0&showTitle=false&size=134305&status=done&style=shadow&taskId=u9796eab4-4ab8-473b-8ab8-8f025f36f14&title=&width=613.7999877929688" alt="image.png"><br><a name="yIwzn"></a></p><h3 id="微程序执行？"><a href="#微程序执行？" class="headerlink" title="微程序执行？"></a>微程序执行？</h3><p>取指、间接、中断的微操作序列是一样的，都可以用相同的微指令** ？ 为什么是一样的**<br />相同的操作码可以用相同的微指令序列<br /><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676300014626-a8f2f12a-c1d1-44a6-bded-c06f4a19dcde.png#averageHue=%23e7e7e6&clientId=udc78f790-975c-4&from=paste&height=550&id=uc7eadb7f&name=image.png&originHeight=687&originWidth=593&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=105694&status=done&style=shadow&taskId=ue3e63caa-b4a8-41c5-a064-6f35722d9cb&title=&width=474.4" alt="image.png"><br><a name="QQce4"></a></p><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671091969058-f30ca772-1c3f-45ce-9b46-13fdd746c7ef.png#averageHue=%23ececec&clientId=udfb510e8-790d-4&from=paste&height=330&id=ua00e4216&name=image.png&originHeight=413&originWidth=836&originalType=binary&ratio=1&rotation=0&showTitle=false&size=110959&status=done&style=shadow&taskId=ufaff4814-930d-48f6-86b1-a32e7b4ec6c&title=&width=668.8" alt="image.png"><br><a name="l6F1h"></a></p><h4 id="定序"><a href="#定序" class="headerlink" title="定序"></a>定序</h4><p>下一个指令的地址在哪？<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092076221-584ed9b1-f56e-48c2-964c-08168387ac63.png#averageHue=%23ededed&clientId=udfb510e8-790d-4&from=paste&height=445&id=u7f14c236&name=image.png&originHeight=556&originWidth=871&originalType=binary&ratio=1&rotation=0&showTitle=false&size=231351&status=done&style=shadow&taskId=u7d7c54d5-cdf6-464e-a516-93c558703ea&title=&width=696.8" alt="image.png"><br />双地址：指令太长，成本上升<br />地址选择有不同的方式。<br><a name="G6wv4"></a></p><h4 id="构成"><a href="#构成" class="headerlink" title="构成"></a>构成</h4><p><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1676300598587-c67eb512-c1e2-4278-892e-7f0b9e22843b.png#averageHue=%23eae9e8&clientId=udc78f790-975c-4&from=paste&height=402&id=u1932082a&name=image.png&originHeight=502&originWidth=863&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=167604&status=done&style=shadow&taskId=u6617685f-cf94-4a64-83a2-840ddc3e877&title=&width=690.4" alt="image.png"><br><a name="PSznR"></a></p><h4 id="工作流程？？"><a href="#工作流程？？" class="headerlink" title="工作流程？？"></a>工作流程？？</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092388440-552fbd64-9c06-49d9-946b-e5ec3eb1ac1a.png#averageHue=%23ece9e7&clientId=udfb510e8-790d-4&from=paste&height=390&id=u15aabe42&name=image.png&originHeight=488&originWidth=880&originalType=binary&ratio=1&rotation=0&showTitle=false&size=208748&status=done&style=shadow&taskId=uc20cf1b8-b0ae-451a-a02a-88e7a1ef88a&title=&width=704" alt="image.png"><br />下面这张图什么意思？<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092511829-b0e54373-734f-494d-ad8d-d7a9a8445a6d.png#averageHue=%23e2e1e1&clientId=udfb510e8-790d-4&from=paste&height=456&id=u1926c9ca&name=image.png&originHeight=570&originWidth=869&originalType=binary&ratio=1&rotation=0&showTitle=false&size=220817&status=done&style=shadow&taskId=u2de3c38a-52b4-4709-a765-86b6854c72a&title=&width=695.2" alt="image.png"></p><ul><li>操作码在指令寄存器中，需要进行译码器译码<br><a name="GnlTH"></a></li></ul><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092548608-5f84db8f-8a05-4361-9fc0-d82d24687646.png#averageHue=%23f2f2f2&clientId=udfb510e8-790d-4&from=paste&height=250&id=ub816ef12&name=image.png&originHeight=312&originWidth=660&originalType=binary&ratio=1&rotation=0&showTitle=false&size=44736&status=done&style=shadow&taskId=uc1c34492-71a6-44b6-b95e-0ddd302b047&title=&width=528" alt="image.png"><br><a name="PsYUs"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092625274-a3d92e0f-6821-4343-bcf7-cd8c895f7189.png#averageHue=%23efefef&clientId=udfb510e8-790d-4&from=paste&height=362&id=u7c3de8ed&name=image.png&originHeight=452&originWidth=670&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86893&status=done&style=shadow&taskId=u53e5f012-0942-4181-86a0-26642fe9abd&title=&width=536" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第四课 整数运算</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%9B%9B%E8%AF%BE%20%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%9B%9B%E8%AF%BE%20%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p><a name="nhw6e"></a></p><h2 id="加法器"><a href="#加法器" class="headerlink" title="加法器"></a>加法器</h2><p><a name="Gpexo"></a></p><h3 id="全加器"><a href="#全加器" class="headerlink" title="全加器"></a>全加器</h3><p>前提假设：<br><br /><br><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664467718264-0c488d43-4145-4ebd-8945-b62cc8662389.png#averageHue=%23eae2e0&clientId=ud7f3940e-7f69-4&from=paste&height=114&id=u379de0da&name=image.png&originHeight=142&originWidth=327&originalType=binary&ratio=1&rotation=0&showTitle=false&size=32951&status=done&style=shadow&taskId=u08be4cf8-bb99-47a4-9f12-2905559b80a&title=&width=261.6" alt="image.png"><br><a name="pgspn"></a></p><h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><p>公式：<br><br /><img src="https://cdn.nlark.com/yuque/__latex/6b6d76946fe54be4b3057c06487abf03.svg#card=math&code=F%20%3D%20X%20%5Cbigoplus%20Y%20%5Cbigoplus%20C_%7Bin%7D%20%5C%5C%0AC_%7Bout%7D%3D%20X%20%5Cbullet%20Y%20%2BX%20%5Cbullet%20C_%7Bin%7D%20%2B%20Y%20%5Cbullet%20C_%7Bin%7D%0A&id=bYhlI" alt="image.png"><br><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664467409312-d330df3d-06a5-410f-a57a-9d76e0ccc733.png#averageHue=%23f4f2f1&clientId=ud7f3940e-7f69-4&from=paste&height=410&id=u9a87f3b9&name=image.png&originHeight=513&originWidth=813&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114053&status=done&style=shadow&taskId=u8c242d78-746c-4c9c-b8cc-18857b1e816&title=&width=650.4" alt="image.png"><br><a name="MQufc"></a></p><h4 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h4><p>公式</p><br /><p><img src="https://cdn.nlark.com/yuque/__latex/e43dff128f12eb9e1f959290b6c873db.svg#card=math&code=C_%7Bout%7D%20%3D%20X%20%5Cbullet%20Y%20%2B%20%28X%2BY%29%20%5Cbullet%20C_%7Bin%7D%20%5C%5C%20%3D%20X%20%5Cbullet%20Y%20%2B%20%28X%20%5Cbigoplus%20Y%29%20%5Cbullet%20C_%7Bin%7D%0A&id=Hb5TD" alt="image.png"><br><br />其中，并非 <br /><img src="https://cdn.nlark.com/yuque/__latex/fa0e3b48e6cf2289e98b7449bf402186.svg#card=math&code=X%20%2B%20Y%20%3D%3D%20X%20%5Cbigoplus%20Y&id=Y4zV8"> 的返回值为真，而是因为和前面的X与Y相配合，刚好形成了对应的结果<br><br /><br><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664467661390-9e89045b-7a4c-4d0f-acf5-806f90e44c62.png#averageHue=%23f7f7f6&clientId=ud7f3940e-7f69-4&from=paste&height=320&id=ud6600788&name=image.png&originHeight=400&originWidth=725&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49858&status=done&style=shadow&taskId=u5f38b6b8-4c06-4475-a122-41ed2b22ba2&title=&width=580" alt="image.png"><br />那么这种改善的好处是，减少了与门的使用</p><p><a name="KBcWd"></a></p><h3 id="串行进位（行波进位）加法器"><a href="#串行进位（行波进位）加法器" class="headerlink" title="串行进位（行波进位）加法器"></a>串行进位（行波进位）加法器</h3><ul><li>1位加法：<br><img src="https://cdn.nlark.com/yuque/__latex/f4941249f1d11a1885789b6eae8696d4.svg#card=math&code=X_%7Bi%7D%20%2B%20Y_%7Bi%7D&id=K7P8e" alt="image.png"></li><li>第i位加法：</li></ul><p><img src="https://cdn.nlark.com/yuque/__latex/43267647225ac22f9d5b38f5d111a94c.svg#card=math&code=F_%7Bi%7D%20%3D%20X_%7Bi%7D%20%5Cbigoplus%20Y_%7Bi%7D%20%5Cbigoplus%20C_%7Bi-1%7D%20%5C%5C%0AC_%7Bi%7D%20%3D%20X_%7Bi%7DC_%7Bi-1%7D%20%2B%20Y_%7Bi%7DC_%7Bi-1%7D%20%2B%20X_iY_i%20&id=byBlo" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664468091575-81876688-7542-418a-8b6d-4430faaec967.png#averageHue=%23f4f1f1&clientId=ud7f3940e-7f69-4&from=paste&height=302&id=u007eeef5&name=image.png&originHeight=377&originWidth=764&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89888&status=done&style=shadow&taskId=ue86b526b-0c90-4868-843b-97da346dac9&title=&width=611.2" alt="image.png"></p><p><br />Cn 是2n的延迟，原因是每个延迟为2：与操作+或操作<br />Fn是2n+1的延迟，原因是，</p><p><img src="https://cdn.nlark.com/yuque/__latex/ffa01558fab0e00cfdd749ec2d60f2f4.svg#card=math&code=2n-1%20%3D%202%2A%28n-1%29%2B3&id=CVdFe"><br><br />其中，</p><p><img src="https://cdn.nlark.com/yuque/__latex/81083cba0c4fb4c4d3ec9ac308736a49.svg#card=math&code=2%2A%28n-1%29%20%E4%BB%A3%E8%A1%A8%E7%9A%84%E6%98%AF%20C_%7Bn-1%7D%E4%BA%A7%E7%94%9F%E7%9A%84%E5%BB%B6%E8%BF%9F&id=gFpuH"> 额外+3 是因为F产生的延迟。需要注意的是</p><br /><p><img src="https://cdn.nlark.com/yuque/__latex/7e7defc5e24c1284250e6c1ee1153487.svg#card=math&code=X_%7Bi%7D%20%5Cbigoplus%20Y_%20%7Bi%7D%20%E6%98%AF%E5%8F%AF%E4%BB%A5%E6%8F%90%E5%89%8D%E8%BF%90%E7%AE%97%E5%A5%BD%E7%9A%84&id=H4Gev">因此，不会产生额外的延迟<br><a name="zSccX"></a></p><h3 id="全先行进位加法器"><a href="#全先行进位加法器" class="headerlink" title="全先行进位加法器"></a>全先行进位加法器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470369829-6e248a4c-87cc-49c6-ad9f-6272f5170136.png#averageHue=%23f9f8f7&clientId=ud7f3940e-7f69-4&from=paste&height=476&id=u82f7ca3c&name=image.png&originHeight=595&originWidth=752&originalType=binary&ratio=1&rotation=0&showTitle=false&size=137809&status=done&style=shadow&taskId=u16a58e6a-7988-4cb5-a0c7-4fe5ecfc9d1&title=&width=601.6" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470145406-a7817201-d9aa-4e33-b189-295b391eecce.png#averageHue=%23f8f6f6&clientId=ud7f3940e-7f69-4&from=paste&height=485&id=ub2c9f993&name=image.png&originHeight=606&originWidth=824&originalType=binary&ratio=1&rotation=0&showTitle=true&size=108997&status=done&style=shadow&taskId=u5c889ccf-2a81-4fc9-8eff-bfd96bf5b8d&title=n%E4%B8%AA%E6%88%96%E9%97%A8%E6%94%B9%E4%B8%BA1%E4%B8%AA%E6%88%96%E9%97%A8&width=659.2" alt="image.png" title="n个或门改为1个或门"></p><ul><li>1ty：代表的是生成信号和传播信号的生成</li><li>2ty：代表的是第i个进位信号的生成：1延迟的与运算+1延迟的或运算【与运算和或运算可以接受任意个数的参数】</li><li>3ty：代表的是第i个本位的生成：3延迟的或运算【和之前的1+2并行消耗，先计算X和Y的异或运算，经过3延迟后，C也得到了】+3延迟的或运算<br><a name="DqoPF"></a></li></ul><h3 id="部分先行进位加法器"><a href="#部分先行进位加法器" class="headerlink" title="部分先行进位加法器"></a>部分先行进位加法器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470171477-4aece9f3-73d1-401d-b7b0-13ef941e40d4.png#averageHue=%23f8f7f7&clientId=ud7f3940e-7f69-4&from=paste&height=494&id=u13caedb2&name=image.png&originHeight=618&originWidth=822&originalType=binary&ratio=1&rotation=0&showTitle=false&size=155630&status=done&style=shadow&taskId=u013245b0-e35d-48cb-85b1-8b8f88aebe8&title=&width=657.6" alt="image.png"></p><ul><li>3ty&#x3D;2ty+1ty</li></ul><p>在最开始时，</p><p><img src="https://cdn.nlark.com/yuque/__latex/f067520d99b0a22dee9abd4241528bfb.svg#card=math&code=G_%7B0%7D%3DX_%7B0%7D%20%5Cbullet%20Y_%7B0%7D%20%5C%20%5C%20and%20%5C%20%5C%20%20%20P_%7B0%7D%20%3D%20X_%7B0%7D%20%5Cbullet%20Y_%7B0%7D&id=OmaIt" alt="image.png">此时的计算需要最初的1ty，之后，再根据计算公式可知需要2ty的延迟来生成<br><img src="https://cdn.nlark.com/yuque/__latex/3251ead7580cfd081ce354aaaf39201e.svg#card=math&code=C_%7B8%7D%0A&id=EgYeK"> 因此总延迟为3</p><ul><li>2ty 2ty 分别代表<br><img src="https://cdn.nlark.com/yuque/__latex/41afffd775e4ecdc5fca82f842aa1c9b.svg#card=math&code=C_%7B16%7D%0A&id=DU8dT" alt="image.png">和<br><img src="https://cdn.nlark.com/yuque/__latex/738bcc5adfc17944d2fae6b7fa88ea40.svg#card=math&code=C_%7B24%7D&id=KxKz1">的生成</li><li>5ty &#x3D; 3ty + 2ty 其中3ty代表的则是F的生成，2ty代表最后一次进位的生成<br><a name="ZiA71"></a></li></ul><h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><p><a name="yDkpT"></a></p><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>![image.png] (<a href="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470207731-27c3d92c-f614-4a9b-8d4a-2b0b24080dbf">https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470207731-27c3d92c-f614-4a9b-8d4a-2b0b24080dbf</a>.<br>png#averageHue&#x3D;%23fdfcfc&amp;clientId&#x3D;ud7f3940e-7f69-4&amp;from&#x3D;paste&amp;height&#x3D;366&amp;id&#x3D;ub1add33b&amp;name&#x3D;image.png&amp;originHeight&#x3D;457&amp;originWidth&#x3D;738&amp;originalType&#x3D;binary&amp;ratio&#x3D;1&amp;rotation&#x3D;0&amp;showTitle&#x3D;false&amp;size&#x3D;53795&amp;status&#x3D;done&amp;style&#x3D;shadow&amp;taskId&#x3D;uca538bd1-8563-40dd-80ad-e6329579f19&amp;title&#x3D;&amp;width&#x3D;590.4)</p><p><br />标注：此处的<br><br /><img src="https://cdn.nlark.com/yuque/__latex/1f093cca47b2c22bde288e8322d68fa5.svg#card=math&code=C_%7Bn%7D%E3%80%81X_%7Bn%7D%E3%80%81Y_%20%7Bn%7D&id=lzxdf">单单第n位<br><a name="f43T5"></a></p><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>![image.png] (<a href="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664871896605-00f88e72-4afb-4038-8c5c-69c34a7e6c17">https://cdn.nlark.com/yuque/0/2022/png/32543531/1664871896605-00f88e72-4afb-4038-8c5c-69c34a7e6c17</a>.<br>png#averageHue&#x3D;%23fbfbfa&amp;clientId&#x3D;u7ba0bf43-6d8f-4&amp;from&#x3D;paste&amp;height&#x3D;478&amp;id&#x3D;u84a86838&amp;name&#x3D;image.png&amp;originHeight&#x3D;597&amp;originWidth&#x3D;827&amp;originalType&#x3D;binary&amp;ratio&#x3D;1&amp;rotation&#x3D;0&amp;showTitle&#x3D;false&amp;size&#x3D;69726&amp;status&#x3D;done&amp;style&#x3D;shadow&amp;taskId&#x3D;u2c5dcef2-18ff-473d-8dc0-47ec68badf3&amp;title&#x3D;&amp;width&#x3D;661.6)<br><br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664871790303-9d8a4091-a940-4767-8135-00a6ca831d57.png#averageHue=%23f9f7f6&clientId=u7ba0bf43-6d8f-4&from=paste&height=231&id=uaf7c300c&name=image.png&originHeight=289&originWidth=799&originalType=binary&ratio=1&rotation=0&showTitle=false&size=41667&status=done&style=shadow&taskId=ub3dc7270-32b9-4483-b1e9-b1736d47611&title=&width=639.2" alt="image.png"><br><a name="Twjzd"></a></p><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>二进制乘法不需要乘法表进行存储。十分方便</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664872256196-9c3f454e-c8f4-4d30-9820-a544b539687f.png#averageHue=%23f5f3f2&clientId=u7ba0bf43-6d8f-4&from=paste&height=394&id=u87d85337&name=image.png&originHeight=492&originWidth=852&originalType=binary&ratio=1&rotation=0&showTitle=false&size=136492&status=done&style=shadow&taskId=ub51bd28d-d835-408d-a371-d63e7ee1806&title=&width=681.6" alt="image.png"><br><br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664872573267-7c707b44-df0b-4dc5-a4ad-44ccb9d40808.png#averageHue=%23fcf9f9&clientId=u7ba0bf43-6d8f-4&from=paste&height=687&id=u5cb75d9c&name=image.png&originHeight=859&originWidth=1194&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162667&status=done&style=shadow&taskId=uea26deb4-2cd0-40ac-9107-cf43e3de0a9&title=&width=955.2" alt="image.png"></p><p><a name="cziiN"></a></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664873083261-c5dfb876-e557-42c5-8267-8880d9263bf5.png#averageHue=%23faf5f4&clientId=u7ba0bf43-6d8f-4&from=paste&height=281&id=u67b0db84&name=image.png&originHeight=351&originWidth=796&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74435&status=done&style=shadow&taskId=u898aac6d-ca54-4712-8edd-2c5f00ab48b&title=&width=636.8" alt="image.png"></p><p><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664873700060-4153e091-b6ad-4e34-9db5-9e30599dd25d.png#averageHue=%23f3f1f1&clientId=u7ba0bf43-6d8f-4&from=paste&height=522&id=ub546ec4e&name=image.png&originHeight=652&originWidth=874&originalType=binary&ratio=1&rotation=0&showTitle=false&size=167992&status=done&style=shadow&taskId=u488f5095-e002-493d-9c98-72c0c5ead42&title=&width=699.2" alt="image.png"></p><p><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664873711104-44feb530-e235-43cf-8824-7c6e286fc498.png#averageHue=%23f4f3f3&clientId=u7ba0bf43-6d8f-4&from=paste&height=533&id=u74a3cd43&name=image.png&originHeight=666&originWidth=906&originalType=binary&ratio=1&rotation=0&showTitle=false&size=158732&status=done&style=shadow&taskId=ud1ab9005-f399-400a-aed9-8b0d0e691c1&title=&width=724.8" alt="image.png"></p><p><br /><img src="https://cdn.nlark.com/yuque/0/2023/png/32543531/1677227495378-49285cfa-2079-466a-aea7-983cbcde62d1.png#averageHue=%23f4f3f1&clientId=u0190adfa-5953-4&from=paste&height=363&id=u62eb60d8&name=image.png&originHeight=454&originWidth=662&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=107406&status=done&style=shadow&taskId=u93350e55-2fb1-47b0-a926-7b005359e0a&title=&width=529.6" alt="image.png"></p><p><a name="OAWYS"></a></p><h4 id="出错"><a href="#出错" class="headerlink" title="出错"></a>出错</h4><ol><li>原码一位乘法</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664874010621-a3a12e09-883b-487e-84c0-6cc18b625b17.png#averageHue=%23fbf9f8&clientId=u7ba0bf43-6d8f-4&from=paste&height=362&id=u748bad8f&name=image.png&originHeight=452&originWidth=854&originalType=binary&ratio=1&rotation=0&showTitle=false&size=82229&status=done&style=shadow&taskId=u3cf13107-4871-43e3-aa78-068913e3aee&title=&width=683.2" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664876294590-608360fa-eb5e-40ad-bea8-91cd0e461fc4.png#averageHue=%23f9f8f6&clientId=u7ba0bf43-6d8f-4&from=paste&height=501&id=u9a4dc669&name=image.png&originHeight=626&originWidth=1052&originalType=binary&ratio=1&rotation=0&showTitle=false&size=167956&status=done&style=shadow&taskId=u3f44c4e3-ef0d-41ba-94f2-05b0d274986&title=&width=841.6" alt="image.png"></p><p><a name="IatBN"></a></p><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p><a name="fn65V"></a></p><h4 id="原码：恢复余数法"><a href="#原码：恢复余数法" class="headerlink" title="原码：恢复余数法"></a>原码：恢复余数法</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665579103517-21bc973e-b11d-4d6e-9dc4-9ff3f7a18596.png#averageHue=%23f5efef&clientId=u8bbed64e-7791-4&from=paste&height=463&id=u22b8e079&name=image.png&originHeight=579&originWidth=1063&originalType=binary&ratio=1&rotation=0&showTitle=false&size=254895&status=done&style=shadow&taskId=u0ca13c6b-0f6e-4c69-906c-32ff52654f5&title=&width=850.4" alt="image.png"><br />余数逻辑左移是为了实现错位相减。因为手算时实际上是除数右移，而我们规定除数不移动时，则是余数左移 <br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665046084999-fcd74f9f-0fe8-47ad-86b9-488c58d7454f.png#averageHue=%23f6f3f3&clientId=u28ebc0ec-46ba-4&from=paste&height=528&id=u6b118483&name=image.png&originHeight=660&originWidth=946&originalType=binary&ratio=1&rotation=0&showTitle=false&size=132551&status=done&style=shadow&taskId=u60029e27-2758-4f97-ad81-7785c2f6518&title=&width=756.8" alt="image.png"></p><p>优化：并行+硬件的节省<br />并行：<br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665046246364-e0791a34-797b-4388-89b4-9cb48fc432f3.png#averageHue=%23f1edec&clientId=u28ebc0ec-46ba-4&from=paste&height=278&id=u428eaea0&name=image.png&originHeight=347&originWidth=814&originalType=binary&ratio=1&rotation=0&showTitle=false&size=73197&status=done&style=shadow&taskId=ua8d886dd-cfd3-4d6e-ba8c-2c6633b7d70&title=&width=651.2" alt="image.png"><br><a name="siEx8"></a></p><h4 id="原码：不恢复余数法"><a href="#原码：不恢复余数法" class="headerlink" title="原码：不恢复余数法"></a>原码：不恢复余数法</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665579191990-bdda3b92-bd88-4f85-92fb-d515840a9493.png#averageHue=%23f2e8e8&clientId=u8bbed64e-7791-4&from=paste&height=459&id=u34e65276&name=image.png&originHeight=574&originWidth=1054&originalType=binary&ratio=1&rotation=0&showTitle=false&size=245859&status=done&style=shadow&taskId=u5ad584c9-d945-43fe-bb83-9e65c8e524e&title=&width=843.2" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665579365006-a43c0888-f001-4d5a-8fe4-87d7e335a295.png#averageHue=%23eadbdb&clientId=u8bbed64e-7791-4&from=paste&height=864&id=ucfca5b75&name=image.png&originHeight=1080&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1043460&status=done&style=shadow&taskId=u71c4915b-0254-473b-a9f7-0feb9e78592&title=&width=1536" alt="image.png"><br />若最后一步余数为负数，仍然需要恢复为正确余数<br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665579436894-84f3a9d4-7811-463d-8a7a-3b44b91052d5.png#averageHue=%23f4f3f3&clientId=u8bbed64e-7791-4&from=paste&height=720&id=ude438b77&name=image.png&originHeight=900&originWidth=1671&originalType=binary&ratio=1&rotation=0&showTitle=false&size=644732&status=done&style=shadow&taskId=u5afb7704-843b-4d9a-b43d-11bc895b156&title=&width=1336.8" alt="image.png"></p><p><a name="Qj7E8"></a></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><p><strong>余数和被除数的符号相同</strong><br><a name="KNCuv"></a></p><h4 id="补码：不恢复余数法"><a href="#补码：不恢复余数法" class="headerlink" title="补码：不恢复余数法"></a>补码：不恢复余数法</h4><p><strong>余数和除数相减：</strong></p><ul><li>如果余数和除数的符号相同：减法</li><li>如果余数和除数的符号不同：加法</li></ul><ol><li>够减：余数和新余数的符号不能变</li><li>不够减：余数和新余数的符号改变</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665048069773-3951cb9f-66ca-47a0-950c-61e963f6fc6b.png#averageHue=%23f8f6f3&clientId=u28ebc0ec-46ba-4&from=paste&height=669&id=uc178287d&name=image.png&originHeight=836&originWidth=1185&originalType=binary&ratio=1&rotation=0&showTitle=false&size=283691&status=done&style=shadow&taskId=u7f5c0fd3-8af9-4871-b738-05131272bb9&title=&width=948" alt="image.png"></p><br /><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665579578780-d5692823-6614-40ad-a7b2-90686d44692f.png#averageHue=%23f0eeee&clientId=u8bbed64e-7791-4&from=paste&height=482&id=ue6d90815&name=image.png&originHeight=602&originWidth=1048&originalType=binary&ratio=1&rotation=0&showTitle=false&size=316566&status=done&style=shadow&taskId=u3e4bf227-6e75-429f-950d-6428d070262&title=&width=838.4" alt="image.png"><br><a name="ML3zD"></a></p><h4 id="除法硬件改善"><a href="#除法硬件改善" class="headerlink" title="除法硬件改善"></a>除法硬件改善</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665047579085-5f0b98ff-e23e-4909-9617-03b56fa5a3bb.png#averageHue=%23ebe9e5&clientId=u28ebc0ec-46ba-4&from=paste&height=633&id=Kckb2&name=image.png&originHeight=791&originWidth=909&originalType=binary&ratio=1&rotation=0&showTitle=false&size=295217&status=done&style=shadow&taskId=u095b73a2-14a9-4e12-97e7-bcf3cc5761d&title=&width=727.2" alt="image.png"><br><br /></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665047595553-58e0bc80-0076-41ca-b06a-e287844ffb3f.png#averageHue=%23f5f1ef&clientId=u28ebc0ec-46ba-4&from=paste&height=533&id=veA4w&name=image.png&originHeight=666&originWidth=884&originalType=binary&ratio=1&rotation=0&showTitle=false&size=183001&status=done&style=shadow&taskId=ueab311b0-10bc-4d02-91da-6b0e94e8f15&title=&width=707.2" alt="image.png"><br /><strong>被除数移动了，除数就不需要移动了</strong><br><a name="xB2lR"></a></p><h4 id="除法运算总结"><a href="#除法运算总结" class="headerlink" title="除法运算总结"></a>除法运算总结</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665579646869-a44972c3-bead-470a-9bd7-42c6d1d185aa.png#averageHue=%23f6f8f0&clientId=u8bbed64e-7791-4&from=paste&height=534&id=u3b7d1950&name=image.png&originHeight=668&originWidth=1736&originalType=binary&ratio=1&rotation=0&showTitle=false&size=387560&status=done&style=shadow&taskId=ua0d4586e-e273-4dc1-bcf2-2f1747e4429&title=&width=1388.8" alt="image.png"><br><a name="aHsWD"></a></p><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h3><p><a name="Dob89"></a></p><h4 id="乘法溢出"><a href="#乘法溢出" class="headerlink" title="乘法溢出"></a>乘法溢出</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1665460775408-5807ea34-f57e-4adf-a3b2-1ceb739a75cb.png#averageHue=%23f7f4f3&clientId=u0bb1d943-96d9-4&from=paste&height=446&id=u789924f5&name=image.png&originHeight=557&originWidth=882&originalType=binary&ratio=1&rotation=0&showTitle=false&size=161803&status=done&style=shadow&taskId=u49b375ff-98bd-446a-a4ee-dcdbc97d367&title=&width=705.6" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十课 数据校验码</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E8%AF%BE%20%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E7%A0%81/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E8%AF%BE%20%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p><a name="PzQE5"></a></p><h3 id="差错"><a href="#差错" class="headerlink" title="差错"></a>差错</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668072243204-c84422fd-18cd-4ca5-97c2-7366d05627fa.png#averageHue=%23f5f2f1&clientId=u2314a222-6597-4&from=paste&height=558&id=u1da99de2&name=image.png&originHeight=698&originWidth=1081&originalType=binary&ratio=1&rotation=0&showTitle=false&size=243839&status=done&style=none&taskId=u9a869d40-ae60-4326-81bd-e15b9a6afa7&title=&width=864.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668072867915-b6daef4a-6422-4b57-999c-1f107467e5b4.png#averageHue=%23f6f6f5&clientId=u2314a222-6597-4&from=paste&height=647&id=uc8fb1002&name=image.png&originHeight=809&originWidth=1070&originalType=binary&ratio=1&rotation=0&showTitle=false&size=172220&status=done&style=none&taskId=u582715c3-63a1-4b75-8a14-436188cacb1&title=&width=856" alt="image.png"><br><a name="a31Gg"></a></p><h3 id="纠错"><a href="#纠错" class="headerlink" title="纠错"></a>纠错</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668073261817-d8c44924-6189-48d8-b516-2ce0c440c03f.png#averageHue=%23f7f5f4&clientId=u2314a222-6597-4&from=paste&height=377&id=u4a3bc987&name=image.png&originHeight=471&originWidth=979&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126172&status=done&style=none&taskId=ua82c02da-aa09-4d61-bbb1-5a7678e0fa9&title=&width=783.2" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668073252925-c5f59f43-da29-4d58-83bd-2d6c4c4dcfe0.png#averageHue=%23f4f2f2&clientId=u2314a222-6597-4&from=paste&height=366&id=ua5e71ea3&name=image.png&originHeight=457&originWidth=887&originalType=binary&ratio=1&rotation=0&showTitle=false&size=41314&status=done&style=none&taskId=u9689c090-e011-44c3-8ecb-3fbd2bbb6cf&title=&width=709.6" alt="image.png"></p><p><a name="GeMKt"></a></p><h3 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668073398885-759187f4-99e9-443d-aa0b-7e955548d242.png#averageHue=%23f8f6f5&clientId=u2314a222-6597-4&from=paste&height=602&id=u3efa6637&name=image.png&originHeight=753&originWidth=1045&originalType=binary&ratio=1&rotation=0&showTitle=false&size=194683&status=done&style=none&taskId=ubc053cc4-9207-40fc-b338-cb30d2355ed&title=&width=836" alt="image.png"><br />判断奇数&#x2F;偶数：异或<br />奇偶校验：相差一个异或<code>1</code><br />多一个异或：相当于多一个非门，多了一级门延迟</p><ul><li>奇校验的作用：防止全<code>0</code>数据的传输（同步传输中），从而区分传输有无结束</li><li>偶校验：门延迟更低</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668073730554-ce6cab88-339c-4fca-8b08-af11c8e1114c.png#averageHue=%23f7f6f5&clientId=u2314a222-6597-4&from=paste&height=456&id=u5c5addb4&name=image.png&originHeight=570&originWidth=822&originalType=binary&ratio=1&rotation=0&showTitle=false&size=105122&status=done&style=none&taskId=u1729ad4e-fdc4-4ae3-9da9-93e1c54ecd4&title=&width=657.6" alt="image.png"><br />长度短：发生偶数位的差错概率更低<br><a name="wDvPo"></a></p><h2 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503322446-e867af91-1154-4612-a236-7b82d99bf2d0.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=344&id=u5c597a55&name=image.png&originHeight=430&originWidth=755&originalType=binary&ratio=1&rotation=0&showTitle=false&size=129448&status=done&style=none&taskId=u7fd228f2-9a43-4e34-b3d5-0c699e9b365&title=&width=604" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503335114-07b6101b-e172-475a-8851-b1dbbb92e96e.png#averageHue=%23f8f7f6&clientId=ua09462e1-c042-4&from=paste&height=418&id=u592418c2&name=image.png&originHeight=523&originWidth=788&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124311&status=done&style=none&taskId=uf50173c5-293b-40ab-b783-855a5c31528&title=&width=630.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503343047-fe6c229e-ddd4-4d5e-ba7a-33176ab4640d.png#averageHue=%23f6f4f3&clientId=ua09462e1-c042-4&from=paste&height=237&id=u2e09ce12&name=image.png&originHeight=296&originWidth=760&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91441&status=done&style=none&taskId=u36f395cd-c247-41fa-81d2-e7156f93233&title=&width=608" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668501979453-d9c73b31-adbb-4d05-b53b-f24cadf82cf0.png#averageHue=%23f8f6f5&clientId=ua09462e1-c042-4&from=paste&height=419&id=u80808c0c&name=image.png&originHeight=524&originWidth=820&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120474&status=done&style=none&taskId=u611a78bb-437c-4ca4-afbb-370782e3165&title=&width=656" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503434104-33246edd-f80b-4c48-82d4-4fa881c09981.png#averageHue=%23f0efee&clientId=ua09462e1-c042-4&from=paste&height=205&id=u28bb05b2&name=image.png&originHeight=256&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57293&status=done&style=none&taskId=ub9d3c111-614c-4ae6-b5b1-afdbd4bdc5d&title=&width=655.2" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503457828-645948bf-3dd6-428a-a76e-604d13dfd0f4.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=262&id=u22dc3bda&name=image.png&originHeight=328&originWidth=706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=92020&status=done&style=none&taskId=u2545d4d7-936c-426a-9982-c618195e91d&title=&width=564.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503471385-27e56ca9-9909-4e67-9b7e-0c01897f0825.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=319&id=uf4eb3265&name=image.png&originHeight=399&originWidth=564&originalType=binary&ratio=1&rotation=0&showTitle=false&size=86489&status=done&style=none&taskId=ubafb02ae-ad70-4b95-9e86-379a6d7fdbd&title=&width=451.2" alt="image.png"><br><a name="eVelZ"></a></p><h3 id="码距和纠错理论"><a href="#码距和纠错理论" class="headerlink" title="码距和纠错理论"></a>码距和纠错理论</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668501191956-9a846bfd-f5f2-4104-ae87-3801e306d165.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=342&id=u5c8b99a1&name=image.png&originHeight=428&originWidth=727&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114523&status=done&style=none&taskId=uc397c26e-f912-49e3-aaf8-0bb315e4763&title=&width=581.6" alt="image.png"><br />奇偶校验的码距是2：如果D中有一位发生了变化则C中也有一位发生变化，如果D中有两位发生了变化，则C中没有变化<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668502235956-3f49ff77-6d27-4bb3-9d95-e180e811e10b.png#averageHue=%23fbf9f7&clientId=ua09462e1-c042-4&from=paste&height=508&id=u73da2056&name=image.png&originHeight=635&originWidth=820&originalType=binary&ratio=1&rotation=0&showTitle=false&size=186042&status=done&style=none&taskId=ufea91b5c-7270-42ee-8ea4-db7b5d96c47&title=&width=656" alt="image.png"><br />海明码2.0：同时可以识别出2位出错的情况，是双检错，但依然是<strong>单纠错</strong><br />D1 D2出错和C5 D3出错的情况相同，所以只能具备单纠错的能力<br><a name="oOj3b"></a></p><h3 id="循环冗余校验"><a href="#循环冗余校验" class="headerlink" title="循环冗余校验"></a>循环冗余校验</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503492488-add43037-7eeb-4440-acf0-667766475aef.png#averageHue=%23f9f8f7&clientId=ua09462e1-c042-4&from=paste&height=222&id=uf498f079&name=image.png&originHeight=277&originWidth=643&originalType=binary&ratio=1&rotation=0&showTitle=false&size=72369&status=done&style=none&taskId=ud8b4bbf8-dfbb-4fe4-9d3d-d9d70fcec6f&title=&width=514.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503669170-2bbd8525-5af0-4c61-a7b7-a906eb1b130c.png#averageHue=%23fcfbfa&clientId=ua09462e1-c042-4&from=paste&height=349&id=ufb80197f&name=image.png&originHeight=436&originWidth=773&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114685&status=done&style=none&taskId=u7140b17a-648b-4ada-a396-f69b4efa0db&title=&width=618.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503682149-b77d16a1-7e9c-487e-a188-835d61841472.png#averageHue=%23fcfcfb&clientId=ua09462e1-c042-4&from=paste&height=451&id=u8ad6bc4b&name=image.png&originHeight=564&originWidth=746&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74662&status=done&style=none&taskId=u5e5dde44-8998-4b7b-91f4-1e075f7614c&title=&width=596.8" alt="image.png"></p><ul><li>无借位减，等价于异或运算</li><li>多项式1001对应的是<img src="https://cdn.nlark.com/yuque/__latex/3619ace3eb24da39bda024bcf29b14ac.svg#card=math&code=x%5E3%2B1&id=Y7cwq" alt="image.png"></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668504591848-89723a4a-c613-452f-9732-b8d48931813a.png#averageHue=%23f8f7f6&clientId=ua09462e1-c042-4&from=paste&height=212&id=u43bd0ee7&name=image.png&originHeight=265&originWidth=568&originalType=binary&ratio=1&rotation=0&showTitle=false&size=44042&status=done&style=none&taskId=udcefc824-7a79-4638-a8bb-9edcb3ca42c&title=&width=454.4" alt="image.png"></p><ul><li>海明码1.0只适合1位出错的情况</li><li>奇校验码能增加1，区分出传送的00000000数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十七课 输入输出</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E4%B8%83%E8%AF%BE%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA_new/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E4%B8%83%E8%AF%BE%20%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA_new/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671092964050-b0e027e7-bc8e-4829-a530-a148b4e45cf1.png" alt="image.png"><br><a name="nE4qE"></a></p><h2 id="I-x2F-O模块"><a href="#I-x2F-O模块" class="headerlink" title="I&#x2F;O模块"></a>I&#x2F;O模块</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671093087561-d646c3ca-3b7d-48fe-88de-e325489b8ea9.png" alt="image.png"><br><a name="wW1Fq"></a></p><h3 id="外围设备的接口"><a href="#外围设备的接口" class="headerlink" title="外围设备的接口"></a>外围设备的接口</h3><p>转换器：外设的数据格式和计算机内部的数据格式可能不一致<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671093193022-7d5eedaa-0baf-4319-823d-b3a910548468.png" alt="image.png"><br><a name="PlgC4"></a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093407597-d8eb7ef7-f7f6-4f2d-a13a-7a98d555997d.png#averageHue=%23eeebea&clientId=u63414d40-b07f-4&from=paste&height=304&id=uac99616e&name=image.png&originHeight=380&originWidth=818&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119817&status=done&style=none&taskId=u5071b220-86ba-435e-ba8a-df635d6dc1b&title=&width=654.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093513588-823d2062-a477-498d-8e52-25f669c46e16.png#averageHue=%23c3c3c3&clientId=u63414d40-b07f-4&from=paste&height=438&id=u1fa47fb2&name=image.png&originHeight=548&originWidth=772&originalType=binary&ratio=1&rotation=0&showTitle=false&size=242621&status=done&style=none&taskId=u900198a8-5bec-41c1-90cf-df5812331cf&title=&width=617.6" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671093735022-348f6ecf-41aa-40a1-a1ea-e50dff7f9168.png#averageHue=%23ecebeb&clientId=ue02361c6-a47f-4&from=paste&height=321&id=u95a303ce&name=image.png&originHeight=401&originWidth=826&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122804&status=done&style=none&taskId=ue5e8f938-0901-4649-8ab8-0179888d236&title=&width=660.8" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671093853802-b9ae09b6-fe76-447a-9f29-55c44f39015b.png" alt="image.png"><br><a name="m9WZ2"></a></p><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671094127152-0da4f1d4-1aa5-41fa-b8c9-e9ed5d443490.png" alt="image.png"></p><ul><li>CPU对外设的命令是走数据线的，是具体的操作</li><li>状态和控制不是同一时间发生，只有确认了状态后，才能确认控制。状态是从右往左返回，控制是从左往右返回</li><li>数据寄存器实际上是输入寄存器和输出寄存器的合并<br><a name="e1inL"></a></li></ul><h4 id="外部接口"><a href="#外部接口" class="headerlink" title="外部接口"></a>外部接口</h4><p>事实上，并行接口，每一根线的延迟可能是不一样的，当线的长度非常长时，每一位传输时就会导致错位，数据传输出错。<br />所以，需要按照一定频率传输<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671094339336-88e79342-c69f-44a6-8172-9d16892fa542.png" alt="image.png"><br><a name="cbgly"></a></p><h4 id="串行总线"><a href="#串行总线" class="headerlink" title="串行总线"></a>串行总线</h4><ul><li>批量传输比同步传输多了“握手”，是为了实现<strong>异步</strong></li><li>同步传输：传送音视频时，需要同步。音视频对实时性的要求较高；允许一定的误码率</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671094569227-cd489685-adec-429e-bbf6-cd331cdf06b4.png" alt="image.png"><br><a name="Aqr1z"></a></p><h2 id="I-x2F-O操作技术"><a href="#I-x2F-O操作技术" class="headerlink" title="I&#x2F;O操作技术"></a>I&#x2F;O操作技术</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671095525199-68ebb65d-fad4-4811-b3a9-cda3794389b9.png" alt="image.png"><br><a name="uKPNs"></a></p><h3 id="编程式I-x2F-O"><a href="#编程式I-x2F-O" class="headerlink" title="编程式I&#x2F;O"></a>编程式I&#x2F;O</h3><p>缺点：比较低效？<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671095898490-1402e9b6-37b2-4785-88de-193d125eeca5.png" alt="image.png"><br><a name="wuNWA"></a></p><h4 id="I-x2F-O命令"><a href="#I-x2F-O命令" class="headerlink" title="I&#x2F;O命令"></a>I&#x2F;O命令</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096036418-f99e8058-f321-48f5-b18c-edc79c8530d2.png#averageHue=%23ebeaea&clientId=ue02361c6-a47f-4&from=paste&height=261&id=u70b6d580&name=image.png&originHeight=326&originWidth=797&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91935&status=done&style=none&taskId=u8579d920-2444-48ca-bae6-553adff9e19&title=&width=637.6" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671096107530-655b7a58-ef2f-4139-84c4-d69942c4922a.png" alt="image.png"></p><ul><li>CPU需要做什么 - 指令</li><li>I&#x2F;O需要做什么 - 命令<br><a name="PDNTN"></a></li></ul><h3 id="中断驱动式I-x2F-O"><a href="#中断驱动式I-x2F-O" class="headerlink" title="中断驱动式I&#x2F;O"></a>中断驱动式I&#x2F;O</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671096337526-b350ddfe-4c1b-488b-8e94-f1adff4e3e77.png" alt="image.png"><br><a name="hSAwA"></a></p><h4 id="模块理解"><a href="#模块理解" class="headerlink" title="模块理解"></a>模块理解</h4><ul><li>I&#x2F;O模块等处理器，而不是处理器等I&#x2F;O了</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671096515962-86e808e7-0488-4d59-9689-023fcbd0de84.png#averageHue=%23e9e8e7&clientId=ue02361c6-a47f-4&from=paste&height=447&id=u9ff595a8&name=image.png&originHeight=559&originWidth=864&originalType=binary&ratio=1&rotation=0&showTitle=false&size=232443&status=done&style=none&taskId=ud7c329d2-f48f-4f3b-9d75-971277913ef&title=&width=691.2" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671096596053-66c6bb00-ec53-4f0f-ac9f-2b29780358fc.png" alt="image.png"><br><a name="B9NcS"></a></p><h4 id="中断允许和中断禁止"><a href="#中断允许和中断禁止" class="headerlink" title="中断允许和中断禁止"></a>中断允许和中断禁止</h4><ol><li>中断处理之前，要保存现场</li><li>保存现场时，不能被中断。所以中断响应后，要进入中断禁止，保护现场</li><li>恢复现场时，也不能被中断</li></ol><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671096773626-57c52056-552d-4964-8ec5-594321a48c1a.png" alt="image.png"></p><p><a name="sYj5L"></a></p><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671097206942-6ab2d824-8025-4b8d-8ee9-bca3fea55158.png" alt="image.png"></p><ol><li>主程序的响应优先级和处理优先级的最低</li><li>先执行和处理完L1（L3 L4的处理优先级比L1低），回到主程序</li><li>先响应3，但是先处理完L4</li><li>恢复L3，发生了L2中断，但是L2的处理优先级低于L3，所以先处理L3</li></ol><p><strong>处理优先级决定哪些中断可以被响应，响应优先级决定哪些中断最先被响应</strong><br /><strong>行屏蔽是从处理优先级的角度出发的</strong><br><a name="QyvRS"></a></p><h4 id="设备识别"><a href="#设备识别" class="headerlink" title="设备识别"></a>设备识别</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671097342189-5f34c4b6-dd42-4d30-b78f-192778334e48.png" alt="image.png"><br><a name="OZUXo"></a></p><h3 id="直接存储器存取-DMA"><a href="#直接存储器存取-DMA" class="headerlink" title="直接存储器存取 DMA"></a>直接存储器存取 DMA</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671097553947-c02d296e-f133-4716-af15-982d51221831.png#averageHue=%23eeeeee&clientId=ue02361c6-a47f-4&from=paste&height=433&id=u3d9a0514&name=image.png&originHeight=541&originWidth=855&originalType=binary&ratio=1&rotation=0&showTitle=false&size=214453&status=done&style=none&taskId=u450d38ff-1b8c-4401-8126-7b8b280c3c2&title=&width=684" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671097702884-b866c684-3e96-4b27-8656-aa7d0f7c87ec.png" alt="image.png"></p><ul><li>DMA和CPU访问同一块内存时，可能会导致冲突<br><a name="kAlv8"></a></li></ul><h4 id="DMA内存访问：CPU停止法"><a href="#DMA内存访问：CPU停止法" class="headerlink" title="DMA内存访问：CPU停止法"></a>DMA内存访问：CPU停止法</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671097979359-580da163-ee98-444d-b288-e9062336671c.png" alt="image.png"><br><a name="x6TRy"></a></p><h4 id="DMA内存访问：周期窃取"><a href="#DMA内存访问：周期窃取" class="headerlink" title="DMA内存访问：周期窃取"></a>DMA内存访问：周期窃取</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671098030143-2c2dde0e-8e15-4b2b-9d16-02ff8b52ed59.png" alt="image.png"><br />断断续续：存储周期处于空闲状态。一次IO请求可能会有多次DMA访存<br><a name="TeNwY"></a></p><h4 id="DMA内存访问：交替分时访问"><a href="#DMA内存访问：交替分时访问" class="headerlink" title="DMA内存访问：交替分时访问"></a>DMA内存访问：交替分时访问</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671098195384-c84307a0-a2a4-4358-a9d0-1b52dc70bea9.png" alt="image.png"><br><a name="rxceT"></a></p><h4 id="DMA配置机制：单总线分离DMA"><a href="#DMA配置机制：单总线分离DMA" class="headerlink" title="DMA配置机制：单总线分离DMA"></a>DMA配置机制：单总线分离DMA</h4><p><a name="fUNAy"></a></p><h4 id="单总线集合的DMA"><a href="#单总线集合的DMA" class="headerlink" title="单总线集合的DMA"></a>单总线集合的DMA</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671098378607-c95fdc3e-a6a6-4ddc-b923-c3126a62e70f.png#averageHue=%23f5f3f3&clientId=ue02361c6-a47f-4&from=paste&height=438&id=u04697398&name=image.png&originHeight=548&originWidth=803&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112184&status=done&style=none&taskId=u4df8256d-0aa6-44e6-b346-30c95947b4e&title=&width=642.4" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671098413471-c4398552-0841-43d5-8597-01aaa3e85394.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671529051743-1938edaa-753d-4131-921a-f3171431780a.png" alt="image.png"><br />CPU还在操控，但是不等待<br><a name="ELnew"></a></p><h2 id="I-x2F-O模块的演变"><a href="#I-x2F-O模块的演变" class="headerlink" title="I&#x2F;O模块的演变"></a>I&#x2F;O模块的演变</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671529094550-d4297325-a0ec-4f2d-80d1-9d0b8f5f455f.png#averageHue=%23edebeb&clientId=ua5ab8f6e-7a34-4&from=paste&height=410&id=uc6912ada&name=image.png&originHeight=512&originWidth=873&originalType=binary&ratio=1&rotation=0&showTitle=false&size=164526&status=done&style=none&taskId=ud227a35c-5fb1-428f-be30-471e4080b1d&title=&width=698.4" alt="image.png"><br />I&#x2F;O处理器不仅有处理器，同时也有了局部存储器<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671529173900-2335dbc1-7bb5-484a-9cba-f616a1639309.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十六课 控制器</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AF%BE%20%E6%8E%A7%E5%88%B6%E5%99%A8_new/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AF%BE%20%E6%8E%A7%E5%88%B6%E5%99%A8_new/</url>
      
        <content type="html"><![CDATA[<p><a name="BRwKC"></a></p><h2 id="寄存器分类"><a href="#寄存器分类" class="headerlink" title="寄存器分类"></a>寄存器分类</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670919267410-b94ec08c-05ac-449c-919f-031d7d8674cf.png" alt="image.png"></p><ul><li>用户：特指<strong>编程人员</strong></li><li>可见：通过编程语言访问</li><li>状态寄存器：没有必要让编程人员访问，也不应该可见<ul><li>会导致不安全的情况</li><li>程序出现漏洞的风险也会增高</li><li>指令集的复杂度也会增加，效率降低<br><a name="gfdqI"></a></li></ul></li></ul><h3 id="用户可见寄存器"><a href="#用户可见寄存器" class="headerlink" title="用户可见寄存器"></a>用户可见寄存器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670919504581-833c4d81-e3f5-4a76-ae7d-0167b57216f6.png" alt="image.png"><br />条件码寄存器不是必须的。缺点：硬件复杂性增加<br><a name="iHNFa"></a></p><h4 id="设计出发点"><a href="#设计出发点" class="headerlink" title="设计出发点"></a>设计出发点</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670919636491-3d32eb25-46dc-40f3-8577-7f9cb58cd6a8.png" alt="image.png"><br><a name="G79C6"></a></p><h4 id="保存和恢复"><a href="#保存和恢复" class="headerlink" title="保存和恢复"></a>保存和恢复</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670919811007-34076bad-ede8-40d3-ac75-c8b6238983c1.png" alt="image.png"><br><a name="A2wGH"></a></p><h3 id="控制和状态寄存器"><a href="#控制和状态寄存器" class="headerlink" title="控制和状态寄存器"></a>控制和状态寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919880475-246bf2a4-189f-44f4-8f70-63e43e5f22fd.png#averageHue=%23e4e4e4&clientId=u146f9401-8b59-4&from=paste&height=292&id=u63743eb4&name=image.png&originHeight=365&originWidth=617&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162077&status=done&style=shadow&taskId=u80b95417-fcf2-4f41-a924-05ded3cae80&title=&width=493.6" alt="image.png"><br /><code>PC</code>是可见的<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670919980960-f01b11a6-0a3a-4a0e-821e-fb049ecc856c.png#averageHue=%23e6e6e6&clientId=u146f9401-8b59-4&from=paste&height=283&id=u43d68168&name=image.png&originHeight=354&originWidth=596&originalType=binary&ratio=1&rotation=0&showTitle=false&size=143201&status=done&style=shadow&taskId=u6f9dc9d5-10df-48ea-bba7-23b55732458&title=&width=476.8" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670920013758-9acefedd-9918-49fe-a397-cf2afa4620ab.png" alt="image.png"><br><a name="yDFme"></a></p><h4 id="设计出发点-1"><a href="#设计出发点-1" class="headerlink" title="设计出发点"></a>设计出发点</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670920061137-5ee03a91-a0d4-4ad2-a8c3-6b498f92b717.png" alt="image.png"><br><a name="JFQzs"></a></p><h2 id="8086"><a href="#8086" class="headerlink" title="8086"></a>8086</h2><p><a name="jbGbq"></a></p><h3 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670920320585-fce0f067-ad8e-4215-883c-0c429b8ddc6b.png" alt="image.png"><br><a name="KW0ws"></a></p><h3 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670920401702-9d3ce9cb-112c-43a2-b978-231abda3f33c.png" alt="image.png"><br><a name="lgfCS"></a></p><h3 id="标志寄存器"><a href="#标志寄存器" class="headerlink" title="标志寄存器"></a>标志寄存器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670920577701-e5ef5114-9804-4636-a5d8-bd4401951de3.png" alt="image.png"><br><a name="nuD1B"></a></p><h3 id="指令指针寄存器"><a href="#指令指针寄存器" class="headerlink" title="指令指针寄存器"></a>指令指针寄存器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670920615142-39d5a8ec-56dc-453c-81c5-902d046e14e1.png#averageHue=%23f1f1f1&clientId=u146f9401-8b59-4&from=paste&height=266&id=ubd1aa287&name=image.png&originHeight=333&originWidth=614&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97491&status=done&style=shadow&taskId=u321489ac-1e3c-41ac-9144-b39fa8ba581&title=&width=491.2" alt="image.png"><br />为什么是<img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/64636e8771ef215128139253c19e840a.svg"><br><a name="nVEMI"></a></p><h2 id="微操作"><a href="#微操作" class="headerlink" title="微操作"></a>微操作</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670920926888-8a8daa14-86b0-4e14-a571-30406aa00211.png" alt="image.png"><br><a name="gDz4A"></a></p><h3 id="分组原则"><a href="#分组原则" class="headerlink" title="分组原则"></a>分组原则</h3><p>通过放在前后的时间周期内，让时间的流动顺序恰当<br />对同一个寄存器进行读写，不能放在同一个时间周期内<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670921380192-1f213a4c-3bd9-4a7e-a35c-c0ef2679ec12.png" alt="image.png"><br><a name="HYPOh"></a></p><h3 id="取指周期"><a href="#取指周期" class="headerlink" title="取指周期"></a>取指周期</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670921071143-60ece1e9-30f3-4388-8cc0-ff65658979a1.png" alt="image.png"><br />t1：数据通过MAR传给地址总线<br />t2：对应两个微操作</p><ul><li>取出指令放到数据总线上</li><li>PC+”1” <strong>要当心同步、异步 — 发送在同一个时间单位内</strong></li></ul><p>每一个<code>t</code>表示一个时间单位，表示微操作发送在哪一个时间单位内。<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676278523396-e3840dbe-3f21-4676-abab-1a1476fb7136.png" alt="image.png"><br />调整了<code>pc + 1</code>的位置<br><a name="mhhov"></a></p><h3 id="间址周期"><a href="#间址周期" class="headerlink" title="间址周期"></a>间址周期</h3><p>将间接地址转换成有效地址<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676278788647-3d63125c-b97e-4e52-af77-2946c0253697.png" alt="image.png"> </p><ol><li>IR中存了取到的指令，将指令中的地址部分放到MAR中</li><li>将地址对应的内容从存储器中放到MBR中</li><li>替换IR的地址部分<br><a name="TZTmR"></a></li></ol><h3 id="执行周期"><a href="#执行周期" class="headerlink" title="执行周期"></a>执行周期</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670921628782-56c3af73-0ac2-4068-9815-af825b50c551.png" alt="image.png"></p><ol><li>送地址后才能取到内容，所以t1和t2不能合并</li><li><code>t2</code>是写<code>MBR</code>，<code>t3</code>是读<code>MBR</code>，所以不能合并</li></ol><p>转移并保存：保存PC地址，并跳转到一个新的地址</p><ol><li>将IR中的地址送到MAR中，告诉MAR，PC要存到哪里，该地址是PC要保存到的地址。把PC的内容送到MBR中。这俩个步骤互相独立，可以存放在同一个时间周期内。</li><li>把MBR的内容写到主存中，把新的地址存到PC中。只有PC保存了，才能更新PC；只有写入了MBR，才能继续读MBR</li><li>PC+1<br><a name="fGC5U"></a></li></ol><h3 id="中断周期？"><a href="#中断周期？" class="headerlink" title="中断周期？"></a>中断周期？</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676280174445-3d2b645b-a50c-452e-8184-9f1f59fe1696.png" alt="image.png"><br />只需要两个时间单位<br><a name="KfHQA"></a></p><h2 id="指令周期代码-ICC"><a href="#指令周期代码-ICC" class="headerlink" title="指令周期代码 ICC"></a>指令周期代码 ICC</h2><p><strong>取指、间址、中断周期各有一个微操作序列</strong>，执行周期则对于<strong>每个操作码有一个微操作序列</strong><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670923075438-d6d8e465-8686-4a40-b27c-8526d10f6896.png" alt="image.png"><br><a name="uOKF1"></a></p><h3 id="取指周期-1"><a href="#取指周期-1" class="headerlink" title="取指周期"></a>取指周期</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676280691528-bbc07979-212b-4fec-99ce-282976e7cc33.png" alt="image.png"><br><a name="tMwuv"></a></p><h3 id="间址周期-1"><a href="#间址周期-1" class="headerlink" title="间址周期"></a>间址周期</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676280775169-d67730ae-883a-40a8-bdd4-09b8a62d4d85.png" alt="image.png"><br><a name="vGdBp"></a></p><h3 id="执行周期-1"><a href="#执行周期-1" class="headerlink" title="执行周期"></a>执行周期</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676280817628-3d293da8-8921-4ba2-9e5e-e21a587769f4.png" alt="image.png"><br><a name="JXVaS"></a></p><h3 id="中断周期"><a href="#中断周期" class="headerlink" title="中断周期"></a>中断周期</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676280899073-1d33d56f-2433-47f7-9f6c-d696c17dd9f1.png" alt="image.png"><br><a name="mlWDz"></a></p><h2 id="CPU内部总线"><a href="#CPU内部总线" class="headerlink" title="CPU内部总线"></a>CPU内部总线</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676281035906-53dbaff2-32e7-4ae7-adc8-7e12974ea3de.png" alt="image.png"><br><a name="LrJFt"></a></p><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><p><a name="j278F"></a></p><h3 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676281278060-8d173a61-1a73-453e-821c-54461a8baa9c.png" alt="image.png"><br><a name="mMIIK"></a></p><h3 id="控制器的输入"><a href="#控制器的输入" class="headerlink" title="控制器的输入"></a>控制器的输入</h3><p>操作码影响执行周期<br />寻址方式影响间址周期<br /><strong>控制器也会收到控制信号：中断请求</strong><br /> <img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670924080197-92f1345a-44b0-4fd6-b352-a2ad677591fb.png" alt="image.png"><br><a name="VGiFM"></a></p><h3 id="控制器的输出"><a href="#控制器的输出" class="headerlink" title="控制器的输出"></a>控制器的输出</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670924058358-da3ce790-1839-46be-937f-a330ae23528b.png" alt="image.png"><br><a name="OHh5Y"></a></p><h3 id="控制信号"><a href="#控制信号" class="headerlink" title="控制信号"></a>控制信号</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924483599-b92aeb4a-7e93-4064-91ab-8445e1ea85be.png#averageHue=%23f3f2f1&clientId=u146f9401-8b59-4&from=paste&height=637&id=sd40r&name=image.png&originHeight=796&originWidth=1149&originalType=binary&ratio=1&rotation=0&showTitle=false&size=238181&status=done&style=shadow&taskId=ub02a93a6-6308-453e-8ed6-abb2801583b&title=&width=919.2" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676281867546-98feb1b3-1158-412b-bb4a-91f8eb712476.png" alt="image.png">（图有点小问题）<br><a name="mjmzm"></a></p><h3 id="控制器的最小特性"><a href="#控制器的最小特性" class="headerlink" title="控制器的最小特性"></a>控制器的最小特性</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670924690734-76f534ec-3118-4d4e-8e78-eabeba97f725.png" alt="image.png"><br />实现上尽可能地简洁<br><a name="K8fzg"></a></p><h2 id="控制器实现"><a href="#控制器实现" class="headerlink" title="控制器实现"></a>控制器实现</h2><p><a name="e3A87"></a></p><h4 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670924736797-818d155f-84a8-425a-8e59-d6f108c9de65.png" alt="image.png"></h4><p><a name="rRAKd"></a></p><h3 id="硬布线实现"><a href="#硬布线实现" class="headerlink" title="硬布线实现"></a>硬布线实现</h3><p><a name="L0ANx"></a></p><h4 id="控制器输入"><a href="#控制器输入" class="headerlink" title="控制器输入"></a>控制器输入</h4><p>时钟、标志、控制总线的输入、指令寄存器</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1670924821550-85ba9bbb-1562-4713-80e2-963a120852ae.png#averageHue=%23e4e3e2&clientId=u146f9401-8b59-4&from=paste&height=381&id=u7d0894d5&name=image.png&originHeight=476&originWidth=638&originalType=binary&ratio=1&rotation=0&showTitle=false&size=175391&status=done&style=shadow&taskId=u64965435-e688-4537-9c68-14d42d8190c&title=&width=510.4" alt="image.png"><br />操作码通过译码器转化为微操作序列<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670924860619-1d10e097-e753-49c0-b8bb-b285856ec712.png" alt="image.png"><br><a name="IwrJu"></a></p><h4 id="控制器逻辑"><a href="#控制器逻辑" class="headerlink" title="控制器逻辑"></a>控制器逻辑</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670925024608-139dd57a-92b9-4aae-8f1c-46031c93a366.png" alt="image.png"><br />缺点：太过复杂<br><a name="NhjWi"></a></p><h3 id="微程序实现？"><a href="#微程序实现？" class="headerlink" title="微程序实现？"></a>微程序实现？</h3><p>和硬布线实现有什么不同<br><a name="tf8By"></a></p><h4 id="基本概念和思路"><a href="#基本概念和思路" class="headerlink" title="基本概念和思路"></a>基本概念和思路</h4><ul><li>微程序(固件)介于硬件与软件之间</li><li>设计固件比设计硬件容易，但写固件程序比软件程序困难·微指令序列</li><li>微指令∶<strong>每行</strong>描述一个时间内出现的<strong>一组微操作</strong>。</li></ul><p>基本思路</p><ul><li>对于每个微操作，控制器的任务是产生<strong>一组控制信号</strong>，即控制器发出的<strong>每根控制线或开或关</strong>（每根控制线由一个二进制数字表示)·构造一个控制字，每位代表一根控制线，这样每个微操作能用控制字中的不同的0和1的样式来表示</li><li>将这些控制字串在一起，可以表示控制器需要完成的微操作序列</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1670925452420-15ec817d-0ecb-4f92-8b9e-3747a0d218b5.png" alt="image.png"><br><a name="yIwzn"></a></p><h3 id="微程序执行？"><a href="#微程序执行？" class="headerlink" title="微程序执行？"></a>微程序执行？</h3><p>取指、间接、中断的微操作序列是一样的，都可以用相同的微指令** ？ 为什么是一样的**<br />相同的操作码可以用相同的微指令序列<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676300014626-a8f2f12a-c1d1-44a6-bded-c06f4a19dcde.png" alt="image.png"><br><a name="QQce4"></a></p><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671091969058-f30ca772-1c3f-45ce-9b46-13fdd746c7ef.png" alt="image.png"><br><a name="l6F1h"></a></p><h4 id="定序"><a href="#定序" class="headerlink" title="定序"></a>定序</h4><p>下一个指令的地址在哪？<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671092076221-584ed9b1-f56e-48c2-964c-08168387ac63.png" alt="image.png"><br />双地址：指令太长，成本上升<br />地址选择有不同的方式。<br><a name="G6wv4"></a></p><h4 id="构成"><a href="#构成" class="headerlink" title="构成"></a>构成</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1676300598587-c67eb512-c1e2-4278-892e-7f0b9e22843b.png" alt="image.png"><br><a name="PSznR"></a></p><h4 id="工作流程？？"><a href="#工作流程？？" class="headerlink" title="工作流程？？"></a>工作流程？？</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1671092388440-552fbd64-9c06-49d9-946b-e5ec3eb1ac1a.png#averageHue=%23ece9e7&clientId=udfb510e8-790d-4&from=paste&height=390&id=u15aabe42&name=image.png&originHeight=488&originWidth=880&originalType=binary&ratio=1&rotation=0&showTitle=false&size=208748&status=done&style=shadow&taskId=uc20cf1b8-b0ae-451a-a02a-88e7a1ef88a&title=&width=704" alt="image.png"><br />下面这张图什么意思？<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671092511829-b0e54373-734f-494d-ad8d-d7a9a8445a6d.png" alt="image.png"></p><ul><li>操作码在指令寄存器中，需要进行译码器译码<br><a name="GnlTH"></a></li></ul><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671092548608-5f84db8f-8a05-4361-9fc0-d82d24687646.png" alt="image.png"><br><a name="PsYUs"></a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1671092625274-a3d92e0f-6821-4343-bcf7-cd8c895f7189.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十二课 虚拟存储器</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AF%BE%20%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8_new/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AF%BE%20%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8_new/</url>
      
        <content type="html"><![CDATA[<p><a name="nFqlT"></a></p><h3 id="分区方式"><a href="#分区方式" class="headerlink" title="分区方式"></a>分区方式</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277706527-998432e0-a2fc-4508-a459-0462d95d9259.png#averageHue=%23f7f5f4&clientId=udc6bffc6-dde9-4&from=paste&height=365&id=u69155d3e&name=image.png&originHeight=456&originWidth=787&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124023&status=done&style=none&taskId=u976c7ec9-20e4-4fe5-9c40-bf4da5073a7&title=&width=629.6" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669277715931-9cb5eb6d-3720-4614-8410-6308a5873c48.png" alt="image.png"><br><a name="gg4z0"></a></p><h3 id="分页方式"><a href="#分页方式" class="headerlink" title="分页方式"></a>分页方式</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669277748398-0cc4a6e2-fdca-4261-aa6d-4c371ba1833b.png" alt="image.png"><br><a name="L6lhU"></a></p><h3 id="虚拟存储器"><a href="#虚拟存储器" class="headerlink" title="虚拟存储器"></a>虚拟存储器</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669277942468-ec1e84a3-ebaa-404a-82f7-12d0f536d4cf.png#averageHue=%23f5f3f1&clientId=udc6bffc6-dde9-4&from=paste&height=380&id=u82ee28ed&name=image.png&originHeight=475&originWidth=730&originalType=binary&ratio=1&rotation=0&showTitle=false&size=151843&status=done&style=none&taskId=u992ae811-ef6c-488d-84f1-2c50db2092e&title=&width=584" alt="image.png"><br />只需要保证同时<strong>需要载入的页</strong>的大小是低于主存的大小就行。对于同一个任务，其实是每个时刻只会执行部分代码段，所以只需要载入部分页进入内存就行<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669277966166-0c715239-9ac1-42b2-8d05-30ecde4fc470.png" alt="image.png"></p><ol><li>所有的任务的所有的页放入硬盘的特定区域中，也就是<strong>虚拟内存</strong></li><li>每个任务正在使用的页载入主存当中</li><li>没命中时主存从硬盘中加载；有修改时，硬盘也会从主存加载</li><li>页表：对每个任务生成一个页表，记录页的状态</li></ol><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669277979600-731a069b-e5e4-4b80-8d9a-99071803ad2a.png" alt="image.png"></p><ul><li>全相联映射：命中率更高</li><li>写回：避免像写直达一样，多次对硬盘进行操作<br><a name="krw6M"></a></li></ul><h3 id="分页式虚拟存储器"><a href="#分页式虚拟存储器" class="headerlink" title="分页式虚拟存储器"></a>分页式虚拟存储器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669278432223-3b432e84-bedf-423a-b55a-9efc2a0488e8.png" alt="image.png"></p><ul><li>编写程序时，默认自己有一个很大的、连续的空间，所以记录在页表中的地址都是虚拟地址。</li><li>程序真正被启动时，会产生很多页面，载入硬盘中</li><li>把要用的页面真正载入主存中，由页表来记录</li><li>页表也存在主存中<br><a name="OrHIE"></a></li></ul><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669278909804-03e37ac1-149e-48c0-8717-bfab35e6db6a.png" alt="image.png"><br><a name="i21yx"></a></p><h4 id="页表"><a href="#页表" class="headerlink" title="页表"></a>页表</h4><p><strong>物理页和虚拟页的大小是一样的。所以页内偏移量是一致的</strong><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669279021802-26aa3ba1-42dc-4880-b68b-4894c1759968.png" alt="image.png"></p><ul><li><code>null</code>磁盘没有存储VP0 VP4，对应的位置存储了其他信息<img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669279176054-4dd0b82e-33cc-4447-9762-53cbe5f148b9.png" alt="A959A7B612035ABFFB13EF2EC4BE03A8.png"></li><li><code>PP0</code>物理页号：说明在主存中有载入</li><li>指针：说明在磁盘存储器中有，但是没有载入主存中。</li><li><strong>虚拟地址比物理地址更长</strong>，虚拟空间比物理空间更大，虚拟页号比物理页号的长度更长；<strong>存放位置时的指针长度比物理地址小</strong></li><li>不需要额外用空间记录虚拟页号，因为是按顺序排放的</li><li>**存放位置的长度是按照最长的物理地址存放的 **<br><a name="bgiXr"></a></li></ul><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669279472951-53ed2a0f-fd94-4324-a79a-5247a2c03333.png" alt="image.png"><br><a name="JQN19"></a></p><h4 id="快表"><a href="#快表" class="headerlink" title="快表"></a>快表</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669279512490-aad58c79-5266-41cd-8c4a-7076d662ddb1.png" alt="image.png"><br><a name="YxFIf"></a></p><h4 id="CPU访存过程"><a href="#CPU访存过程" class="headerlink" title="CPU访存过程"></a>CPU访存过程</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669280124191-614a3c12-4a15-49db-bfdd-fe3f90a7e44f.png#averageHue=%23f9f7f6&clientId=ub64367f1-dc9e-4&from=paste&height=460&id=u89b766c1&name=image.png&originHeight=575&originWidth=866&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57515&status=done&style=none&taskId=u4c02556e-fc3d-4271-bf91-61b08842ece&title=&width=692.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1669280143486-c3062d63-658c-4610-95dc-55cc0bf9d235.png#averageHue=%23f6f4f4&clientId=ub64367f1-dc9e-4&from=paste&height=402&id=u1a3774b1&name=image.png&originHeight=502&originWidth=841&originalType=binary&ratio=1&rotation=0&showTitle=false&size=182928&status=done&style=none&taskId=u5a6c3087-7455-4d39-a32a-2bc915cc01f&title=&width=672.8" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669280570598-b997891c-1fd3-4266-a226-636230946178.png" alt="image.png"></p><ol start="2"><li>访问的是主存中的数据，因为在Cache中miss了</li><li>访问的是主存中的页表，数据仍然在Cache中</li><li>出现缺页情况，访问硬盘和访问主存速度差距非常大</li><li>TLB中有，页表中也一定有<br><a name="oXU29"></a></li></ol><h3 id="分段式虚拟存储器"><a href="#分段式虚拟存储器" class="headerlink" title="分段式虚拟存储器"></a>分段式虚拟存储器</h3><p>物理地址&#x3D; 段号左移4位+段内偏移量<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669280849606-3494bb7d-aff3-4ab5-a9b1-eaeac95777fd.png" alt="image.png"><br />分页式：对权限管理很混乱，每一个页都要单独记录权限<br />分段式：</p><ul><li>会有重复地址</li><li>长度不固定</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669281353237-f9a73a1a-49b5-4214-b7e9-149015592132.png" alt="image.png"><br><a name="huy5f"></a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1669281422445-f6f60a5a-1b1e-4cbc-8196-882371e9d52c.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第十课 数据校验码</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%8D%81%E8%AF%BE%20%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E7%A0%81_new/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%8D%81%E8%AF%BE%20%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%E7%A0%81_new/</url>
      
        <content type="html"><![CDATA[<p><a name="PzQE5"></a></p><h3 id="差错"><a href="#差错" class="headerlink" title="差错"></a>差错</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668072243204-c84422fd-18cd-4ca5-97c2-7366d05627fa.png#averageHue=%23f5f2f1&clientId=u2314a222-6597-4&from=paste&height=558&id=u1da99de2&name=image.png&originHeight=698&originWidth=1081&originalType=binary&ratio=1&rotation=0&showTitle=false&size=243839&status=done&style=none&taskId=u9a869d40-ae60-4326-81bd-e15b9a6afa7&title=&width=864.8" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668072867915-b6daef4a-6422-4b57-999c-1f107467e5b4.png" alt="image.png"><br><a name="a31Gg"></a></p><h3 id="纠错"><a href="#纠错" class="headerlink" title="纠错"></a>纠错</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668073261817-d8c44924-6189-48d8-b516-2ce0c440c03f.png#averageHue=%23f7f5f4&clientId=u2314a222-6597-4&from=paste&height=377&id=u4a3bc987&name=image.png&originHeight=471&originWidth=979&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126172&status=done&style=none&taskId=ua82c02da-aa09-4d61-bbb1-5a7678e0fa9&title=&width=783.2" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668073252925-c5f59f43-da29-4d58-83bd-2d6c4c4dcfe0.png" alt="image.png"></p><p><a name="GeMKt"></a></p><h3 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668073398885-759187f4-99e9-443d-aa0b-7e955548d242.png" alt="image.png"><br />判断奇数&#x2F;偶数：异或<br />奇偶校验：相差一个异或<code>1</code><br />多一个异或：相当于多一个非门，多了一级门延迟</p><ul><li>奇校验的作用：防止全<code>0</code>数据的传输（同步传输中），从而区分传输有无结束</li><li>偶校验：门延迟更低</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668073730554-ce6cab88-339c-4fca-8b08-af11c8e1114c.png" alt="image.png"><br />长度短：发生偶数位的差错概率更低<br><a name="wDvPo"></a></p><h2 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503322446-e867af91-1154-4612-a236-7b82d99bf2d0.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=344&id=u5c597a55&name=image.png&originHeight=430&originWidth=755&originalType=binary&ratio=1&rotation=0&showTitle=false&size=129448&status=done&style=none&taskId=u7fd228f2-9a43-4e34-b3d5-0c699e9b365&title=&width=604" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503335114-07b6101b-e172-475a-8851-b1dbbb92e96e.png#averageHue=%23f8f7f6&clientId=ua09462e1-c042-4&from=paste&height=418&id=u592418c2&name=image.png&originHeight=523&originWidth=788&originalType=binary&ratio=1&rotation=0&showTitle=false&size=124311&status=done&style=none&taskId=uf50173c5-293b-40ab-b783-855a5c31528&title=&width=630.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503343047-fe6c229e-ddd4-4d5e-ba7a-33176ab4640d.png#averageHue=%23f6f4f3&clientId=ua09462e1-c042-4&from=paste&height=237&id=u2e09ce12&name=image.png&originHeight=296&originWidth=760&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91441&status=done&style=none&taskId=u36f395cd-c247-41fa-81d2-e7156f93233&title=&width=608" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668501979453-d9c73b31-adbb-4d05-b53b-f24cadf82cf0.png#averageHue=%23f8f6f5&clientId=ua09462e1-c042-4&from=paste&height=419&id=u80808c0c&name=image.png&originHeight=524&originWidth=820&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120474&status=done&style=none&taskId=u611a78bb-437c-4ca4-afbb-370782e3165&title=&width=656" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503434104-33246edd-f80b-4c48-82d4-4fa881c09981.png#averageHue=%23f0efee&clientId=ua09462e1-c042-4&from=paste&height=205&id=u28bb05b2&name=image.png&originHeight=256&originWidth=819&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57293&status=done&style=none&taskId=ub9d3c111-614c-4ae6-b5b1-afdbd4bdc5d&title=&width=655.2" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503457828-645948bf-3dd6-428a-a76e-604d13dfd0f4.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=262&id=u22dc3bda&name=image.png&originHeight=328&originWidth=706&originalType=binary&ratio=1&rotation=0&showTitle=false&size=92020&status=done&style=none&taskId=u2545d4d7-936c-426a-9982-c618195e91d&title=&width=564.8" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668503471385-27e56ca9-9909-4e67-9b7e-0c01897f0825.png" alt="image.png"><br><a name="eVelZ"></a></p><h3 id="码距和纠错理论"><a href="#码距和纠错理论" class="headerlink" title="码距和纠错理论"></a>码距和纠错理论</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668501191956-9a846bfd-f5f2-4104-ae87-3801e306d165.png#averageHue=%23f9f7f6&clientId=ua09462e1-c042-4&from=paste&height=342&id=u5c8b99a1&name=image.png&originHeight=428&originWidth=727&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114523&status=done&style=none&taskId=uc397c26e-f912-49e3-aaf8-0bb315e4763&title=&width=581.6" alt="image.png"><br />奇偶校验的码距是2：如果D中有一位发生了变化则C中也有一位发生变化，如果D中有两位发生了变化，则C中没有变化<br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668502235956-3f49ff77-6d27-4bb3-9d95-e180e811e10b.png" alt="image.png"><br />海明码2.0：同时可以识别出2位出错的情况，是双检错，但依然是<strong>单纠错</strong><br />D1 D2出错和C5 D3出错的情况相同，所以只能具备单纠错的能力<br><a name="oOj3b"></a></p><h3 id="循环冗余校验"><a href="#循环冗余校验" class="headerlink" title="循环冗余校验"></a>循环冗余校验</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503492488-add43037-7eeb-4440-acf0-667766475aef.png#averageHue=%23f9f8f7&clientId=ua09462e1-c042-4&from=paste&height=222&id=uf498f079&name=image.png&originHeight=277&originWidth=643&originalType=binary&ratio=1&rotation=0&showTitle=false&size=72369&status=done&style=none&taskId=ud8b4bbf8-dfbb-4fe4-9d3d-d9d70fcec6f&title=&width=514.4" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/32543531/1668503669170-2bbd8525-5af0-4c61-a7b7-a906eb1b130c.png#averageHue=%23fcfbfa&clientId=ua09462e1-c042-4&from=paste&height=349&id=ufb80197f&name=image.png&originHeight=436&originWidth=773&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114685&status=done&style=none&taskId=u7140b17a-648b-4ada-a396-f69b4efa0db&title=&width=618.4" alt="image.png"><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668503682149-b77d16a1-7e9c-487e-a188-835d61841472.png" alt="image.png"></p><ul><li>无借位减，等价于异或运算</li><li>多项式1001对应的是<img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/3619ace3eb24da39bda024bcf29b14ac.svg" alt="image.png"></li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1668504591848-89723a4a-c613-452f-9732-b8d48931813a.png" alt="image.png"></p><ul><li>海明码1.0只适合1位出错的情况</li><li>奇校验码能增加1，区分出传送的00000000数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第四课 整数运算</title>
      <link href="/2023/02/27/%E7%AC%AC%E5%9B%9B%E8%AF%BE%20%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97_new/"/>
      <url>/2023/02/27/%E7%AC%AC%E5%9B%9B%E8%AF%BE%20%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97_new/</url>
      
        <content type="html"><![CDATA[<p><a name="nhw6e"></a></p><h2 id="加法器"><a href="#加法器" class="headerlink" title="加法器"></a>加法器</h2><p><a name="Gpexo"></a></p><h3 id="全加器"><a href="#全加器" class="headerlink" title="全加器"></a>全加器</h3><p>前提假设：<br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664467718264-0c488d43-4145-4ebd-8945-b62cc8662389.png" alt="image.png"><br><a name="pgspn"></a></p><h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><p>公式：<br><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/6b6d76946fe54be4b3057c06487abf03.svg" alt="image.png"><br><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664467409312-d330df3d-06a5-410f-a57a-9d76e0ccc733.png" alt="image.png"><br><a name="MQufc"></a></p><h4 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h4><p>公式</p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/e43dff128f12eb9e1f959290b6c873db.svg" alt="image.png"><br><br />其中，并非 <br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/fa0e3b48e6cf2289e98b7449bf402186.svg"> 的返回值为真，而是因为和前面的X与Y相配合，刚好形成了对应的结果<br><br /><br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664467661390-9e89045b-7a4c-4d0f-acf5-806f90e44c62.png" alt="image.png"><br />那么这种改善的好处是，减少了与门的使用</p><p><a name="KBcWd"></a></p><h3 id="串行进位（行波进位）加法器"><a href="#串行进位（行波进位）加法器" class="headerlink" title="串行进位（行波进位）加法器"></a>串行进位（行波进位）加法器</h3><ul><li>1位加法：<br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/f4941249f1d11a1885789b6eae8696d4.svg" alt="image.png"></li><li>第i位加法：</li></ul><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/43267647225ac22f9d5b38f5d111a94c.svg" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664468091575-81876688-7542-418a-8b6d-4430faaec967.png" alt="image.png"></p><p><br />Cn 是2n的延迟，原因是每个延迟为2：与操作+或操作<br />Fn是2n+1的延迟，原因是，</p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/ffa01558fab0e00cfdd749ec2d60f2f4.svg"><br><br />其中，</p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/81083cba0c4fb4c4d3ec9ac308736a49.svg"> 额外+3 是因为F产生的延迟。需要注意的是</p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/7e7defc5e24c1284250e6c1ee1153487.svg">因此，不会产生额外的延迟<br><a name="zSccX"></a></p><h3 id="全先行进位加法器"><a href="#全先行进位加法器" class="headerlink" title="全先行进位加法器"></a>全先行进位加法器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664470369829-6e248a4c-87cc-49c6-ad9f-6272f5170136.png" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664470145406-a7817201-d9aa-4e33-b189-295b391eecce.png" alt="image.png" title="n个或门改为1个或门"></p><ul><li>1ty：代表的是生成信号和传播信号的生成</li><li>2ty：代表的是第i个进位信号的生成：1延迟的与运算+1延迟的或运算【与运算和或运算可以接受任意个数的参数】</li><li>3ty：代表的是第i个本位的生成：3延迟的或运算【和之前的1+2并行消耗，先计算X和Y的异或运算，经过3延迟后，C也得到了】+3延迟的或运算<br><a name="DqoPF"></a></li></ul><h3 id="部分先行进位加法器"><a href="#部分先行进位加法器" class="headerlink" title="部分先行进位加法器"></a>部分先行进位加法器</h3><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664470171477-4aece9f3-73d1-401d-b7b0-13ef941e40d4.png" alt="image.png"></p><ul><li>3ty&#x3D;2ty+1ty</li></ul><p>在最开始时，</p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/f067520d99b0a22dee9abd4241528bfb.svg" alt="image.png">此时的计算需要最初的1ty，之后，再根据计算公式可知需要2ty的延迟来生成<br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/3251ead7580cfd081ce354aaaf39201e.svg"> 因此总延迟为3</p><ul><li>2ty 2ty 分别代表<br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/41afffd775e4ecdc5fca82f842aa1c9b.svg" alt="image.png">和<br><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/738bcc5adfc17944d2fae6b7fa88ea40.svg">的生成</li><li>5ty &#x3D; 3ty + 2ty 其中3ty代表的则是F的生成，2ty代表最后一次进位的生成<br><a name="ZiA71"></a></li></ul><h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><p><a name="yDkpT"></a></p><h3 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h3><p>![image.png] (<a href="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470207731-27c3d92c-f614-4a9b-8d4a-2b0b24080dbf">https://cdn.nlark.com/yuque/0/2022/png/32543531/1664470207731-27c3d92c-f614-4a9b-8d4a-2b0b24080dbf</a>.<br>png#averageHue&#x3D;%23fdfcfc&amp;clientId&#x3D;ud7f3940e-7f69-4&amp;from&#x3D;paste&amp;height&#x3D;366&amp;id&#x3D;ub1add33b&amp;name&#x3D;image.png&amp;originHeight&#x3D;457&amp;originWidth&#x3D;738&amp;originalType&#x3D;binary&amp;ratio&#x3D;1&amp;rotation&#x3D;0&amp;showTitle&#x3D;false&amp;size&#x3D;53795&amp;status&#x3D;done&amp;style&#x3D;shadow&amp;taskId&#x3D;uca538bd1-8563-40dd-80ad-e6329579f19&amp;title&#x3D;&amp;width&#x3D;590.4)</p><p><br />标注：此处的<br><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1f093cca47b2c22bde288e8322d68fa5.svg">单单第n位<br><a name="f43T5"></a></p><h3 id="减法"><a href="#减法" class="headerlink" title="减法"></a>减法</h3><p>![image.png] (<a href="https://cdn.nlark.com/yuque/0/2022/png/32543531/1664871896605-00f88e72-4afb-4038-8c5c-69c34a7e6c17">https://cdn.nlark.com/yuque/0/2022/png/32543531/1664871896605-00f88e72-4afb-4038-8c5c-69c34a7e6c17</a>.<br>png#averageHue&#x3D;%23fbfbfa&amp;clientId&#x3D;u7ba0bf43-6d8f-4&amp;from&#x3D;paste&amp;height&#x3D;478&amp;id&#x3D;u84a86838&amp;name&#x3D;image.png&amp;originHeight&#x3D;597&amp;originWidth&#x3D;827&amp;originalType&#x3D;binary&amp;ratio&#x3D;1&amp;rotation&#x3D;0&amp;showTitle&#x3D;false&amp;size&#x3D;69726&amp;status&#x3D;done&amp;style&#x3D;shadow&amp;taskId&#x3D;u2c5dcef2-18ff-473d-8dc0-47ec68badf3&amp;title&#x3D;&amp;width&#x3D;661.6)<br><br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664871790303-9d8a4091-a940-4767-8135-00a6ca831d57.png" alt="image.png"><br><a name="Twjzd"></a></p><h3 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h3><p>二进制乘法不需要乘法表进行存储。十分方便</p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664872256196-9c3f454e-c8f4-4d30-9820-a544b539687f.png" alt="image.png"><br><br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664872573267-7c707b44-df0b-4dc5-a4ad-44ccb9d40808.png" alt="image.png"></p><p><a name="cziiN"></a></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664873083261-c5dfb876-e557-42c5-8267-8880d9263bf5.png" alt="image.png"></p><p><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664873700060-4153e091-b6ad-4e34-9db5-9e30599dd25d.png" alt="image.png"></p><p><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664873711104-44feb530-e235-43cf-8824-7c6e286fc498.png" alt="image.png"></p><p><br /><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1677227495378-49285cfa-2079-466a-aea7-983cbcde62d1.png" alt="image.png"></p><p><a name="OAWYS"></a></p><h4 id="出错"><a href="#出错" class="headerlink" title="出错"></a>出错</h4><ol><li>原码一位乘法</li></ol><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664874010621-a3a12e09-883b-487e-84c0-6cc18b625b17.png" alt="image.png"></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1664876294590-608360fa-eb5e-40ad-bea8-91cd0e461fc4.png" alt="image.png"></p><p><a name="IatBN"></a></p><h3 id="除法"><a href="#除法" class="headerlink" title="除法"></a>除法</h3><p><a name="fn65V"></a></p><h4 id="原码：恢复余数法"><a href="#原码：恢复余数法" class="headerlink" title="原码：恢复余数法"></a>原码：恢复余数法</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665579103517-21bc973e-b11d-4d6e-9dc4-9ff3f7a18596.png" alt="image.png"><br />余数逻辑左移是为了实现错位相减。因为手算时实际上是除数右移，而我们规定除数不移动时，则是余数左移 <br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665046084999-fcd74f9f-0fe8-47ad-86b9-488c58d7454f.png" alt="image.png"></p><p>优化：并行+硬件的节省<br />并行：<br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665046246364-e0791a34-797b-4388-89b4-9cb48fc432f3.png" alt="image.png"><br><a name="siEx8"></a></p><h4 id="原码：不恢复余数法"><a href="#原码：不恢复余数法" class="headerlink" title="原码：不恢复余数法"></a>原码：不恢复余数法</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665579191990-bdda3b92-bd88-4f85-92fb-d515840a9493.png" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665579365006-a43c0888-f001-4d5a-8fe4-87d7e335a295.png" alt="image.png"><br />若最后一步余数为负数，仍然需要恢复为正确余数<br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665579436894-84f3a9d4-7811-463d-8a7a-3b44b91052d5.png" alt="image.png"></p><p><a name="Qj7E8"></a></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><p><strong>余数和被除数的符号相同</strong><br><a name="KNCuv"></a></p><h4 id="补码：不恢复余数法"><a href="#补码：不恢复余数法" class="headerlink" title="补码：不恢复余数法"></a>补码：不恢复余数法</h4><p><strong>余数和除数相减：</strong></p><ul><li>如果余数和除数的符号相同：减法</li><li>如果余数和除数的符号不同：加法</li></ul><ol><li>够减：余数和新余数的符号不能变</li><li>不够减：余数和新余数的符号改变</li></ol><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665048069773-3951cb9f-66ca-47a0-950c-61e963f6fc6b.png" alt="image.png"></p><br /><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665579578780-d5692823-6614-40ad-a7b2-90686d44692f.png" alt="image.png"><br><a name="ML3zD"></a></p><h4 id="除法硬件改善"><a href="#除法硬件改善" class="headerlink" title="除法硬件改善"></a>除法硬件改善</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665047579085-5f0b98ff-e23e-4909-9617-03b56fa5a3bb.png" alt="image.png"><br><br /></p><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665047595553-58e0bc80-0076-41ca-b06a-e287844ffb3f.png" alt="image.png"><br /><strong>被除数移动了，除数就不需要移动了</strong><br><a name="xB2lR"></a></p><h4 id="除法运算总结"><a href="#除法运算总结" class="headerlink" title="除法运算总结"></a>除法运算总结</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665579646869-a44972c3-bead-470a-9bd7-42c6d1d185aa.png" alt="image.png"><br><a name="aHsWD"></a></p><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h3><p><a name="Dob89"></a></p><h4 id="乘法溢出"><a href="#乘法溢出" class="headerlink" title="乘法溢出"></a>乘法溢出</h4><p><img src="https://raw.githubusercontent.com/AustynDing/blog-img/main/1665460775408-5807ea34-f57e-4adf-a3b2-1ceb739a75cb.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
